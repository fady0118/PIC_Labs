

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 28 02:05:09 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0015                     _CCPR1L	set	21
   174     0007                     _PORTC	set	7
   175     0017                     _CCP1CON	set	23
   176     0012                     _T2CON	set	18
   177     0008                     _PORTD	set	8
   178     00BD                     _CCP1X	set	189
   179     00BC                     _CCP1Y	set	188
   180     0037                     _RB7	set	55
   181     0036                     _RB6	set	54
   182     0035                     _RB5	set	53
   183     0034                     _RB4	set	52
   184     0058                     _RBIF	set	88
   185     0059                     _INTF	set	89
   186     005B                     _RBIE	set	91
   187     005F                     _GIE	set	95
   188     005C                     _INTE	set	92
   189     0087                     _TRISC	set	135
   190     0092                     _PR2	set	146
   191     0088                     _TRISD	set	136
   192     0086                     _TRISB	set	134
   193     040E                     _INTEDG	set	1038
   194                           
   195                           	psect	cinit
   196     0011                     start_initialization:	
   197                           ; #config settings
   198                           
   199     0011                     __initialization:
   200     0011                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203     0011                     __end_of__initialization:
   204     0011  0183               	clrf	3
   205     0012  120A  118A  2898   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	cstackCOMMON
   208     0070                     __pcstackCOMMON:
   209     0070                     ?_Port_Init:
   210     0070                     ?_Timer2_Init:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ?_CCP_PWM:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ?_Enable_Interrupts:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ?_main:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ?_ISR:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ?i1_PWM_duty_cycle:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     i1PWM_duty_cycle@duty_cycle:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 2 bytes @ 0x0
   233     0070                     	ds	2
   234     0072                     ??i1_PWM_duty_cycle:
   235                           
   236                           ; 1 bytes @ 0x2
   237     0072                     	ds	2
   238     0074                     ??_ISR:
   239                           
   240                           ; 1 bytes @ 0x4
   241     0074                     	ds	3
   242     0077                     ??_Port_Init:
   243     0077                     ??_Timer2_Init:	
   244                           ; 1 bytes @ 0x7
   245                           
   246     0077                     ??_CCP_PWM:	
   247                           ; 1 bytes @ 0x7
   248                           
   249     0077                     ??_Enable_Interrupts:	
   250                           ; 1 bytes @ 0x7
   251                           
   252     0077                     ??_main:	
   253                           ; 1 bytes @ 0x7
   254                           
   255                           
   256                           	psect	cstackBANK0
   257     0020                     __pcstackBANK0:	
   258                           ; 1 bytes @ 0x7
   259                           
   260     0020                     ?_PWM_duty_cycle:
   261     0020                     PWM_duty_cycle@duty_cycle:	
   262                           ; 1 bytes @ 0x0
   263                           
   264                           
   265                           ; 2 bytes @ 0x0
   266     0020                     	ds	2
   267     0022                     ??_PWM_duty_cycle:
   268                           
   269                           ; 1 bytes @ 0x2
   270     0022                     	ds	2
   271                           
   272                           	psect	maintext
   273     0098                     __pmaintext:	
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 76 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : B00/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   293 ;;      Params:         0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels required when called: 4
   299 ;; This function calls:
   300 ;;		_CCP_PWM
   301 ;;		_Enable_Interrupts
   302 ;;		_Port_Init
   303 ;;		_Timer2_Init
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309     0098                     _main:	
   310                           ;psect for function _main
   311                           
   312     0098                     l711:	
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   315                           
   316                           
   317                           ;main.c: 77: Port_Init();
   318     0098  120A  118A  20E0  120A  118A  	fcall	_Port_Init
   319                           
   320                           ;main.c: 78: Timer2_Init();
   321     009D  120A  118A  20F0  120A  118A  	fcall	_Timer2_Init
   322                           
   323                           ;main.c: 79: CCP_PWM();
   324     00A2  120A  118A  20B0  120A  118A  	fcall	_CCP_PWM
   325     00A7                     l713:
   326                           
   327                           ;main.c: 80: Enable_Interrupts();
   328     00A7  120A  118A  20F7  120A  118A  	fcall	_Enable_Interrupts
   329     00AC                     l61:	
   330                           ;main.c: 81: while(1){
   331                           
   332     00AC                     l62:	
   333                           ;main.c: 83: }
   334                           
   335     00AC  28AC               	goto	l61
   336     00AD  120A  118A  280E   	ljmp	start
   337     00B0                     __end_of_main:
   338                           
   339                           	psect	text1
   340     00F0                     __ptext1:	
   341 ;; *************** function _Timer2_Init *****************
   342 ;; Defined at:
   343 ;;		line 53 in file "main.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0, btemp+1
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   357 ;;      Params:         0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0
   360 ;;      Totals:         0       0       0       0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels used: 1
   363 ;; Hardware stack levels required when called: 2
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371     00F0                     _Timer2_Init:	
   372                           ;psect for function _Timer2_Init
   373                           
   374     00F0                     l631:	
   375                           ;incstack = 0
   376                           ; Regs used in _Timer2_Init: [wreg+status,2+status,0+btemp+1]
   377                           
   378                           
   379                           ;main.c: 54: T2CON&=~0x03;
   380     00F0  30FC               	movlw	252
   381     00F1  00FF               	movwf	btemp+1
   382     00F2  087F               	movf	btemp+1,w
   383     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   384     00F4  1303               	bcf	3,6	;RP1=0, select bank0
   385     00F5  0592               	andwf	18,f	;volatile
   386     00F6                     l50:
   387     00F6  0008               	return
   388     00F7                     __end_of_Timer2_Init:
   389                           
   390                           	psect	text2
   391     00E0                     __ptext2:	
   392 ;; *************** function _Port_Init *****************
   393 ;; Defined at:
   394 ;;		line 42 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, btemp+1
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; Hardware stack levels required when called: 2
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422     00E0                     _Port_Init:	
   423                           ;psect for function _Port_Init
   424                           
   425     00E0                     l625:	
   426                           ;incstack = 0
   427                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   428                           
   429                           
   430                           ;main.c: 43:    TRISB|=0x01;
   431     00E0  1683               	bsf	3,5	;RP0=1, select bank1
   432     00E1  1303               	bcf	3,6	;RP1=0, select bank1
   433     00E2  1406               	bsf	6,0	;volatile
   434     00E3                     l627:
   435                           
   436                           ;main.c: 44:    TRISB|=0xF0;
   437     00E3  30F0               	movlw	240
   438     00E4  00FF               	movwf	btemp+1
   439     00E5  087F               	movf	btemp+1,w
   440     00E6  0486               	iorwf	6,f	;volatile
   441                           
   442                           ;main.c: 46:    TRISD&=~0x03;
   443     00E7  30FC               	movlw	252
   444     00E8  00FF               	movwf	btemp+1
   445     00E9  087F               	movf	btemp+1,w
   446     00EA  0588               	andwf	8,f	;volatile
   447     00EB                     l629:
   448                           
   449                           ;main.c: 47:    PORTD=0x02;
   450     00EB  3002               	movlw	2
   451     00EC  1283               	bcf	3,5	;RP0=0, select bank0
   452     00ED  1303               	bcf	3,6	;RP1=0, select bank0
   453     00EE  0088               	movwf	8	;volatile
   454     00EF                     l47:
   455     00EF  0008               	return
   456     00F0                     __end_of_Port_Init:
   457                           
   458                           	psect	text3
   459     00F7                     __ptext3:	
   460 ;; *************** function _Enable_Interrupts *****************
   461 ;; Defined at:
   462 ;;		line 69 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		None
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; Hardware stack levels required when called: 2
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490     00F7                     _Enable_Interrupts:	
   491                           ;psect for function _Enable_Interrupts
   492                           
   493     00F7                     l643:	
   494                           ;incstack = 0
   495                           ; Regs used in _Enable_Interrupts: []
   496                           
   497                           
   498                           ;main.c: 70: INTE=1;
   499     00F7  160B               	bsf	11,4	;volatile
   500                           
   501                           ;main.c: 71: INTEDG=1;
   502     00F8  1683               	bsf	3,5	;RP0=1, select bank1
   503     00F9  1303               	bcf	3,6	;RP1=0, select bank1
   504     00FA  1701               	bsf	1,6	;volatile
   505                           
   506                           ;main.c: 72: GIE=1;
   507     00FB  178B               	bsf	11,7	;volatile
   508                           
   509                           ;main.c: 73: RBIE=1;
   510     00FC  158B               	bsf	11,3	;volatile
   511     00FD                     l56:
   512     00FD  0008               	return
   513     00FE                     __end_of_Enable_Interrupts:
   514                           
   515                           	psect	text4
   516     00B0                     __ptext4:	
   517 ;; *************** function _CCP_PWM *****************
   518 ;; Defined at:
   519 ;;		line 57 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; Hardware stack levels required when called: 3
   540 ;; This function calls:
   541 ;;		_PWM_duty_cycle
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547     00B0                     _CCP_PWM:	
   548                           ;psect for function _CCP_PWM
   549                           
   550     00B0                     l697:	
   551                           ;incstack = 0
   552                           ; Regs used in _CCP_PWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   553                           
   554                           
   555                           ;main.c: 58: PR2=199;
   556     00B0  30C7               	movlw	199
   557     00B1  1683               	bsf	3,5	;RP0=1, select bank1
   558     00B2  1303               	bcf	3,6	;RP1=0, select bank1
   559     00B3  0092               	movwf	18	;volatile
   560     00B4                     l699:
   561                           
   562                           ;main.c: 59: TRISC&=~0x04;
   563     00B4  30FB               	movlw	251
   564     00B5  00FF               	movwf	btemp+1
   565     00B6  087F               	movf	btemp+1,w
   566     00B7  0587               	andwf	7,f	;volatile
   567     00B8                     l701:
   568                           
   569                           ;main.c: 60: CCP1CON|=0x0C;
   570     00B8  300C               	movlw	12
   571     00B9  00FF               	movwf	btemp+1
   572     00BA  087F               	movf	btemp+1,w
   573     00BB  1283               	bcf	3,5	;RP0=0, select bank0
   574     00BC  1303               	bcf	3,6	;RP1=0, select bank0
   575     00BD  0497               	iorwf	23,f	;volatile
   576     00BE                     l703:
   577                           
   578                           ;main.c: 61: T2CON|=0x04;
   579     00BE  1512               	bsf	18,2	;volatile
   580     00BF                     l705:
   581                           
   582                           ;main.c: 62: PWM_duty_cycle(0);
   583     00BF  3000               	movlw	0
   584     00C0  00A0               	movwf	PWM_duty_cycle@duty_cycle
   585     00C1  00A1               	movwf	PWM_duty_cycle@duty_cycle+1
   586     00C2  120A  118A  207E  120A  118A  	fcall	_PWM_duty_cycle
   587     00C7                     l53:
   588     00C7  0008               	return
   589     00C8                     __end_of_CCP_PWM:
   590                           
   591                           	psect	text5
   592     007E                     __ptext5:	
   593 ;; *************** function _PWM_duty_cycle *****************
   594 ;; Defined at:
   595 ;;		line 116 in file "main.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  duty_cycle      2    0[BANK0 ] unsigned short 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       2       0       0       0
   610 ;;      Locals:         0       0       0       0       0
   611 ;;      Temps:          0       2       0       0       0
   612 ;;      Totals:         0       4       0       0       0
   613 ;;Total ram usage:        4 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 2
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_CCP_PWM
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623     007E                     _PWM_duty_cycle:	
   624                           ;psect for function _PWM_duty_cycle
   625                           
   626     007E                     l693:	
   627                           ;incstack = 0
   628                           ; Regs used in _PWM_duty_cycle: [wreg+status,2+status,0]
   629                           
   630                           
   631                           ;main.c: 117: CCP1Y = duty_cycle & 1;
   632     007E  1283               	bcf	3,5	;RP0=0, select bank0
   633     007F  1303               	bcf	3,6	;RP1=0, select bank0
   634     0080  1820               	btfsc	PWM_duty_cycle@duty_cycle,0
   635     0081  2883               	goto	u141
   636     0082  2887               	goto	u140
   637     0083                     u141:
   638     0083  1283               	bcf	3,5	;RP0=0, select bank0
   639     0084  1303               	bcf	3,6	;RP1=0, select bank0
   640     0085  1617               	bsf	23,4	;volatile
   641     0086  288A               	goto	u154
   642     0087                     u140:
   643     0087  1283               	bcf	3,5	;RP0=0, select bank0
   644     0088  1303               	bcf	3,6	;RP1=0, select bank0
   645     0089  1217               	bcf	23,4	;volatile
   646     008A                     u154:
   647                           
   648                           ;main.c: 118: CCP1X = duty_cycle & 2;
   649     008A  1297               	bcf	23,5	;volatile
   650     008B                     l695:
   651                           
   652                           ;main.c: 119: CCPR1L = duty_cycle >> 2;
   653     008B  0821               	movf	PWM_duty_cycle@duty_cycle+1,w
   654     008C  00A3               	movwf	??_PWM_duty_cycle+1
   655     008D  0820               	movf	PWM_duty_cycle@duty_cycle,w
   656     008E  00A2               	movwf	??_PWM_duty_cycle
   657     008F  1003               	clrc
   658     0090  0CA3               	rrf	??_PWM_duty_cycle+1,f
   659     0091  0CA2               	rrf	??_PWM_duty_cycle,f
   660     0092  1003               	clrc
   661     0093  0CA3               	rrf	??_PWM_duty_cycle+1,f
   662     0094  0CA2               	rrf	??_PWM_duty_cycle,f
   663     0095  0822               	movf	??_PWM_duty_cycle,w
   664     0096  0095               	movwf	21	;volatile
   665     0097                     l77:
   666     0097  0008               	return
   667     0098                     __end_of_PWM_duty_cycle:
   668                           
   669                           	psect	text6
   670     0015                     __ptext6:	
   671 ;; *************** function _ISR *****************
   672 ;; Defined at:
   673 ;;		line 87 in file "main.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          3       0       0       0       0
   690 ;;      Totals:         3       0       0       0       0
   691 ;;Total ram usage:        3 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 1
   694 ;; This function calls:
   695 ;;		i1_PWM_duty_cycle
   696 ;; This function is called by:
   697 ;;		Interrupt level 1
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701     0015                     _ISR:	
   702                           ;psect for function _ISR
   703                           
   704     0015                     i1l715:
   705                           
   706                           ;main.c: 89:     if(INTF){
   707     0015  1C8B               	btfss	11,1	;volatile
   708     0016  2818               	goto	u18_21
   709     0017  2819               	goto	u18_20
   710     0018                     u18_21:
   711     0018  2820               	goto	i1l721
   712     0019                     u18_20:
   713     0019                     i1l717:
   714                           
   715                           ;main.c: 91:     PORTD^=0x03;
   716     0019  3003               	movlw	3
   717     001A  00FF               	movwf	btemp+1
   718     001B  087F               	movf	btemp+1,w
   719     001C  1283               	bcf	3,5	;RP0=0, select bank0
   720     001D  1303               	bcf	3,6	;RP1=0, select bank0
   721     001E  0688               	xorwf	8,f	;volatile
   722     001F                     i1l719:
   723                           
   724                           ;main.c: 92:     INTF=0;
   725     001F  108B               	bcf	11,1	;volatile
   726     0020                     i1l721:
   727                           
   728                           ;main.c: 94:     if(RBIF && RB4){
   729     0020  1C0B               	btfss	11,0	;volatile
   730     0021  2823               	goto	u19_21
   731     0022  2824               	goto	u19_20
   732     0023                     u19_21:
   733     0023  2839               	goto	i1l731
   734     0024                     u19_20:
   735     0024                     i1l723:
   736     0024  1283               	bcf	3,5	;RP0=0, select bank0
   737     0025  1303               	bcf	3,6	;RP1=0, select bank0
   738     0026  1E06               	btfss	6,4	;volatile
   739     0027  2829               	goto	u20_21
   740     0028  282A               	goto	u20_20
   741     0029                     u20_21:
   742     0029  2839               	goto	i1l731
   743     002A                     u20_20:
   744     002A                     i1l725:
   745                           
   746                           ;main.c: 95:             PWM_duty_cycle(0);
   747     002A  3000               	movlw	0
   748     002B  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   749     002C  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   750     002D  120A  118A  20C8  120A  118A  	fcall	i1_PWM_duty_cycle
   751     0032                     i1l727:
   752                           
   753                           ;main.c: 96:             PORTC&=~0x04;
   754     0032  30FB               	movlw	251
   755     0033  00FF               	movwf	btemp+1
   756     0034  087F               	movf	btemp+1,w
   757     0035  1283               	bcf	3,5	;RP0=0, select bank0
   758     0036  1303               	bcf	3,6	;RP1=0, select bank0
   759     0037  0587               	andwf	7,f	;volatile
   760     0038                     i1l729:
   761                           
   762                           ;main.c: 97:             RBIF=0;
   763     0038  100B               	bcf	11,0	;volatile
   764     0039                     i1l731:
   765                           
   766                           ;main.c: 99:     if(RBIF && RB5){
   767     0039  1C0B               	btfss	11,0	;volatile
   768     003A  283C               	goto	u21_21
   769     003B  283D               	goto	u21_20
   770     003C                     u21_21:
   771     003C  284D               	goto	i1l739
   772     003D                     u21_20:
   773     003D                     i1l733:
   774     003D  1283               	bcf	3,5	;RP0=0, select bank0
   775     003E  1303               	bcf	3,6	;RP1=0, select bank0
   776     003F  1E86               	btfss	6,5	;volatile
   777     0040  2842               	goto	u22_21
   778     0041  2843               	goto	u22_20
   779     0042                     u22_21:
   780     0042  284D               	goto	i1l739
   781     0043                     u22_20:
   782     0043                     i1l735:
   783                           
   784                           ;main.c: 100:             PWM_duty_cycle(267);
   785     0043  300B               	movlw	11
   786     0044  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   787     0045  3001               	movlw	1
   788     0046  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   789     0047  120A  118A  20C8  120A  118A  	fcall	i1_PWM_duty_cycle
   790     004C                     i1l737:
   791                           
   792                           ;main.c: 101:             RBIF=0;
   793     004C  100B               	bcf	11,0	;volatile
   794     004D                     i1l739:
   795                           
   796                           ;main.c: 103:     if(RBIF && RB6){
   797     004D  1C0B               	btfss	11,0	;volatile
   798     004E  2850               	goto	u23_21
   799     004F  2851               	goto	u23_20
   800     0050                     u23_21:
   801     0050  2861               	goto	i1l747
   802     0051                     u23_20:
   803     0051                     i1l741:
   804     0051  1283               	bcf	3,5	;RP0=0, select bank0
   805     0052  1303               	bcf	3,6	;RP1=0, select bank0
   806     0053  1F06               	btfss	6,6	;volatile
   807     0054  2856               	goto	u24_21
   808     0055  2857               	goto	u24_20
   809     0056                     u24_21:
   810     0056  2861               	goto	i1l747
   811     0057                     u24_20:
   812     0057                     i1l743:
   813                           
   814                           ;main.c: 104:             PWM_duty_cycle(534);
   815     0057  3016               	movlw	22
   816     0058  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   817     0059  3002               	movlw	2
   818     005A  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   819     005B  120A  118A  20C8  120A  118A  	fcall	i1_PWM_duty_cycle
   820     0060                     i1l745:
   821                           
   822                           ;main.c: 105:             RBIF=0;
   823     0060  100B               	bcf	11,0	;volatile
   824     0061                     i1l747:
   825                           
   826                           ;main.c: 108:     if(RBIF && RB7){
   827     0061  1C0B               	btfss	11,0	;volatile
   828     0062  2864               	goto	u25_21
   829     0063  2865               	goto	u25_20
   830     0064                     u25_21:
   831     0064  2875               	goto	i1l74
   832     0065                     u25_20:
   833     0065                     i1l749:
   834     0065  1283               	bcf	3,5	;RP0=0, select bank0
   835     0066  1303               	bcf	3,6	;RP1=0, select bank0
   836     0067  1F86               	btfss	6,7	;volatile
   837     0068  286A               	goto	u26_21
   838     0069  286B               	goto	u26_20
   839     006A                     u26_21:
   840     006A  2875               	goto	i1l74
   841     006B                     u26_20:
   842     006B                     i1l751:
   843                           
   844                           ;main.c: 109:             PWM_duty_cycle(800);
   845     006B  3020               	movlw	32
   846     006C  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   847     006D  3003               	movlw	3
   848     006E  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   849     006F  120A  118A  20C8  120A  118A  	fcall	i1_PWM_duty_cycle
   850     0074                     i1l753:
   851                           
   852                           ;main.c: 110:             RBIF=0;
   853     0074  100B               	bcf	11,0	;volatile
   854     0075                     i1l74:
   855     0075  0876               	movf	??_ISR+2,w
   856     0076  00FF               	movwf	btemp+1
   857     0077  0875               	movf	??_ISR+1,w
   858     0078  008A               	movwf	10
   859     0079  0E74               	swapf	??_ISR,w
   860     007A  0083               	movwf	3
   861     007B  0EFE               	swapf	btemp,f
   862     007C  0E7E               	swapf	btemp,w
   863     007D  0009               	retfie
   864     007E                     __end_of_ISR:
   865                           
   866                           	psect	intentry
   867     0004                     __pintentry:	
   868                           ;incstack = 0
   869                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   870                           
   871     0004                     interrupt_function:
   872     007E                     saved_w	set	btemp
   873     0004  00FE               	movwf	btemp
   874     0005  0E03               	swapf	3,w
   875     0006  00F4               	movwf	??_ISR
   876     0007  080A               	movf	10,w
   877     0008  00F5               	movwf	??_ISR+1
   878     0009  087F               	movf	btemp+1,w
   879     000A  00F6               	movwf	??_ISR+2
   880     000B  120A  118A  2815   	ljmp	_ISR
   881                           
   882                           	psect	text7
   883     00C8                     __ptext7:	
   884 ;; *************** function i1_PWM_duty_cycle *****************
   885 ;; Defined at:
   886 ;;		line 116 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  duty_cycle      2    0[COMMON] unsigned short 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         2       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0
   902 ;;      Temps:          2       0       0       0       0
   903 ;;      Totals:         4       0       0       0       0
   904 ;;Total ram usage:        4 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_ISR
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913     00C8                     i1_PWM_duty_cycle:	
   914                           ;psect for function i1_PWM_duty_cycle
   915                           
   916     00C8                     i1l707:	
   917                           ;incstack = 0
   918                           ; Regs used in i1_PWM_duty_cycle: [wreg+status,2+status,0]
   919                           
   920                           
   921                           ;main.c: 117: CCP1Y = duty_cycle & 1;
   922     00C8  1870               	btfsc	i1PWM_duty_cycle@duty_cycle,0
   923     00C9  28CB               	goto	u16_21
   924     00CA  28CF               	goto	u16_20
   925     00CB                     u16_21:
   926     00CB  1283               	bcf	3,5	;RP0=0, select bank0
   927     00CC  1303               	bcf	3,6	;RP1=0, select bank0
   928     00CD  1617               	bsf	23,4	;volatile
   929     00CE  28D2               	goto	u17_24
   930     00CF                     u16_20:
   931     00CF  1283               	bcf	3,5	;RP0=0, select bank0
   932     00D0  1303               	bcf	3,6	;RP1=0, select bank0
   933     00D1  1217               	bcf	23,4	;volatile
   934     00D2                     u17_24:
   935                           
   936                           ;main.c: 118: CCP1X = duty_cycle & 2;
   937     00D2  1297               	bcf	23,5	;volatile
   938     00D3                     i1l709:
   939                           
   940                           ;main.c: 119: CCPR1L = duty_cycle >> 2;
   941     00D3  0871               	movf	i1PWM_duty_cycle@duty_cycle+1,w
   942     00D4  00F3               	movwf	??i1_PWM_duty_cycle+1
   943     00D5  0870               	movf	i1PWM_duty_cycle@duty_cycle,w
   944     00D6  00F2               	movwf	??i1_PWM_duty_cycle
   945     00D7  1003               	clrc
   946     00D8  0CF3               	rrf	??i1_PWM_duty_cycle+1,f
   947     00D9  0CF2               	rrf	??i1_PWM_duty_cycle,f
   948     00DA  1003               	clrc
   949     00DB  0CF3               	rrf	??i1_PWM_duty_cycle+1,f
   950     00DC  0CF2               	rrf	??i1_PWM_duty_cycle,f
   951     00DD  0872               	movf	??i1_PWM_duty_cycle,w
   952     00DE  0095               	movwf	21	;volatile
   953     00DF                     i1l77:
   954     00DF  0008               	return
   955     00E0                     __end_ofi1_PWM_duty_cycle:
   956     007E                     btemp	set	126	;btemp
   957     007E                     wtemp0	set	126
   958                           
   959                           	psect	config
   960                           
   961                           ;Config register CONFIG @ 0x2007
   962                           ;	Oscillator Selection bits
   963                           ;	FOSC = XT, XT oscillator
   964                           ;	Watchdog Timer Enable bit
   965                           ;	WDTE = OFF, WDT disabled
   966                           ;	Power-up Timer Enable bit
   967                           ;	PWRTE = ON, PWRT enabled
   968                           ;	Brown-out Reset Enable bit
   969                           ;	BOREN = ON, BOR enabled
   970                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   971                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   972                           ;	Data EEPROM Memory Code Protection bit
   973                           ;	CPD = OFF, Data EEPROM code protection off
   974                           ;	Flash Program Memory Write Enable bits
   975                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   976                           ;	In-Circuit Debugger Mode bit
   977                           ;	DEBUG = 0x1, unprogrammed default
   978                           ;	Flash Program Memory Code Protection bit
   979                           ;	CP = OFF, Code protection off
   980     2007                     	org	8199
   981     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_PWM_duty_cycle

Critical Paths under _main in BANK0

    _CCP_PWM->_PWM_duty_cycle

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     320
                            _CCP_PWM
                  _Enable_Interrupts
                          _Port_Init
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Enable_Interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM                                              0     0      0     320
                     _PWM_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _PWM_duty_cycle                                       4     2      2     320
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0     148
                                              4 COMMON     3     3      0
                   i1_PWM_duty_cycle
 ---------------------------------------------------------------------------------
 (4) i1_PWM_duty_cycle                                     4     2      2     148
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP_PWM
     _PWM_duty_cycle
   _Enable_Interrupts
   _Port_Init
   _Timer2_Init

 _ISR (ROOT)
   i1_PWM_duty_cycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 28 02:05:09 2024

                        l50 00F6                          l53 00C7                          l61 00AC  
                        l62 00AC                          l47 00EF                          l56 00FD  
                        l77 0097    __end_ofi1_PWM_duty_cycle 00E0                         l701 00B8  
                       l703 00BE                         l631 00F0                         l711 0098  
                       l705 00BF                         l625 00E0                         l713 00A7  
                       l643 00F7                         l627 00E3                         l629 00EB  
                       l693 007E                         l695 008B                         l697 00B0  
                       l699 00B4                         _GIE 005F                         _RB4 0034  
                       _RB5 0035                         _RB6 0036                         _RB7 0037  
                       u140 0087                         u141 0083                         u154 008A  
                       _PR2 0092                         _ISR 0015             __end_of_CCP_PWM 00C8  
                      ?_ISR 0070                        _INTE 005C                        _INTF 0059  
                      _RBIE 005B                        _RBIF 0058                        i1l74 0075  
                      i1l77 00DF                        _main 0098                        btemp 007E  
                      start 000E                       ??_ISR 0074                       ?_main 0070  
                     _CCP1X 00BD                       _CCP1Y 00BC                       _T2CON 0012  
                     i1l721 0020                       i1l707 00C8                       i1l723 0024  
                     i1l731 0039                       i1l715 0015                       i1l709 00D3  
                     i1l741 0051                       i1l733 003D                       i1l725 002A  
                     i1l717 0019                       i1l751 006B                       i1l743 0057  
                     i1l735 0043                       i1l727 0032                       i1l719 001F  
                     i1l753 0074                       i1l745 0060                       i1l737 004C  
                     i1l729 0038                       i1l747 0061                       i1l739 004D  
                     i1l749 0065                       u20_20 002A                       u20_21 0029  
                     u21_20 003D                       u21_21 003C                       u22_20 0043  
                     u22_21 0042                       u23_20 0051                       u23_21 0050  
                     u16_20 00CF                       u24_20 0057                       u16_21 00CB  
                     u24_21 0056                       u25_20 0065                       u25_21 0064  
                     u17_24 00D2                       u26_20 006B                       u18_20 0019  
                     u26_21 006A                       u18_21 0018                       u19_20 0024  
                     u19_21 0023                       _PORTC 0007                       _PORTD 0008  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 00B0                   ??_CCP_PWM 0077  
                    ??_main 0077                      _CCPR1L 0015                      _INTEDG 040E  
             ??_Timer2_Init 0077                      saved_w 007E     __end_of__initialization 0011  
            __pcstackCOMMON 0070         __end_of_Timer2_Init 00F7           ?i1_PWM_duty_cycle 0070  
        ??i1_PWM_duty_cycle 0072           __end_of_Port_Init 00F0                  __pmaintext 0098  
                __pintentry 0004                     _CCP1CON 0017                     _CCP_PWM 00B0  
               _Timer2_Init 00F0                     __ptext1 00F0                     __ptext2 00E0  
                   __ptext3 00F7                     __ptext4 00B0                     __ptext5 007E  
                   __ptext6 0015                     __ptext7 00C8        end_of_initialization 0011  
            _PWM_duty_cycle 007E      __end_of_PWM_duty_cycle 0098    PWM_duty_cycle@duty_cycle 0020  
       start_initialization 0011                 __end_of_ISR 007E  i1PWM_duty_cycle@duty_cycle 0070  
                 _Port_Init 00E0           _Enable_Interrupts 00F7             ?_PWM_duty_cycle 0020  
                  ?_CCP_PWM 0070          ?_Enable_Interrupts 0070                   ___latbits 0002  
             __pcstackBANK0 0020         ??_Enable_Interrupts 0077                ?_Timer2_Init 0070  
 __end_of_Enable_Interrupts 00FE                  ?_Port_Init 0070           interrupt_function 0004  
          i1_PWM_duty_cycle 00C8                 ??_Port_Init 0077            ??_PWM_duty_cycle 0022  
                  intlevel1 0000  
