

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Apr 24 00:20:00 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     000E                     _TMR1	set	14
   171     0010                     _T1CON	set	16
   172     0006                     _PORTB	set	6
   173     005F                     _GIE	set	95
   174     005E                     _PEIE	set	94
   175     0060                     _TMR1IF	set	96
   176     0086                     _TRISB	set	134
   177     0460                     _TMR1IE	set	1120
   178                           
   179                           	psect	cinit
   180     0011                     start_initialization:	
   181                           ; #config settings
   182                           
   183     0011                     __initialization:
   184                           
   185                           ; Clear objects allocated to COMMON
   186     0011  01F3               	clrf	__pbssCOMMON& (0+127)
   187     0012                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190     0012                     __end_of__initialization:
   191     0012  0183               	clrf	3
   192     0013  120A  118A  2839   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMMON
   195     0073                     __pbssCOMMON:
   196     0073                     _Counter:
   197     0073                     	ds	1
   198                           
   199                           	psect	cstackCOMMON
   200     0070                     __pcstackCOMMON:
   201     0070                     ?_Port_Init:
   202     0070                     ?_Timer1_Init:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ?_Enable_Interrupts:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_ISR:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ??_ISR:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219     0070                     	ds	3
   220     0073                     ??_Port_Init:
   221     0073                     ??_Timer1_Init:	
   222                           ; 1 bytes @ 0x3
   223                           
   224     0073                     ??_Enable_Interrupts:	
   225                           ; 1 bytes @ 0x3
   226                           
   227     0073                     ??_main:	
   228                           ; 1 bytes @ 0x3
   229                           
   230                           
   231                           	psect	maintext
   232     0039                     __pmaintext:	
   233                           ; 1 bytes @ 0x3
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 38 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : B00/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   253 ;;      Params:         0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called: 2
   259 ;; This function calls:
   260 ;;		_Enable_Interrupts
   261 ;;		_Port_Init
   262 ;;		_Timer1_Init
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268     0039                     _main:	
   269                           ;psect for function _main
   270                           
   271     0039                     l598:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   274                           
   275                           
   276                           ;main.c: 39: Port_Init();
   277     0039  120A  118A  205D  120A  118A  	fcall	_Port_Init
   278                           
   279                           ;main.c: 40: Timer1_Init();
   280     003E  120A  118A  204C  120A  118A  	fcall	_Timer1_Init
   281     0043                     l600:
   282                           
   283                           ;main.c: 41: Enable_Interrupts();
   284     0043  120A  118A  206A  120A  118A  	fcall	_Enable_Interrupts
   285     0048                     l32:	
   286                           ;main.c: 42: while(1){
   287                           
   288     0048                     l33:	
   289                           ;main.c: 45: }
   290                           
   291     0048  2848               	goto	l32
   292     0049  120A  118A  280E   	ljmp	start
   293     004C                     __end_of_main:
   294                           
   295                           	psect	text1
   296     004C                     __ptext1:	
   297 ;; *************** function _Timer1_Init *****************
   298 ;; Defined at:
   299 ;;		line 23 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, btemp+1
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327     004C                     _Timer1_Init:	
   328                           ;psect for function _Timer1_Init
   329                           
   330     004C                     l588:	
   331                           ;incstack = 0
   332                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0+btemp+1]
   333                           
   334                           
   335                           ;main.c: 24: T1CON|=0x01;
   336     004C  1283               	bcf	3,5	;RP0=0, select bank0
   337     004D  1303               	bcf	3,6	;RP1=0, select bank0
   338     004E  1410               	bsf	16,0	;volatile
   339     004F                     l590:
   340                           
   341                           ;main.c: 25: T1CON&=~0x02;
   342     004F  30FD               	movlw	253
   343     0050  00FF               	movwf	btemp+1
   344     0051  087F               	movf	btemp+1,w
   345     0052  0590               	andwf	16,f	;volatile
   346     0053                     l592:
   347                           
   348                           ;main.c: 26: T1CON|=0x08;
   349     0053  1590               	bsf	16,3	;volatile
   350                           
   351                           ;main.c: 27: T1CON&=~0x30;
   352     0054  30CF               	movlw	207
   353     0055  00FF               	movwf	btemp+1
   354     0056  087F               	movf	btemp+1,w
   355     0057  0590               	andwf	16,f	;volatile
   356     0058                     l594:
   357                           
   358                           ;main.c: 28: TMR1=15536;
   359     0058  303C               	movlw	60
   360     0059  008F               	movwf	15	;volatile
   361     005A  30B0               	movlw	176
   362     005B  008E               	movwf	14	;volatile
   363     005C                     l24:
   364     005C  0008               	return
   365     005D                     __end_of_Timer1_Init:
   366                           
   367                           	psect	text2
   368     005D                     __ptext2:	
   369 ;; *************** function _Port_Init *****************
   370 ;; Defined at:
   371 ;;		line 18 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, btemp+1
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0
   388 ;;      Totals:         0       0       0       0       0
   389 ;;Total ram usage:        0 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399     005D                     _Port_Init:	
   400                           ;psect for function _Port_Init
   401                           
   402     005D                     l586:	
   403                           ;incstack = 0
   404                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   405                           
   406                           
   407                           ;main.c: 19:     TRISB&=~0x01;
   408     005D  30FE               	movlw	254
   409     005E  00FF               	movwf	btemp+1
   410     005F  087F               	movf	btemp+1,w
   411     0060  1683               	bsf	3,5	;RP0=1, select bank1
   412     0061  1303               	bcf	3,6	;RP1=0, select bank1
   413     0062  0586               	andwf	6,f	;volatile
   414                           
   415                           ;main.c: 20:     PORTB&=~0x01;
   416     0063  30FE               	movlw	254
   417     0064  00FF               	movwf	btemp+1
   418     0065  087F               	movf	btemp+1,w
   419     0066  1283               	bcf	3,5	;RP0=0, select bank0
   420     0067  1303               	bcf	3,6	;RP1=0, select bank0
   421     0068  0586               	andwf	6,f	;volatile
   422     0069                     l21:
   423     0069  0008               	return
   424     006A                     __end_of_Port_Init:
   425                           
   426                           	psect	text3
   427     006A                     __ptext3:	
   428 ;; *************** function _Enable_Interrupts *****************
   429 ;; Defined at:
   430 ;;		line 31 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		None
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458     006A                     _Enable_Interrupts:	
   459                           ;psect for function _Enable_Interrupts
   460                           
   461     006A                     l596:	
   462                           ;incstack = 0
   463                           ; Regs used in _Enable_Interrupts: []
   464                           
   465                           
   466                           ;main.c: 32: TMR1IE = 1;
   467     006A  1683               	bsf	3,5	;RP0=1, select bank1
   468     006B  1303               	bcf	3,6	;RP1=0, select bank1
   469     006C  140C               	bsf	12,0	;volatile
   470                           
   471                           ;main.c: 33: TMR1IF = 0;
   472     006D  1283               	bcf	3,5	;RP0=0, select bank0
   473     006E  1303               	bcf	3,6	;RP1=0, select bank0
   474     006F  100C               	bcf	12,0	;volatile
   475                           
   476                           ;main.c: 34: PEIE = 1;
   477     0070  170B               	bsf	11,6	;volatile
   478                           
   479                           ;main.c: 35: GIE = 1;
   480     0071  178B               	bsf	11,7	;volatile
   481     0072                     l27:
   482     0072  0008               	return
   483     0073                     __end_of_Enable_Interrupts:
   484                           
   485                           	psect	text4
   486     0016                     __ptext4:	
   487 ;; *************** function _ISR *****************
   488 ;; Defined at:
   489 ;;		line 48 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, btemp+1
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          3       0       0       0       0
   506 ;;      Totals:         3       0       0       0       0
   507 ;;Total ram usage:        3 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		Interrupt level 1
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516     0016                     _ISR:	
   517                           ;psect for function _ISR
   518                           
   519     0016                     i1l602:
   520                           
   521                           ;main.c: 49:     if(TMR1IF==1){
   522     0016  1283               	bcf	3,5	;RP0=0, select bank0
   523     0017  1303               	bcf	3,6	;RP1=0, select bank0
   524     0018  1C0C               	btfss	12,0	;volatile
   525     0019  281B               	goto	u1_21
   526     001A  281C               	goto	u1_20
   527     001B                     u1_21:
   528     001B  2830               	goto	i1l42
   529     001C                     u1_20:
   530     001C                     i1l604:
   531                           
   532                           ;main.c: 50:         Counter++;
   533     001C  3001               	movlw	1
   534     001D  00FF               	movwf	btemp+1
   535     001E  087F               	movf	btemp+1,w
   536     001F  07F3               	addwf	_Counter,f
   537     0020                     i1l606:
   538                           
   539                           ;main.c: 51:         if(Counter == 20){
   540     0020  3014               	movlw	20
   541     0021  0673               	xorwf	_Counter,w
   542     0022  1D03               	btfss	3,2
   543     0023  2825               	goto	u2_21
   544     0024  2826               	goto	u2_20
   545     0025                     u2_21:
   546     0025  282B               	goto	i1l612
   547     0026                     u2_20:
   548     0026                     i1l608:
   549                           
   550                           ;main.c: 52:             PORTB^=0x01;
   551     0026  3001               	movlw	1
   552     0027  00FF               	movwf	btemp+1
   553     0028  087F               	movf	btemp+1,w
   554     0029  0686               	xorwf	6,f	;volatile
   555     002A                     i1l610:
   556                           
   557                           ;main.c: 53:             Counter=0;
   558     002A  01F3               	clrf	_Counter
   559     002B                     i1l612:
   560                           
   561                           ;main.c: 55:         TMR1IF=0;
   562     002B  100C               	bcf	12,0	;volatile
   563     002C                     i1l614:
   564                           
   565                           ;main.c: 56:         TMR1=15536;
   566     002C  303C               	movlw	60
   567     002D  008F               	movwf	15	;volatile
   568     002E  30B0               	movlw	176
   569     002F  008E               	movwf	14	;volatile
   570     0030                     i1l42:
   571     0030  0872               	movf	??_ISR+2,w
   572     0031  00FF               	movwf	btemp+1
   573     0032  0871               	movf	??_ISR+1,w
   574     0033  008A               	movwf	10
   575     0034  0E70               	swapf	??_ISR,w
   576     0035  0083               	movwf	3
   577     0036  0EFE               	swapf	btemp,f
   578     0037  0E7E               	swapf	btemp,w
   579     0038  0009               	retfie
   580     0039                     __end_of_ISR:
   581     007E                     btemp	set	126	;btemp
   582     007E                     wtemp0	set	126
   583                           
   584                           	psect	intentry
   585     0004                     __pintentry:	
   586                           ;incstack = 0
   587                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   588                           
   589     0004                     interrupt_function:
   590     007E                     saved_w	set	btemp
   591     0004  00FE               	movwf	btemp
   592     0005  0E03               	swapf	3,w
   593     0006  00F0               	movwf	??_ISR
   594     0007  080A               	movf	10,w
   595     0008  00F1               	movwf	??_ISR+1
   596     0009  087F               	movf	btemp+1,w
   597     000A  00F2               	movwf	??_ISR+2
   598     000B  120A  118A  2816   	ljmp	_ISR
   599                           
   600                           	psect	config
   601                           
   602                           ;Config register CONFIG @ 0x2007
   603                           ;	Oscillator Selection bits
   604                           ;	FOSC = XT, XT oscillator
   605                           ;	Watchdog Timer Enable bit
   606                           ;	WDTE = OFF, WDT disabled
   607                           ;	Power-up Timer Enable bit
   608                           ;	PWRTE = ON, PWRT enabled
   609                           ;	Brown-out Reset Enable bit
   610                           ;	BOREN = ON, BOR enabled
   611                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   612                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   613                           ;	Data EEPROM Memory Code Protection bit
   614                           ;	CPD = OFF, Data EEPROM code protection off
   615                           ;	Flash Program Memory Write Enable bits
   616                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   617                           ;	In-Circuit Debugger Mode bit
   618                           ;	DEBUG = 0x1, unprogrammed default
   619                           ;	Flash Program Memory Code Protection bit
   620                           ;	CP = OFF, Code protection off
   621     2007                     	org	8199
   622     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _Enable_Interrupts
                          _Port_Init
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Enable_Interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Enable_Interrupts
   _Port_Init
   _Timer1_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Apr 24 00:20:00 2024

                       l21 0069                         l24 005C                         l32 0048  
                       l33 0048                         l27 0072                        l600 0043  
                      l590 004F                        l592 0053                        l586 005D  
                      l594 0058                        l596 006A                        l588 004C  
                      l598 0039                        _GIE 005F                        _ISR 0016  
                     ?_ISR 0070                       _PEIE 005E                       i1l42 0030  
                     _TMR1 000E                       u1_20 001C                       u1_21 001B  
                     u2_20 0026                       u2_21 0025                       _main 0039  
                     btemp 007E                       start 000E                      ??_ISR 0070  
                    ?_main 0070                      _T1CON 0010                      i1l610 002A  
                    i1l602 0016                      i1l612 002B                      i1l604 001C  
                    i1l614 002C                      i1l606 0020                      i1l608 0026  
                    _PORTB 0006                      _TRISB 0086                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 0011  
             __end_of_main 004C                     ??_main 0073                     _TMR1IE 0460  
                   _TMR1IF 0060              ??_Timer1_Init 0073                     saved_w 007E  
  __end_of__initialization 0012             __pcstackCOMMON 0070        __end_of_Timer1_Init 005D  
        __end_of_Port_Init 006A                 __pmaintext 0039                 __pintentry 0004  
                  _Counter 0073                _Timer1_Init 004C                    __ptext1 004C  
                  __ptext2 005D                    __ptext3 006A                    __ptext4 0016  
     end_of_initialization 0012        start_initialization 0011                __end_of_ISR 0039  
                _Port_Init 005D          _Enable_Interrupts 006A         ?_Enable_Interrupts 0070  
              __pbssCOMMON 0073                  ___latbits 0002        ??_Enable_Interrupts 0073  
             ?_Timer1_Init 0070  __end_of_Enable_Interrupts 0073                 ?_Port_Init 0070  
        interrupt_function 0004                ??_Port_Init 0073                   intlevel1 0000  
