

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 22 22:26:19 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171     075E                     __pidataBANK0:
   172                           
   173                           ;initializer for _sineLUT
   174     075E  3480               	retlw	128
   175     075F  348C               	retlw	140
   176     0760  3498               	retlw	152
   177     0761  34A5               	retlw	165
   178     0762  34B0               	retlw	176
   179     0763  34BC               	retlw	188
   180     0764  34C6               	retlw	198
   181     0765  34D0               	retlw	208
   182     0766  34DA               	retlw	218
   183     0767  34E2               	retlw	226
   184     0768  34EA               	retlw	234
   185     0769  34F0               	retlw	240
   186     076A  34F5               	retlw	245
   187     076B  34FA               	retlw	250
   188     076C  34FD               	retlw	253
   189     076D  34FE               	retlw	254
   190     076E  34FF               	retlw	255
   191     076F  34FE               	retlw	254
   192     0770  34FD               	retlw	253
   193     0771  34FA               	retlw	250
   194     0772  34F5               	retlw	245
   195     0773  34F0               	retlw	240
   196     0774  34EA               	retlw	234
   197     0775  34E2               	retlw	226
   198     0776  34DA               	retlw	218
   199     0777  34D0               	retlw	208
   200     0778  34C6               	retlw	198
   201     0779  34BC               	retlw	188
   202     077A  34B0               	retlw	176
   203     077B  34A5               	retlw	165
   204     077C  3498               	retlw	152
   205     077D  348C               	retlw	140
   206     077E  3480               	retlw	128
   207     077F  3473               	retlw	115
   208     0780  3467               	retlw	103
   209     0781  345A               	retlw	90
   210     0782  344F               	retlw	79
   211     0783  3443               	retlw	67
   212     0784  3439               	retlw	57
   213     0785  342F               	retlw	47
   214     0786  3425               	retlw	37
   215     0787  341D               	retlw	29
   216     0788  3415               	retlw	21
   217     0789  340F               	retlw	15
   218     078A  340A               	retlw	10
   219     078B  3405               	retlw	5
   220     078C  3402               	retlw	2
   221     078D  3401               	retlw	1
   222     078E  3400               	retlw	0
   223     078F  3401               	retlw	1
   224     0790  3402               	retlw	2
   225     0791  3405               	retlw	5
   226     0792  340A               	retlw	10
   227     0793  340F               	retlw	15
   228     0794  3415               	retlw	21
   229     0795  341D               	retlw	29
   230     0796  3425               	retlw	37
   231     0797  342F               	retlw	47
   232     0798  3439               	retlw	57
   233     0799  3443               	retlw	67
   234     079A  344F               	retlw	79
   235     079B  345A               	retlw	90
   236     079C  3467               	retlw	103
   237     079D  3473               	retlw	115
   238     0005                     _PORTA	set	5
   239     0006                     _PORTB	set	6
   240     0038                     _RC0	set	56
   241     0085                     _TRISA	set	133
   242     009F                     _ADCON1	set	159
   243     0086                     _TRISB	set	134
   244     0438                     _TRISC0	set	1080
   245                           
   246                           	psect	cinit
   247     07EE                     start_initialization:	
   248                           ; #config settings
   249                           
   250     07EE                     __initialization:
   251                           
   252                           ; Initialize objects allocated to BANK0
   253     07EE  1383               	bcf	3,7	;select IRP bank0
   254     07EF  3060               	movlw	low (__pdataBANK0+64)
   255     07F0  00FD               	movwf	btemp+-1
   256     07F1  3007               	movlw	high __pidataBANK0
   257     07F2  00FE               	movwf	btemp
   258     07F3  305E               	movlw	low __pidataBANK0
   259     07F4  00FF               	movwf	btemp+1
   260     07F5  3020               	movlw	low __pdataBANK0
   261     07F6  0084               	movwf	4
   262     07F7  120A  118A  273A  120A  118A  	fcall	init_ram0
   263     07FC                     end_of_initialization:	
   264                           ;End of C runtime variable initialization code
   265                           
   266     07FC                     __end_of__initialization:
   267     07FC  0183               	clrf	3
   268     07FD  120A  118A  2F9E   	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	dataBANK0
   271     0020                     __pdataBANK0:
   272     0020                     _sineLUT:
   273     0020                     	ds	64
   274                           
   275                           	psect	inittext
   276     0736                     init_fetch0:	
   277                           ;	Called with low address in FSR and high address in W
   278                           
   279     0736  087E               	movf	btemp,w
   280     0737  008A               	movwf	10
   281     0738  087F               	movf	btemp+1,w
   282     0739  0082               	movwf	2
   283     073A                     init_ram0:	
   284                           ;Called with:
   285                           ;	high address of idata address in btemp 
   286                           ;	low address of idata address in btemp+1 
   287                           ;	low address of data in FSR
   288                           ;	high address + 1 of data in btemp-1
   289                           
   290     073A  120A  118A  2736  120A  118A  	fcall	init_fetch0
   291     073F  0080               	movwf	0
   292     0740  0A84               	incf	4,f
   293     0741  0804               	movf	4,w
   294     0742  067D               	xorwf	btemp+-1,w
   295     0743  1903               	btfsc	3,2
   296     0744  3400               	retlw	0
   297     0745  0AFF               	incf	btemp+1,f
   298     0746  1903               	btfsc	3,2
   299     0747  0AFE               	incf	btemp,f
   300     0748  2F3A               	goto	init_ram0
   301                           
   302                           	psect	cstackCOMMON
   303     0070                     __pcstackCOMMON:
   304     0070                     ?_Piano_In:
   305     0070                     ??_Piano_In:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_port_init:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ??_port_init:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ??_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 1 bytes @ 0x0
   322     0070                     	ds	2
   323     0072                     main@PhaseAcc:
   324                           
   325                           ; 2 bytes @ 0x2
   326     0072                     	ds	2
   327     0074                     main@PhaseInc:
   328                           
   329                           ; 2 bytes @ 0x4
   330     0074                     	ds	2
   331                           
   332                           	psect	maintext
   333     079E                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 67 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  PhaseInc        2    4[COMMON] unsigned short 
   344 ;;  PhaseAcc        2    2[COMMON] unsigned short 
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : B00/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         4       0       0       0       0
   356 ;;      Temps:          2       0       0       0       0
   357 ;;      Totals:         6       0       0       0       0
   358 ;;Total ram usage:        6 bytes
   359 ;; Hardware stack levels required when called: 1
   360 ;; This function calls:
   361 ;;		_Piano_In
   362 ;;		_port_init
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368     079E                     _main:	
   369                           ;psect for function _main
   370                           
   371     079E                     l597:	
   372                           ;incstack = 0
   373                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   374                           
   375                           
   376                           ;main.c: 68:     port_init();
   377     079E  120A  118A  2749  120A  118A  	fcall	_port_init
   378     07A3                     l599:
   379                           
   380                           ;main.c: 69:     uint16_t PhaseAcc=0;
   381     07A3  01F2               	clrf	main@PhaseAcc
   382     07A4  01F3               	clrf	main@PhaseAcc+1
   383     07A5                     l601:
   384     07A5  2FBD               	goto	l615
   385     07A6                     l603:
   386                           
   387                           ;main.c: 75:                 PhaseInc=1834;
   388     07A6  302A               	movlw	42
   389     07A7  00F4               	movwf	main@PhaseInc
   390     07A8  3007               	movlw	7
   391     07A9  00F5               	movwf	main@PhaseInc+1
   392                           
   393                           ;main.c: 76:                 break;
   394     07AA  2FCF               	goto	l617
   395     07AB                     l605:
   396                           
   397                           ;main.c: 79:                 PhaseInc=4119;
   398     07AB  3017               	movlw	23
   399     07AC  00F4               	movwf	main@PhaseInc
   400     07AD  3010               	movlw	16
   401     07AE  00F5               	movwf	main@PhaseInc+1
   402                           
   403                           ;main.c: 80:                 break;
   404     07AF  2FCF               	goto	l617
   405     07B0                     l607:
   406                           
   407                           ;main.c: 83:                 PhaseInc=1156;
   408     07B0  3084               	movlw	132
   409     07B1  00F4               	movwf	main@PhaseInc
   410     07B2  3004               	movlw	4
   411     07B3  00F5               	movwf	main@PhaseInc+1
   412                           
   413                           ;main.c: 84:                 break;
   414     07B4  2FCF               	goto	l617
   415     07B5                     l609:
   416                           
   417                           ;main.c: 87:                 PhaseInc=9796;
   418     07B5  3044               	movlw	68
   419     07B6  00F4               	movwf	main@PhaseInc
   420     07B7  3026               	movlw	38
   421     07B8  00F5               	movwf	main@PhaseInc+1
   422                           
   423                           ;main.c: 88:                 break;
   424     07B9  2FCF               	goto	l617
   425     07BA                     l611:
   426                           
   427                           ;main.c: 90:                 PhaseInc=0;
   428     07BA  01F4               	clrf	main@PhaseInc
   429     07BB  01F5               	clrf	main@PhaseInc+1
   430                           
   431                           ;main.c: 91:                 break;
   432     07BC  2FCF               	goto	l617
   433     07BD                     l615:
   434     07BD  120A  118A  2732  120A  118A  	fcall	_Piano_In
   435                           
   436                           ; Switch size 1, requested type "simple"
   437                           ; Number of cases is 4, Range of values is 1 to 8
   438                           ; switch strategies available:
   439                           ; Name         Instructions Cycles
   440                           ; simple_byte           13     7 (average)
   441                           ; direct_byte           35    11 (fixed)
   442                           ; jumptable            263     9 (fixed)
   443                           ;	Chosen strategy is simple_byte
   444     07C2  3A01               	xorlw	1	; case 1
   445     07C3  1903               	skipnz
   446     07C4  2FA6               	goto	l603
   447     07C5  3A03               	xorlw	3	; case 2
   448     07C6  1903               	skipnz
   449     07C7  2FAB               	goto	l605
   450     07C8  3A06               	xorlw	6	; case 4
   451     07C9  1903               	skipnz
   452     07CA  2FB0               	goto	l607
   453     07CB  3A0C               	xorlw	12	; case 8
   454     07CC  1903               	skipnz
   455     07CD  2FB5               	goto	l609
   456     07CE  2FBA               	goto	l611
   457     07CF                     l617:
   458                           
   459                           ;main.c: 95:         PhaseAcc += PhaseInc;
   460     07CF  0874               	movf	main@PhaseInc,w
   461     07D0  07F2               	addwf	main@PhaseAcc,f
   462     07D1  1803               	skipnc
   463     07D2  0AF3               	incf	main@PhaseAcc+1,f
   464     07D3  0875               	movf	main@PhaseInc+1,w
   465     07D4  07F3               	addwf	main@PhaseAcc+1,f
   466     07D5                     l619:
   467                           
   468                           ;main.c: 96:         PORTB = sineLUT[PhaseAcc>>10];
   469     07D5  0873               	movf	main@PhaseAcc+1,w
   470     07D6  00F1               	movwf	??_main+1
   471     07D7  0872               	movf	main@PhaseAcc,w
   472     07D8  00F0               	movwf	??_main
   473     07D9  300A               	movlw	10
   474     07DA                     u15:
   475     07DA  1003               	clrc
   476     07DB  0CF1               	rrf	??_main+1,f
   477     07DC  0CF0               	rrf	??_main,f
   478     07DD  3EFF               	addlw	-1
   479     07DE  1D03               	skipz
   480     07DF  2FDA               	goto	u15
   481     07E0  0870               	movf	??_main,w
   482     07E1  3E20               	addlw	(low (_sineLUT| 0))& (0+255)
   483     07E2  0084               	movwf	4
   484     07E3  1383               	bcf	3,7	;select IRP bank0
   485     07E4  0800               	movf	0,w
   486     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   487     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   488     07E7  0086               	movwf	6	;volatile
   489     07E8                     l621:
   490                           
   491                           ;main.c: 97:         RC0 = ~RC0;
   492     07E8  3001               	movlw	1
   493     07E9  0687               	xorwf	7,f
   494     07EA  2FBD               	goto	l615
   495     07EB  120A  118A  2800   	ljmp	start
   496     07EE                     __end_of_main:
   497                           
   498                           	psect	text1
   499     0749                     __ptext1:	
   500 ;; *************** function _port_init *****************
   501 ;; Defined at:
   502 ;;		line 47 in file "main.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, btemp+1
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         0       0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529     0749                     _port_init:	
   530                           ;psect for function _port_init
   531                           
   532     0749                     l583:	
   533                           ;incstack = 0
   534                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   535                           
   536                           
   537                           ;main.c: 48: TRISB=0x00;
   538     0749  1683               	bsf	3,5	;RP0=1, select bank1
   539     074A  1303               	bcf	3,6	;RP1=0, select bank1
   540     074B  0186               	clrf	6	;volatile
   541                           
   542                           ;main.c: 49: PORTB=0;
   543     074C  1283               	bcf	3,5	;RP0=0, select bank0
   544     074D  1303               	bcf	3,6	;RP1=0, select bank0
   545     074E  0186               	clrf	6	;volatile
   546     074F                     l585:
   547                           
   548                           ;main.c: 50: ADCON1|=0x06;
   549     074F  3006               	movlw	6
   550     0750  00FF               	movwf	btemp+1
   551     0751  087F               	movf	btemp+1,w
   552     0752  1683               	bsf	3,5	;RP0=1, select bank1
   553     0753  1303               	bcf	3,6	;RP1=0, select bank1
   554     0754  049F               	iorwf	31,f	;volatile
   555     0755                     l587:
   556                           
   557                           ;main.c: 51: TRISA=0xFF;
   558     0755  30FF               	movlw	255
   559     0756  0085               	movwf	5	;volatile
   560     0757                     l589:
   561                           
   562                           ;main.c: 52: PORTA=0;
   563     0757  1283               	bcf	3,5	;RP0=0, select bank0
   564     0758  1303               	bcf	3,6	;RP1=0, select bank0
   565     0759  0185               	clrf	5	;volatile
   566     075A                     l591:
   567                           
   568                           ;main.c: 53: TRISC0=0;
   569     075A  1683               	bsf	3,5	;RP0=1, select bank1
   570     075B  1303               	bcf	3,6	;RP1=0, select bank1
   571     075C  1007               	bcf	7,0	;volatile
   572     075D                     l21:
   573     075D  0008               	return
   574     075E                     __end_of_port_init:
   575                           
   576                           	psect	text2
   577     0732                     __ptext2:	
   578 ;; *************** function _Piano_In *****************
   579 ;; Defined at:
   580 ;;		line 102 in file "main.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      unsigned char 
   587 ;; Registers used:
   588 ;;		wreg
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607     0732                     _Piano_In:	
   608                           ;psect for function _Piano_In
   609                           
   610     0732                     l593:	
   611                           ;incstack = 0
   612                           ; Regs used in _Piano_In: [wreg]
   613                           
   614                           
   615                           ;main.c: 103:     return PORTA;
   616     0732  1283               	bcf	3,5	;RP0=0, select bank0
   617     0733  1303               	bcf	3,6	;RP1=0, select bank0
   618     0734  0805               	movf	5,w	;volatile
   619     0735                     l39:
   620     0735  0008               	return
   621     0736                     __end_of_Piano_In:
   622     007E                     btemp	set	126	;btemp
   623     007E                     wtemp0	set	126
   624                           
   625                           	psect	config
   626                           
   627                           ;Config register CONFIG @ 0x2007
   628                           ;	Oscillator Selection bits
   629                           ;	FOSC = HS, HS oscillator
   630                           ;	Watchdog Timer Enable bit
   631                           ;	WDTE = OFF, WDT disabled
   632                           ;	Power-up Timer Enable bit
   633                           ;	PWRTE = ON, PWRT enabled
   634                           ;	Brown-out Reset Enable bit
   635                           ;	BOREN = ON, BOR enabled
   636                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   637                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   638                           ;	Data EEPROM Memory Code Protection bit
   639                           ;	CPD = OFF, Data EEPROM code protection off
   640                           ;	Flash Program Memory Write Enable bits
   641                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   642                           ;	In-Circuit Debugger Mode bit
   643                           ;	DEBUG = 0x1, unprogrammed default
   644                           ;	Flash Program Memory Code Protection bit
   645                           ;	CP = OFF, Code protection off
   646     2007                     	org	8199
   647     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      30
                                              0 COMMON     6     6      0
                           _Piano_In
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Piano_In                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Piano_In
   _port_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 22 22:26:19 2024

                      pc 0002                       l21 075D                       l39 0735  
                     u15 07DA                       fsr 0004                      l601 07A5  
                    l611 07BA                      l603 07A6                      l621 07E8  
                    l605 07AB                      l607 07B0                      l615 07BD  
                    l609 07B5                      l617 07CF                      l619 07D5  
                    l591 075A                      l583 0749                      l593 0732  
                    l585 074F                      l587 0755                      l589 0757  
                    l597 079E                      l599 07A3                      _RC0 0038  
                    fsr0 0004                      indf 0000             main@PhaseAcc 0072  
           main@PhaseInc 0074                     _main 079E                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE         __end_of_Piano_In 0736  
                 ??_main 0070                   _ADCON1 009F                   _TRISC0 0438  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 075E  
              ?_Piano_In 0070               __pmaintext 079E               ??_Piano_In 0070  
                __ptext1 0749                  __ptext2 0732                  _sineLUT 0020  
   end_of_initialization 07FC        __end_of_port_init 075E      start_initialization 07EE  
             init_fetch0 0736              __pdataBANK0 0020                ___latbits 0002  
              _port_init 0749                 _Piano_In 0732               ?_port_init 0070  
               init_ram0 073A              ??_port_init 0070  
