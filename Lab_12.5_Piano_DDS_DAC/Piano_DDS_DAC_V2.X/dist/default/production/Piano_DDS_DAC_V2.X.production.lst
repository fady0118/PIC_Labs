

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 22 22:30:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170     0762                     __pidataBANK0:
   171                           
   172                           ;initializer for _sineLUT
   173     0762  3480               	retlw	128
   174     0763  348C               	retlw	140
   175     0764  3498               	retlw	152
   176     0765  34A5               	retlw	165
   177     0766  34B0               	retlw	176
   178     0767  34BC               	retlw	188
   179     0768  34C6               	retlw	198
   180     0769  34D0               	retlw	208
   181     076A  34DA               	retlw	218
   182     076B  34E2               	retlw	226
   183     076C  34EA               	retlw	234
   184     076D  34F0               	retlw	240
   185     076E  34F5               	retlw	245
   186     076F  34FA               	retlw	250
   187     0770  34FD               	retlw	253
   188     0771  34FE               	retlw	254
   189     0772  34FF               	retlw	255
   190     0773  34FE               	retlw	254
   191     0774  34FD               	retlw	253
   192     0775  34FA               	retlw	250
   193     0776  34F5               	retlw	245
   194     0777  34F0               	retlw	240
   195     0778  34EA               	retlw	234
   196     0779  34E2               	retlw	226
   197     077A  34DA               	retlw	218
   198     077B  34D0               	retlw	208
   199     077C  34C6               	retlw	198
   200     077D  34BC               	retlw	188
   201     077E  34B0               	retlw	176
   202     077F  34A5               	retlw	165
   203     0780  3498               	retlw	152
   204     0781  348C               	retlw	140
   205     0782  3480               	retlw	128
   206     0783  3473               	retlw	115
   207     0784  3467               	retlw	103
   208     0785  345A               	retlw	90
   209     0786  344F               	retlw	79
   210     0787  3443               	retlw	67
   211     0788  3439               	retlw	57
   212     0789  342F               	retlw	47
   213     078A  3425               	retlw	37
   214     078B  341D               	retlw	29
   215     078C  3415               	retlw	21
   216     078D  340F               	retlw	15
   217     078E  340A               	retlw	10
   218     078F  3405               	retlw	5
   219     0790  3402               	retlw	2
   220     0791  3401               	retlw	1
   221     0792  3400               	retlw	0
   222     0793  3401               	retlw	1
   223     0794  3402               	retlw	2
   224     0795  3405               	retlw	5
   225     0796  340A               	retlw	10
   226     0797  340F               	retlw	15
   227     0798  3415               	retlw	21
   228     0799  341D               	retlw	29
   229     079A  3425               	retlw	37
   230     079B  342F               	retlw	47
   231     079C  3439               	retlw	57
   232     079D  3443               	retlw	67
   233     079E  344F               	retlw	79
   234     079F  345A               	retlw	90
   235     07A0  3467               	retlw	103
   236     07A1  3473               	retlw	115
   237     0005                     _PORTA	set	5
   238     0006                     _PORTB	set	6
   239     0038                     _RC0	set	56
   240     0085                     _TRISA	set	133
   241     009F                     _ADCON1	set	159
   242     0086                     _TRISB	set	134
   243     0438                     _TRISC0	set	1080
   244                           
   245                           	psect	cinit
   246     07EE                     start_initialization:	
   247                           ; #config settings
   248                           
   249     07EE                     __initialization:
   250                           
   251                           ; Initialize objects allocated to BANK0
   252     07EE  1383               	bcf	3,7	;select IRP bank0
   253     07EF  3060               	movlw	low (__pdataBANK0+64)
   254     07F0  00FD               	movwf	btemp+-1
   255     07F1  3007               	movlw	high __pidataBANK0
   256     07F2  00FE               	movwf	btemp
   257     07F3  3062               	movlw	low __pidataBANK0
   258     07F4  00FF               	movwf	btemp+1
   259     07F5  3020               	movlw	low __pdataBANK0
   260     07F6  0084               	movwf	4
   261     07F7  120A  118A  273E  120A  118A  	fcall	init_ram0
   262     07FC                     end_of_initialization:	
   263                           ;End of C runtime variable initialization code
   264                           
   265     07FC                     __end_of__initialization:
   266     07FC  0183               	clrf	3
   267     07FD  120A  118A  2FA2   	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	dataBANK0
   270     0020                     __pdataBANK0:
   271     0020                     _sineLUT:
   272     0020                     	ds	64
   273                           
   274                           	psect	inittext
   275     073A                     init_fetch0:	
   276                           ;	Called with low address in FSR and high address in W
   277                           
   278     073A  087E               	movf	btemp,w
   279     073B  008A               	movwf	10
   280     073C  087F               	movf	btemp+1,w
   281     073D  0082               	movwf	2
   282     073E                     init_ram0:	
   283                           ;Called with:
   284                           ;	high address of idata address in btemp 
   285                           ;	low address of idata address in btemp+1 
   286                           ;	low address of data in FSR
   287                           ;	high address + 1 of data in btemp-1
   288                           
   289     073E  120A  118A  273A  120A  118A  	fcall	init_fetch0
   290     0743  0080               	movwf	0
   291     0744  0A84               	incf	4,f
   292     0745  0804               	movf	4,w
   293     0746  067D               	xorwf	btemp+-1,w
   294     0747  1903               	btfsc	3,2
   295     0748  3400               	retlw	0
   296     0749  0AFF               	incf	btemp+1,f
   297     074A  1903               	btfsc	3,2
   298     074B  0AFE               	incf	btemp,f
   299     074C  2F3E               	goto	init_ram0
   300                           
   301                           	psect	cstackCOMMON
   302     0070                     __pcstackCOMMON:
   303     0070                     ?_port_init:
   304     0070                     ??_port_init:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_main:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ??_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313                           
   314                           ; 1 bytes @ 0x0
   315     0070                     	ds	2
   316     0072                     main@PhaseAcc:
   317                           
   318                           ; 2 bytes @ 0x2
   319     0072                     	ds	2
   320     0074                     main@PhaseInc:
   321                           
   322                           ; 2 bytes @ 0x4
   323     0074                     	ds	2
   324                           
   325                           	psect	maintext
   326     07A2                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 65 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  PhaseInc        2    4[COMMON] unsigned short 
   337 ;;  PhaseAcc        2    2[COMMON] unsigned short 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : B00/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   347 ;;      Params:         0       0       0       0       0
   348 ;;      Locals:         4       0       0       0       0
   349 ;;      Temps:          2       0       0       0       0
   350 ;;      Totals:         6       0       0       0       0
   351 ;;Total ram usage:        6 bytes
   352 ;; Hardware stack levels required when called: 1
   353 ;; This function calls:
   354 ;;		_port_init
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360     07A2                     _main:	
   361                           ;psect for function _main
   362                           
   363     07A2                     l588:	
   364                           ;incstack = 0
   365                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   366                           
   367                           
   368                           ;main.c: 66:     port_init();
   369     07A2  120A  118A  274D  120A  118A  	fcall	_port_init
   370     07A7                     l590:
   371                           
   372                           ;main.c: 67:     uint16_t PhaseAcc=0;
   373     07A7  01F2               	clrf	main@PhaseAcc
   374     07A8  01F3               	clrf	main@PhaseAcc+1
   375     07A9                     l592:
   376     07A9  2FC1               	goto	l606
   377     07AA                     l594:
   378                           
   379                           ;main.c: 73:                 PhaseInc=1834;
   380     07AA  302A               	movlw	42
   381     07AB  00F4               	movwf	main@PhaseInc
   382     07AC  3007               	movlw	7
   383     07AD  00F5               	movwf	main@PhaseInc+1
   384                           
   385                           ;main.c: 74:                 break;
   386     07AE  2FD1               	goto	l608
   387     07AF                     l596:
   388                           
   389                           ;main.c: 77:                 PhaseInc=4119;
   390     07AF  3017               	movlw	23
   391     07B0  00F4               	movwf	main@PhaseInc
   392     07B1  3010               	movlw	16
   393     07B2  00F5               	movwf	main@PhaseInc+1
   394                           
   395                           ;main.c: 78:                 break;
   396     07B3  2FD1               	goto	l608
   397     07B4                     l598:
   398                           
   399                           ;main.c: 81:                 PhaseInc=1156;
   400     07B4  3084               	movlw	132
   401     07B5  00F4               	movwf	main@PhaseInc
   402     07B6  3004               	movlw	4
   403     07B7  00F5               	movwf	main@PhaseInc+1
   404                           
   405                           ;main.c: 82:                 break;
   406     07B8  2FD1               	goto	l608
   407     07B9                     l600:
   408                           
   409                           ;main.c: 85:                 PhaseInc=9796;
   410     07B9  3044               	movlw	68
   411     07BA  00F4               	movwf	main@PhaseInc
   412     07BB  3026               	movlw	38
   413     07BC  00F5               	movwf	main@PhaseInc+1
   414                           
   415                           ;main.c: 86:                 break;
   416     07BD  2FD1               	goto	l608
   417     07BE                     l602:
   418                           
   419                           ;main.c: 88:                 PhaseInc=0;
   420     07BE  01F4               	clrf	main@PhaseInc
   421     07BF  01F5               	clrf	main@PhaseInc+1
   422                           
   423                           ;main.c: 89:                 break;
   424     07C0  2FD1               	goto	l608
   425     07C1                     l606:
   426     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   427     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   428     07C3  0805               	movf	5,w	;volatile
   429                           
   430                           ; Switch size 1, requested type "simple"
   431                           ; Number of cases is 4, Range of values is 1 to 8
   432                           ; switch strategies available:
   433                           ; Name         Instructions Cycles
   434                           ; simple_byte           13     7 (average)
   435                           ; direct_byte           35    11 (fixed)
   436                           ; jumptable            263     9 (fixed)
   437                           ;	Chosen strategy is simple_byte
   438     07C4  3A01               	xorlw	1	; case 1
   439     07C5  1903               	skipnz
   440     07C6  2FAA               	goto	l594
   441     07C7  3A03               	xorlw	3	; case 2
   442     07C8  1903               	skipnz
   443     07C9  2FAF               	goto	l596
   444     07CA  3A06               	xorlw	6	; case 4
   445     07CB  1903               	skipnz
   446     07CC  2FB4               	goto	l598
   447     07CD  3A0C               	xorlw	12	; case 8
   448     07CE  1903               	skipnz
   449     07CF  2FB9               	goto	l600
   450     07D0  2FBE               	goto	l602
   451     07D1                     l608:
   452                           
   453                           ;main.c: 93:         PhaseAcc += PhaseInc;
   454     07D1  0874               	movf	main@PhaseInc,w
   455     07D2  07F2               	addwf	main@PhaseAcc,f
   456     07D3  1803               	skipnc
   457     07D4  0AF3               	incf	main@PhaseAcc+1,f
   458     07D5  0875               	movf	main@PhaseInc+1,w
   459     07D6  07F3               	addwf	main@PhaseAcc+1,f
   460     07D7                     l610:
   461                           
   462                           ;main.c: 94:         PORTB = sineLUT[PhaseAcc>>10];
   463     07D7  0873               	movf	main@PhaseAcc+1,w
   464     07D8  00F1               	movwf	??_main+1
   465     07D9  0872               	movf	main@PhaseAcc,w
   466     07DA  00F0               	movwf	??_main
   467     07DB  300A               	movlw	10
   468     07DC                     u15:
   469     07DC  1003               	clrc
   470     07DD  0CF1               	rrf	??_main+1,f
   471     07DE  0CF0               	rrf	??_main,f
   472     07DF  3EFF               	addlw	-1
   473     07E0  1D03               	skipz
   474     07E1  2FDC               	goto	u15
   475     07E2  0870               	movf	??_main,w
   476     07E3  3E20               	addlw	(low (_sineLUT| 0))& (0+255)
   477     07E4  0084               	movwf	4
   478     07E5  1383               	bcf	3,7	;select IRP bank0
   479     07E6  0800               	movf	0,w
   480     07E7  0086               	movwf	6	;volatile
   481     07E8                     l612:
   482                           
   483                           ;main.c: 95:         RC0 = ~RC0;
   484     07E8  3001               	movlw	1
   485     07E9  0687               	xorwf	7,f
   486     07EA  2FC1               	goto	l606
   487     07EB  120A  118A  2800   	ljmp	start
   488     07EE                     __end_of_main:
   489                           
   490                           	psect	text1
   491     074D                     __ptext1:	
   492 ;; *************** function _port_init *****************
   493 ;; Defined at:
   494 ;;		line 45 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, btemp+1
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521     074D                     _port_init:	
   522                           ;psect for function _port_init
   523                           
   524     074D                     l578:	
   525                           ;incstack = 0
   526                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   527                           
   528                           
   529                           ;main.c: 46: TRISB=0x00;
   530     074D  1683               	bsf	3,5	;RP0=1, select bank1
   531     074E  1303               	bcf	3,6	;RP1=0, select bank1
   532     074F  0186               	clrf	6	;volatile
   533                           
   534                           ;main.c: 47: PORTB=0;
   535     0750  1283               	bcf	3,5	;RP0=0, select bank0
   536     0751  1303               	bcf	3,6	;RP1=0, select bank0
   537     0752  0186               	clrf	6	;volatile
   538     0753                     l580:
   539                           
   540                           ;main.c: 48: ADCON1|=0x06;
   541     0753  3006               	movlw	6
   542     0754  00FF               	movwf	btemp+1
   543     0755  087F               	movf	btemp+1,w
   544     0756  1683               	bsf	3,5	;RP0=1, select bank1
   545     0757  1303               	bcf	3,6	;RP1=0, select bank1
   546     0758  049F               	iorwf	31,f	;volatile
   547     0759                     l582:
   548                           
   549                           ;main.c: 49: TRISA=0xFF;
   550     0759  30FF               	movlw	255
   551     075A  0085               	movwf	5	;volatile
   552     075B                     l584:
   553                           
   554                           ;main.c: 50: PORTA=0;
   555     075B  1283               	bcf	3,5	;RP0=0, select bank0
   556     075C  1303               	bcf	3,6	;RP1=0, select bank0
   557     075D  0185               	clrf	5	;volatile
   558     075E                     l586:
   559                           
   560                           ;main.c: 51: TRISC0=0;
   561     075E  1683               	bsf	3,5	;RP0=1, select bank1
   562     075F  1303               	bcf	3,6	;RP1=0, select bank1
   563     0760  1007               	bcf	7,0	;volatile
   564     0761                     l19:
   565     0761  0008               	return
   566     0762                     __end_of_port_init:
   567     007E                     btemp	set	126	;btemp
   568     007E                     wtemp0	set	126
   569                           
   570                           	psect	config
   571                           
   572                           ;Config register CONFIG @ 0x2007
   573                           ;	Oscillator Selection bits
   574                           ;	FOSC = HS, HS oscillator
   575                           ;	Watchdog Timer Enable bit
   576                           ;	WDTE = OFF, WDT disabled
   577                           ;	Power-up Timer Enable bit
   578                           ;	PWRTE = ON, PWRT enabled
   579                           ;	Brown-out Reset Enable bit
   580                           ;	BOREN = ON, BOR enabled
   581                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   582                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   583                           ;	Data EEPROM Memory Code Protection bit
   584                           ;	CPD = OFF, Data EEPROM code protection off
   585                           ;	Flash Program Memory Write Enable bits
   586                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   587                           ;	In-Circuit Debugger Mode bit
   588                           ;	DEBUG = 0x1, unprogrammed default
   589                           ;	Flash Program Memory Code Protection bit
   590                           ;	CP = OFF, Code protection off
   591     2007                     	org	8199
   592     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      30
                                              0 COMMON     6     6      0
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _port_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 22 22:30:18 2024

                      pc 0002                       l19 0761                       u15 07DC  
                     fsr 0004                      l600 07B9                      l610 07D7  
                    l602 07BE                      l612 07E8                      l606 07C1  
                    l608 07D1                      l580 0753                      l582 0759  
                    l590 07A7                      l584 075B                      l592 07A9  
                    l586 075E                      l578 074D                      l594 07AA  
                    l596 07AF                      l588 07A2                      l598 07B4  
                    _RC0 0038                      fsr0 0004                      indf 0000  
           main@PhaseAcc 0072             main@PhaseInc 0074                     _main 07A2  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0070                   _ADCON1 009F                   _TRISC0 0438  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0762  
             __pmaintext 07A2                  __ptext1 074D                  _sineLUT 0020  
   end_of_initialization 07FC        __end_of_port_init 0762      start_initialization 07EE  
             init_fetch0 073A              __pdataBANK0 0020                ___latbits 0002  
              _port_init 074D               ?_port_init 0070                 init_ram0 073E  
            ??_port_init 0070  
