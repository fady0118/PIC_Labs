

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 22 18:02:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170     0766                     __pidataBANK0:
   171                           
   172                           ;initializer for _sineLUT
   173     0766  3480               	retlw	128
   174     0767  348C               	retlw	140
   175     0768  3498               	retlw	152
   176     0769  34A5               	retlw	165
   177     076A  34B0               	retlw	176
   178     076B  34BC               	retlw	188
   179     076C  34C6               	retlw	198
   180     076D  34D0               	retlw	208
   181     076E  34DA               	retlw	218
   182     076F  34E2               	retlw	226
   183     0770  34EA               	retlw	234
   184     0771  34F0               	retlw	240
   185     0772  34F5               	retlw	245
   186     0773  34FA               	retlw	250
   187     0774  34FD               	retlw	253
   188     0775  34FE               	retlw	254
   189     0776  34FF               	retlw	255
   190     0777  34FE               	retlw	254
   191     0778  34FD               	retlw	253
   192     0779  34FA               	retlw	250
   193     077A  34F5               	retlw	245
   194     077B  34F0               	retlw	240
   195     077C  34EA               	retlw	234
   196     077D  34E2               	retlw	226
   197     077E  34DA               	retlw	218
   198     077F  34D0               	retlw	208
   199     0780  34C6               	retlw	198
   200     0781  34BC               	retlw	188
   201     0782  34B0               	retlw	176
   202     0783  34A5               	retlw	165
   203     0784  3498               	retlw	152
   204     0785  348C               	retlw	140
   205     0786  3480               	retlw	128
   206     0787  3473               	retlw	115
   207     0788  3467               	retlw	103
   208     0789  345A               	retlw	90
   209     078A  344F               	retlw	79
   210     078B  3443               	retlw	67
   211     078C  3439               	retlw	57
   212     078D  342F               	retlw	47
   213     078E  3425               	retlw	37
   214     078F  341D               	retlw	29
   215     0790  3415               	retlw	21
   216     0791  340F               	retlw	15
   217     0792  340A               	retlw	10
   218     0793  3405               	retlw	5
   219     0794  3402               	retlw	2
   220     0795  3401               	retlw	1
   221     0796  3400               	retlw	0
   222     0797  3401               	retlw	1
   223     0798  3402               	retlw	2
   224     0799  3405               	retlw	5
   225     079A  340A               	retlw	10
   226     079B  340F               	retlw	15
   227     079C  3415               	retlw	21
   228     079D  341D               	retlw	29
   229     079E  3425               	retlw	37
   230     079F  342F               	retlw	47
   231     07A0  3439               	retlw	57
   232     07A1  3443               	retlw	67
   233     07A2  344F               	retlw	79
   234     07A3  345A               	retlw	90
   235     07A4  3467               	retlw	103
   236     07A5  3473               	retlw	115
   237     0005                     _PORTA	set	5
   238     0006                     _PORTB	set	6
   239     0038                     _RC0	set	56
   240     002B                     _RA3	set	43
   241     002A                     _RA2	set	42
   242     0029                     _RA1	set	41
   243     0028                     _RA0	set	40
   244     0085                     _TRISA	set	133
   245     009F                     _ADCON1	set	159
   246     0086                     _TRISB	set	134
   247     0438                     _TRISC0	set	1080
   248                           
   249                           	psect	cinit
   250     07EE                     start_initialization:	
   251                           ; #config settings
   252                           
   253     07EE                     __initialization:
   254                           
   255                           ; Initialize objects allocated to BANK0
   256     07EE  1383               	bcf	3,7	;select IRP bank0
   257     07EF  3060               	movlw	low (__pdataBANK0+64)
   258     07F0  00FD               	movwf	btemp+-1
   259     07F1  3007               	movlw	high __pidataBANK0
   260     07F2  00FE               	movwf	btemp
   261     07F3  3066               	movlw	low __pidataBANK0
   262     07F4  00FF               	movwf	btemp+1
   263     07F5  3020               	movlw	low __pdataBANK0
   264     07F6  0084               	movwf	4
   265     07F7  120A  118A  2742  120A  118A  	fcall	init_ram0
   266     07FC                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269     07FC                     __end_of__initialization:
   270     07FC  0183               	clrf	3
   271     07FD  120A  118A  2FA6   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	dataBANK0
   274     0020                     __pdataBANK0:
   275     0020                     _sineLUT:
   276     0020                     	ds	64
   277                           
   278                           	psect	inittext
   279     073E                     init_fetch0:	
   280                           ;	Called with low address in FSR and high address in W
   281                           
   282     073E  087E               	movf	btemp,w
   283     073F  008A               	movwf	10
   284     0740  087F               	movf	btemp+1,w
   285     0741  0082               	movwf	2
   286     0742                     init_ram0:	
   287                           ;Called with:
   288                           ;	high address of idata address in btemp 
   289                           ;	low address of idata address in btemp+1 
   290                           ;	low address of data in FSR
   291                           ;	high address + 1 of data in btemp-1
   292                           
   293     0742  120A  118A  273E  120A  118A  	fcall	init_fetch0
   294     0747  0080               	movwf	0
   295     0748  0A84               	incf	4,f
   296     0749  0804               	movf	4,w
   297     074A  067D               	xorwf	btemp+-1,w
   298     074B  1903               	btfsc	3,2
   299     074C  3400               	retlw	0
   300     074D  0AFF               	incf	btemp+1,f
   301     074E  1903               	btfsc	3,2
   302     074F  0AFE               	incf	btemp,f
   303     0750  2F42               	goto	init_ram0
   304                           
   305                           	psect	cstackCOMMON
   306     0070                     __pcstackCOMMON:
   307     0070                     ?_port_init:
   308     0070                     ??_port_init:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ??_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 1 bytes @ 0x0
   319     0070                     	ds	2
   320     0072                     main@PhaseAcc:
   321                           
   322                           ; 2 bytes @ 0x2
   323     0072                     	ds	2
   324     0074                     main@PhaseInc:
   325                           
   326                           ; 2 bytes @ 0x4
   327     0074                     	ds	2
   328                           
   329                           	psect	maintext
   330     07A6                     __pmaintext:	
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 62 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  PhaseInc        2    4[COMMON] unsigned short 
   341 ;;  PhaseAcc        2    2[COMMON] unsigned short 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B00/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         4       0       0       0       0
   353 ;;      Temps:          2       0       0       0       0
   354 ;;      Totals:         6       0       0       0       0
   355 ;;Total ram usage:        6 bytes
   356 ;; Hardware stack levels required when called: 1
   357 ;; This function calls:
   358 ;;		_port_init
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364     07A6                     _main:	
   365                           ;psect for function _main
   366                           
   367     07A6                     l593:	
   368                           ;incstack = 0
   369                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   370                           
   371                           
   372                           ;main.c: 63:     port_init();
   373     07A6  120A  118A  2751  120A  118A  	fcall	_port_init
   374     07AB                     l595:
   375                           
   376                           ;main.c: 64:     uint16_t PhaseAcc=0;
   377     07AB  01F2               	clrf	main@PhaseAcc
   378     07AC  01F3               	clrf	main@PhaseAcc+1
   379     07AD                     l597:
   380                           
   381                           ;main.c: 65:     uint16_t PhaseInc=0;
   382     07AD  01F4               	clrf	main@PhaseInc
   383     07AE  01F5               	clrf	main@PhaseInc+1
   384     07AF                     l599:
   385                           
   386                           ;main.c: 67:     {;main.c: 68:         if(RA0){
   387     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   388     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   389     07B1  1C05               	btfss	5,0	;volatile
   390     07B2  2FB4               	goto	u11
   391     07B3  2FB5               	goto	u10
   392     07B4                     u11:
   393     07B4  2FB9               	goto	l603
   394     07B5                     u10:
   395     07B5                     l601:
   396                           
   397                           ;main.c: 69:             PhaseInc=1834;
   398     07B5  302A               	movlw	42
   399     07B6  00F4               	movwf	main@PhaseInc
   400     07B7  3007               	movlw	7
   401     07B8  00F5               	movwf	main@PhaseInc+1
   402     07B9                     l603:
   403                           
   404                           ;main.c: 71:         if(RA1){
   405     07B9  1C85               	btfss	5,1	;volatile
   406     07BA  2FBC               	goto	u21
   407     07BB  2FBD               	goto	u20
   408     07BC                     u21:
   409     07BC  2FC1               	goto	l607
   410     07BD                     u20:
   411     07BD                     l605:
   412                           
   413                           ;main.c: 72:             PhaseInc=4119;
   414     07BD  3017               	movlw	23
   415     07BE  00F4               	movwf	main@PhaseInc
   416     07BF  3010               	movlw	16
   417     07C0  00F5               	movwf	main@PhaseInc+1
   418     07C1                     l607:
   419                           
   420                           ;main.c: 74:         if(RA2){
   421     07C1  1D05               	btfss	5,2	;volatile
   422     07C2  2FC4               	goto	u31
   423     07C3  2FC5               	goto	u30
   424     07C4                     u31:
   425     07C4  2FC9               	goto	l611
   426     07C5                     u30:
   427     07C5                     l609:
   428                           
   429                           ;main.c: 75:             PhaseInc=1156;
   430     07C5  3084               	movlw	132
   431     07C6  00F4               	movwf	main@PhaseInc
   432     07C7  3004               	movlw	4
   433     07C8  00F5               	movwf	main@PhaseInc+1
   434     07C9                     l611:
   435                           
   436                           ;main.c: 77:         if(RA3){
   437     07C9  1D85               	btfss	5,3	;volatile
   438     07CA  2FCC               	goto	u41
   439     07CB  2FCD               	goto	u40
   440     07CC                     u41:
   441     07CC  2FD1               	goto	l36
   442     07CD                     u40:
   443     07CD                     l613:
   444                           
   445                           ;main.c: 78:             PhaseInc=9796;
   446     07CD  3044               	movlw	68
   447     07CE  00F4               	movwf	main@PhaseInc
   448     07CF  3026               	movlw	38
   449     07D0  00F5               	movwf	main@PhaseInc+1
   450     07D1                     l36:	
   451                           ;main.c: 79:         }
   452                           
   453                           
   454                           ;main.c: 82:         PhaseAcc += PhaseInc;
   455     07D1  0874               	movf	main@PhaseInc,w
   456     07D2  07F2               	addwf	main@PhaseAcc,f
   457     07D3  1803               	skipnc
   458     07D4  0AF3               	incf	main@PhaseAcc+1,f
   459     07D5  0875               	movf	main@PhaseInc+1,w
   460     07D6  07F3               	addwf	main@PhaseAcc+1,f
   461     07D7                     l615:
   462                           
   463                           ;main.c: 83:         PORTB = sineLUT[PhaseAcc>>10];
   464     07D7  0873               	movf	main@PhaseAcc+1,w
   465     07D8  00F1               	movwf	??_main+1
   466     07D9  0872               	movf	main@PhaseAcc,w
   467     07DA  00F0               	movwf	??_main
   468     07DB  300A               	movlw	10
   469     07DC                     u55:
   470     07DC  1003               	clrc
   471     07DD  0CF1               	rrf	??_main+1,f
   472     07DE  0CF0               	rrf	??_main,f
   473     07DF  3EFF               	addlw	-1
   474     07E0  1D03               	skipz
   475     07E1  2FDC               	goto	u55
   476     07E2  0870               	movf	??_main,w
   477     07E3  3E20               	addlw	(low (_sineLUT| 0))& (0+255)
   478     07E4  0084               	movwf	4
   479     07E5  1383               	bcf	3,7	;select IRP bank0
   480     07E6  0800               	movf	0,w
   481     07E7  0086               	movwf	6	;volatile
   482     07E8                     l617:
   483                           
   484                           ;main.c: 84:         RC0 = ~RC0;
   485     07E8  3001               	movlw	1
   486     07E9  0687               	xorwf	7,f
   487     07EA  2FAF               	goto	l599
   488     07EB  120A  118A  2800   	ljmp	start
   489     07EE                     __end_of_main:
   490                           
   491                           	psect	text1
   492     0751                     __ptext1:	
   493 ;; *************** function _port_init *****************
   494 ;; Defined at:
   495 ;;		line 42 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, btemp+1
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522     0751                     _port_init:	
   523                           ;psect for function _port_init
   524                           
   525     0751                     l583:	
   526                           ;incstack = 0
   527                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   528                           
   529                           
   530                           ;main.c: 43: TRISB=0x00;
   531     0751  1683               	bsf	3,5	;RP0=1, select bank1
   532     0752  1303               	bcf	3,6	;RP1=0, select bank1
   533     0753  0186               	clrf	6	;volatile
   534                           
   535                           ;main.c: 44: PORTB=0;
   536     0754  1283               	bcf	3,5	;RP0=0, select bank0
   537     0755  1303               	bcf	3,6	;RP1=0, select bank0
   538     0756  0186               	clrf	6	;volatile
   539     0757                     l585:
   540                           
   541                           ;main.c: 45: ADCON1|=0x06;
   542     0757  3006               	movlw	6
   543     0758  00FF               	movwf	btemp+1
   544     0759  087F               	movf	btemp+1,w
   545     075A  1683               	bsf	3,5	;RP0=1, select bank1
   546     075B  1303               	bcf	3,6	;RP1=0, select bank1
   547     075C  049F               	iorwf	31,f	;volatile
   548     075D                     l587:
   549                           
   550                           ;main.c: 46: TRISA=0xFF;
   551     075D  30FF               	movlw	255
   552     075E  0085               	movwf	5	;volatile
   553     075F                     l589:
   554                           
   555                           ;main.c: 47: PORTA=0;
   556     075F  1283               	bcf	3,5	;RP0=0, select bank0
   557     0760  1303               	bcf	3,6	;RP1=0, select bank0
   558     0761  0185               	clrf	5	;volatile
   559     0762                     l591:
   560                           
   561                           ;main.c: 48: TRISC0=0;
   562     0762  1683               	bsf	3,5	;RP0=1, select bank1
   563     0763  1303               	bcf	3,6	;RP1=0, select bank1
   564     0764  1007               	bcf	7,0	;volatile
   565     0765                     l27:
   566     0765  0008               	return
   567     0766                     __end_of_port_init:
   568     007E                     btemp	set	126	;btemp
   569     007E                     wtemp0	set	126
   570                           
   571                           	psect	config
   572                           
   573                           ;Config register CONFIG @ 0x2007
   574                           ;	Oscillator Selection bits
   575                           ;	FOSC = HS, HS oscillator
   576                           ;	Watchdog Timer Enable bit
   577                           ;	WDTE = OFF, WDT disabled
   578                           ;	Power-up Timer Enable bit
   579                           ;	PWRTE = ON, PWRT enabled
   580                           ;	Brown-out Reset Enable bit
   581                           ;	BOREN = ON, BOR enabled
   582                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   583                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   584                           ;	Data EEPROM Memory Code Protection bit
   585                           ;	CPD = OFF, Data EEPROM code protection off
   586                           ;	Flash Program Memory Write Enable bits
   587                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   588                           ;	In-Circuit Debugger Mode bit
   589                           ;	DEBUG = 0x1, unprogrammed default
   590                           ;	Flash Program Memory Code Protection bit
   591                           ;	CP = OFF, Code protection off
   592     2007                     	org	8199
   593     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      30
                                              0 COMMON     6     6      0
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _port_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 22 18:02:28 2024

                      pc 0002                       l27 0765                       l36 07D1  
                     u10 07B5                       u11 07B4                       u20 07BD  
                     u21 07BC                       u30 07C5                       u31 07C4  
                     u40 07CD                       u41 07CC                       u55 07DC  
                     fsr 0004                      l601 07B5                      l611 07C9  
                    l603 07B9                      l613 07CD                      l605 07BD  
                    l615 07D7                      l607 07C1                      l617 07E8  
                    l609 07C5                      l591 0762                      l583 0751  
                    l585 0757                      l593 07A6                      l587 075D  
                    l595 07AB                      l589 075F                      l597 07AD  
                    l599 07AF                      _RA0 0028                      _RA1 0029  
                    _RA2 002A                      _RA3 002B                      _RC0 0038  
                    fsr0 0004                      indf 0000             main@PhaseAcc 0072  
           main@PhaseInc 0074                     _main 07A6                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
                 _ADCON1 009F                   _TRISC0 0438  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0766               __pmaintext 07A6  
                __ptext1 0751                  _sineLUT 0020     end_of_initialization 07FC  
      __end_of_port_init 0766      start_initialization 07EE               init_fetch0 073E  
            __pdataBANK0 0020                ___latbits 0002                _port_init 0751  
             ?_port_init 0070                 init_ram0 0742              ??_port_init 0070  
