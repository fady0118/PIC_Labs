

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 11 17:54:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0015                     _CCPR1L	set	21
   175     0007                     _PORTC	set	7
   176     001A                     _RCREG	set	26
   177     0017                     _CCP1CON	set	23
   178     0012                     _T2CON	set	18
   179     0008                     _PORTD	set	8
   180     00BD                     _CCP1X	set	189
   181     00BC                     _CCP1Y	set	188
   182     0065                     _RCIF	set	101
   183     00C4                     _CREN	set	196
   184     005F                     _GIE	set	95
   185     005E                     _PEIE	set	94
   186     00C7                     _SPEN	set	199
   187     0099                     _SPBRG	set	153
   188     0087                     _TRISC	set	135
   189     0092                     _PR2	set	146
   190     0088                     _TRISD	set	136
   191     0465                     _RCIE	set	1125
   192     043F                     _TRISC7	set	1087
   193     043E                     _TRISC6	set	1086
   194     04C4                     _SYNC	set	1220
   195     04C2                     _BRGH	set	1218
   196                           
   197                           	psect	cinit
   198     0011                     start_initialization:	
   199                           ; #config settings
   200                           
   201     0011                     __initialization:
   202                           
   203                           ; Clear objects allocated to COMMON
   204     0011  01F7               	clrf	__pbssCOMMON& (0+127)
   205     0012                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208     0012                     __end_of__initialization:
   209     0012  0183               	clrf	3
   210     0013  120A  118A  288F   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMMON
   213     0077                     __pbssCOMMON:
   214     0077                     _UART_Buffer:
   215     0077                     	ds	1
   216                           
   217                           	psect	cstackCOMMON
   218     0070                     __pcstackCOMMON:
   219     0070                     ?_UART_RX_Init:
   220     0070                     ?_Port_Init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?_Timer2_Init:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ?_CCP_PWM:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ?_main:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?_ISR:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?i1_PWM_duty_cycle:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     i1PWM_duty_cycle@duty_cycle:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 2 bytes @ 0x0
   243     0070                     	ds	2
   244     0072                     ??i1_PWM_duty_cycle:
   245                           
   246                           ; 1 bytes @ 0x2
   247     0072                     	ds	2
   248     0074                     ??_ISR:
   249                           
   250                           ; 1 bytes @ 0x4
   251     0074                     	ds	3
   252                           
   253                           	psect	cstackBANK0
   254     0020                     __pcstackBANK0:
   255     0020                     ?_PWM_duty_cycle:
   256     0020                     ??_UART_RX_Init:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0020                     ??_Port_Init:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0020                     ??_Timer2_Init:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0020                     PWM_duty_cycle@duty_cycle:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 2 bytes @ 0x0
   270     0020                     	ds	2
   271     0022                     ??_PWM_duty_cycle:
   272                           
   273                           ; 1 bytes @ 0x2
   274     0022                     	ds	2
   275     0024                     ??_CCP_PWM:
   276     0024                     ??_main:	
   277                           ; 1 bytes @ 0x4
   278                           
   279                           
   280                           	psect	maintext
   281     008F                     __pmaintext:	
   282                           ; 1 bytes @ 0x4
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 49 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels required when called: 4
   308 ;; This function calls:
   309 ;;		_CCP_PWM
   310 ;;		_Port_Init
   311 ;;		_Timer2_Init
   312 ;;		_UART_RX_Init
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318     008F                     _main:	
   319                           ;psect for function _main
   320                           
   321     008F                     l790:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   324                           
   325                           
   326                           ;main.c: 50:     Port_Init();
   327     008F  120A  118A  20EB  120A  118A  	fcall	_Port_Init
   328                           
   329                           ;main.c: 51:     Timer2_Init();
   330     0094  120A  118A  20F6  120A  118A  	fcall	_Timer2_Init
   331                           
   332                           ;main.c: 52:     CCP_PWM();
   333     0099  120A  118A  20A7  120A  118A  	fcall	_CCP_PWM
   334     009E                     l792:
   335                           
   336                           ;main.c: 53:     UART_RX_Init();
   337     009E  120A  118A  20D7  120A  118A  	fcall	_UART_RX_Init
   338     00A3                     l64:	
   339                           ;main.c: 54:     while(1){
   340                           
   341     00A3                     l65:	
   342                           ;main.c: 56:     }
   343                           
   344     00A3  28A3               	goto	l64
   345     00A4  120A  118A  280E   	ljmp	start
   346     00A7                     __end_of_main:
   347                           
   348                           	psect	text1
   349     00D7                     __ptext1:	
   350 ;; *************** function _UART_RX_Init *****************
   351 ;; Defined at:
   352 ;;		line 59 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; Hardware stack levels required when called: 2
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380     00D7                     _UART_RX_Init:	
   381                           ;psect for function _UART_RX_Init
   382                           
   383     00D7                     l770:	
   384                           ;incstack = 0
   385                           ; Regs used in _UART_RX_Init: [wreg]
   386                           
   387                           
   388                           ;main.c: 60:   BRGH = 1;
   389     00D7  1683               	bsf	3,5	;RP0=1, select bank1
   390     00D8  1303               	bcf	3,6	;RP1=0, select bank1
   391     00D9  1518               	bsf	24,2	;volatile
   392     00DA                     l772:
   393                           
   394                           ;main.c: 61:   SPBRG = 25;
   395     00DA  3019               	movlw	25
   396     00DB  0099               	movwf	25	;volatile
   397     00DC                     l774:
   398                           
   399                           ;main.c: 63:   SYNC = 0;
   400     00DC  1218               	bcf	24,4	;volatile
   401     00DD                     l776:
   402                           
   403                           ;main.c: 64:   SPEN = 1;
   404     00DD  1283               	bcf	3,5	;RP0=0, select bank0
   405     00DE  1303               	bcf	3,6	;RP1=0, select bank0
   406     00DF  1798               	bsf	24,7	;volatile
   407     00E0                     l778:
   408                           
   409                           ;main.c: 66:   TRISC6 = 1;
   410     00E0  1683               	bsf	3,5	;RP0=1, select bank1
   411     00E1  1303               	bcf	3,6	;RP1=0, select bank1
   412     00E2  1707               	bsf	7,6	;volatile
   413     00E3                     l780:
   414                           
   415                           ;main.c: 67:   TRISC7 = 1;
   416     00E3  1787               	bsf	7,7	;volatile
   417     00E4                     l782:
   418                           
   419                           ;main.c: 69:   RCIE = 1;
   420     00E4  168C               	bsf	12,5	;volatile
   421     00E5                     l784:
   422                           
   423                           ;main.c: 70:   PEIE = 1;
   424     00E5  170B               	bsf	11,6	;volatile
   425     00E6                     l786:
   426                           
   427                           ;main.c: 71:   GIE = 1;
   428     00E6  178B               	bsf	11,7	;volatile
   429     00E7                     l788:
   430                           
   431                           ;main.c: 73:   CREN = 1;
   432     00E7  1283               	bcf	3,5	;RP0=0, select bank0
   433     00E8  1303               	bcf	3,6	;RP1=0, select bank0
   434     00E9  1618               	bsf	24,4	;volatile
   435     00EA                     l70:
   436     00EA  0008               	return
   437     00EB                     __end_of_UART_RX_Init:
   438                           
   439                           	psect	text2
   440     00F6                     __ptext2:	
   441 ;; *************** function _Timer2_Init *****************
   442 ;; Defined at:
   443 ;;		line 36 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, btemp+1
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used: 1
   463 ;; Hardware stack levels required when called: 2
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471     00F6                     _Timer2_Init:	
   472                           ;psect for function _Timer2_Init
   473                           
   474     00F6                     l758:	
   475                           ;incstack = 0
   476                           ; Regs used in _Timer2_Init: [wreg+status,2+status,0+btemp+1]
   477                           
   478                           
   479                           ;main.c: 37: T2CON&=~0x03;
   480     00F6  30FC               	movlw	252
   481     00F7  00FF               	movwf	btemp+1
   482     00F8  087F               	movf	btemp+1,w
   483     00F9  1283               	bcf	3,5	;RP0=0, select bank0
   484     00FA  1303               	bcf	3,6	;RP1=0, select bank0
   485     00FB  0592               	andwf	18,f	;volatile
   486     00FC                     l56:
   487     00FC  0008               	return
   488     00FD                     __end_of_Timer2_Init:
   489                           
   490                           	psect	text3
   491     00EB                     __ptext3:	
   492 ;; *************** function _Port_Init *****************
   493 ;; Defined at:
   494 ;;		line 30 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, btemp+1
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 2
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522     00EB                     _Port_Init:	
   523                           ;psect for function _Port_Init
   524                           
   525     00EB                     l754:	
   526                           ;incstack = 0
   527                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   528                           
   529                           
   530                           ;main.c: 31:    TRISD&=~0x03;
   531     00EB  30FC               	movlw	252
   532     00EC  00FF               	movwf	btemp+1
   533     00ED  087F               	movf	btemp+1,w
   534     00EE  1683               	bsf	3,5	;RP0=1, select bank1
   535     00EF  1303               	bcf	3,6	;RP1=0, select bank1
   536     00F0  0588               	andwf	8,f	;volatile
   537     00F1                     l756:
   538                           
   539                           ;main.c: 32:    PORTD=0x01;
   540     00F1  3001               	movlw	1
   541     00F2  1283               	bcf	3,5	;RP0=0, select bank0
   542     00F3  1303               	bcf	3,6	;RP1=0, select bank0
   543     00F4  0088               	movwf	8	;volatile
   544     00F5                     l53:
   545     00F5  0008               	return
   546     00F6                     __end_of_Port_Init:
   547                           
   548                           	psect	text4
   549     00A7                     __ptext4:	
   550 ;; *************** function _CCP_PWM *****************
   551 ;; Defined at:
   552 ;;		line 41 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 3
   573 ;; This function calls:
   574 ;;		_PWM_duty_cycle
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580     00A7                     _CCP_PWM:	
   581                           ;psect for function _CCP_PWM
   582                           
   583     00A7                     l760:	
   584                           ;incstack = 0
   585                           ; Regs used in _CCP_PWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   586                           
   587                           
   588                           ;main.c: 42: PR2=199;
   589     00A7  30C7               	movlw	199
   590     00A8  1683               	bsf	3,5	;RP0=1, select bank1
   591     00A9  1303               	bcf	3,6	;RP1=0, select bank1
   592     00AA  0092               	movwf	18	;volatile
   593     00AB                     l762:
   594                           
   595                           ;main.c: 43: TRISC&=~0x04;
   596     00AB  30FB               	movlw	251
   597     00AC  00FF               	movwf	btemp+1
   598     00AD  087F               	movf	btemp+1,w
   599     00AE  0587               	andwf	7,f	;volatile
   600     00AF                     l764:
   601                           
   602                           ;main.c: 44: CCP1CON|=0x0C;
   603     00AF  300C               	movlw	12
   604     00B0  00FF               	movwf	btemp+1
   605     00B1  087F               	movf	btemp+1,w
   606     00B2  1283               	bcf	3,5	;RP0=0, select bank0
   607     00B3  1303               	bcf	3,6	;RP1=0, select bank0
   608     00B4  0497               	iorwf	23,f	;volatile
   609     00B5                     l766:
   610                           
   611                           ;main.c: 45: T2CON|=0x04;
   612     00B5  1512               	bsf	18,2	;volatile
   613     00B6                     l768:
   614                           
   615                           ;main.c: 46: PWM_duty_cycle(0);
   616     00B6  3000               	movlw	0
   617     00B7  00A0               	movwf	PWM_duty_cycle@duty_cycle
   618     00B8  00A1               	movwf	PWM_duty_cycle@duty_cycle+1
   619     00B9  120A  118A  2075  120A  118A  	fcall	_PWM_duty_cycle
   620     00BE                     l59:
   621     00BE  0008               	return
   622     00BF                     __end_of_CCP_PWM:
   623                           
   624                           	psect	text5
   625     0075                     __ptext5:	
   626 ;; *************** function _PWM_duty_cycle *****************
   627 ;; Defined at:
   628 ;;		line 102 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  duty_cycle      2    0[BANK0 ] unsigned short 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       2       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       2       0       0       0
   645 ;;      Totals:         0       4       0       0       0
   646 ;;Total ram usage:        4 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 2
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_CCP_PWM
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656     0075                     _PWM_duty_cycle:	
   657                           ;psect for function _PWM_duty_cycle
   658                           
   659     0075                     l704:	
   660                           ;incstack = 0
   661                           ; Regs used in _PWM_duty_cycle: [wreg+status,2+status,0]
   662                           
   663                           
   664                           ;main.c: 103: CCP1Y = duty_cycle & 1;
   665     0075  1283               	bcf	3,5	;RP0=0, select bank0
   666     0076  1303               	bcf	3,6	;RP1=0, select bank0
   667     0077  1820               	btfsc	PWM_duty_cycle@duty_cycle,0
   668     0078  287A               	goto	u111
   669     0079  287E               	goto	u110
   670     007A                     u111:
   671     007A  1283               	bcf	3,5	;RP0=0, select bank0
   672     007B  1303               	bcf	3,6	;RP1=0, select bank0
   673     007C  1617               	bsf	23,4	;volatile
   674     007D  2881               	goto	u124
   675     007E                     u110:
   676     007E  1283               	bcf	3,5	;RP0=0, select bank0
   677     007F  1303               	bcf	3,6	;RP1=0, select bank0
   678     0080  1217               	bcf	23,4	;volatile
   679     0081                     u124:
   680                           
   681                           ;main.c: 104: CCP1X = duty_cycle & 2;
   682     0081  1297               	bcf	23,5	;volatile
   683     0082                     l706:
   684                           
   685                           ;main.c: 105: CCPR1L = duty_cycle >> 2;
   686     0082  0821               	movf	PWM_duty_cycle@duty_cycle+1,w
   687     0083  00A3               	movwf	??_PWM_duty_cycle+1
   688     0084  0820               	movf	PWM_duty_cycle@duty_cycle,w
   689     0085  00A2               	movwf	??_PWM_duty_cycle
   690     0086  1003               	clrc
   691     0087  0CA3               	rrf	??_PWM_duty_cycle+1,f
   692     0088  0CA2               	rrf	??_PWM_duty_cycle,f
   693     0089  1003               	clrc
   694     008A  0CA3               	rrf	??_PWM_duty_cycle+1,f
   695     008B  0CA2               	rrf	??_PWM_duty_cycle,f
   696     008C  0822               	movf	??_PWM_duty_cycle,w
   697     008D  0095               	movwf	21	;volatile
   698     008E                     l84:
   699     008E  0008               	return
   700     008F                     __end_of_PWM_duty_cycle:
   701                           
   702                           	psect	text6
   703     0016                     __ptext6:	
   704 ;; *************** function _ISR *****************
   705 ;; Defined at:
   706 ;;		line 76 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0
   722 ;;      Temps:          3       0       0       0       0
   723 ;;      Totals:         3       0       0       0       0
   724 ;;Total ram usage:        3 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 1
   727 ;; This function calls:
   728 ;;		i1_PWM_duty_cycle
   729 ;; This function is called by:
   730 ;;		Interrupt level 1
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734     0016                     _ISR:	
   735                           ;psect for function _ISR
   736                           
   737     0016                     i1l726:
   738                           
   739                           ;main.c: 77:   if (RCIF == 1)
   740     0016  1283               	bcf	3,5	;RP0=0, select bank0
   741     0017  1303               	bcf	3,6	;RP1=0, select bank0
   742     0018  1E8C               	btfss	12,5	;volatile
   743     0019  281B               	goto	u15_21
   744     001A  281C               	goto	u15_20
   745     001B                     u15_21:
   746     001B  286C               	goto	i1l81
   747     001C                     u15_20:
   748     001C                     i1l728:
   749                           
   750                           ;main.c: 78:   {;main.c: 79:     UART_Buffer = RCREG;
   751     001C  081A               	movf	26,w	;volatile
   752     001D  00F7               	movwf	_UART_Buffer
   753     001E                     i1l730:
   754                           
   755                           ;main.c: 81:     if(UART_Buffer == 49){
   756     001E  3031               	movlw	49
   757     001F  0677               	xorwf	_UART_Buffer,w
   758     0020  1D03               	btfss	3,2
   759     0021  2823               	goto	u16_21
   760     0022  2824               	goto	u16_20
   761     0023                     u16_21:
   762     0023  2828               	goto	i1l734
   763     0024                     u16_20:
   764     0024                     i1l732:
   765                           
   766                           ;main.c: 82:     PORTD^=0x03;
   767     0024  3003               	movlw	3
   768     0025  00FF               	movwf	btemp+1
   769     0026  087F               	movf	btemp+1,w
   770     0027  0688               	xorwf	8,f	;volatile
   771     0028                     i1l734:
   772                           
   773                           ;main.c: 84:     if(UART_Buffer == 50){
   774     0028  3032               	movlw	50
   775     0029  0677               	xorwf	_UART_Buffer,w
   776     002A  1D03               	btfss	3,2
   777     002B  282D               	goto	u17_21
   778     002C  282E               	goto	u17_20
   779     002D                     u17_21:
   780     002D  283C               	goto	i1l740
   781     002E                     u17_20:
   782     002E                     i1l736:
   783                           
   784                           ;main.c: 85:     PWM_duty_cycle(0);
   785     002E  3000               	movlw	0
   786     002F  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   787     0030  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   788     0031  120A  118A  20BF  120A  118A  	fcall	i1_PWM_duty_cycle
   789     0036                     i1l738:
   790                           
   791                           ;main.c: 86:     PORTC&=~0x04;
   792     0036  30FB               	movlw	251
   793     0037  00FF               	movwf	btemp+1
   794     0038  087F               	movf	btemp+1,w
   795     0039  1283               	bcf	3,5	;RP0=0, select bank0
   796     003A  1303               	bcf	3,6	;RP1=0, select bank0
   797     003B  0587               	andwf	7,f	;volatile
   798     003C                     i1l740:
   799                           
   800                           ;main.c: 88:     if(UART_Buffer == 51){
   801     003C  3033               	movlw	51
   802     003D  0677               	xorwf	_UART_Buffer,w
   803     003E  1D03               	btfss	3,2
   804     003F  2841               	goto	u18_21
   805     0040  2842               	goto	u18_20
   806     0041                     u18_21:
   807     0041  284B               	goto	i1l744
   808     0042                     u18_20:
   809     0042                     i1l742:
   810                           
   811                           ;main.c: 89:     PWM_duty_cycle(267);
   812     0042  300B               	movlw	11
   813     0043  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   814     0044  3001               	movlw	1
   815     0045  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   816     0046  120A  118A  20BF  120A  118A  	fcall	i1_PWM_duty_cycle
   817     004B                     i1l744:
   818                           
   819                           ;main.c: 91:     if(UART_Buffer == 52){
   820     004B  3034               	movlw	52
   821     004C  0677               	xorwf	_UART_Buffer,w
   822     004D  1D03               	btfss	3,2
   823     004E  2850               	goto	u19_21
   824     004F  2851               	goto	u19_20
   825     0050                     u19_21:
   826     0050  285A               	goto	i1l748
   827     0051                     u19_20:
   828     0051                     i1l746:
   829                           
   830                           ;main.c: 92:     PWM_duty_cycle(534);
   831     0051  3016               	movlw	22
   832     0052  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   833     0053  3002               	movlw	2
   834     0054  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   835     0055  120A  118A  20BF  120A  118A  	fcall	i1_PWM_duty_cycle
   836     005A                     i1l748:
   837                           
   838                           ;main.c: 94:     if(UART_Buffer == 53){
   839     005A  3035               	movlw	53
   840     005B  0677               	xorwf	_UART_Buffer,w
   841     005C  1D03               	btfss	3,2
   842     005D  285F               	goto	u20_21
   843     005E  2860               	goto	u20_20
   844     005F                     u20_21:
   845     005F  2869               	goto	i1l752
   846     0060                     u20_20:
   847     0060                     i1l750:
   848                           
   849                           ;main.c: 95:     PWM_duty_cycle(800);
   850     0060  3020               	movlw	32
   851     0061  00F0               	movwf	i1PWM_duty_cycle@duty_cycle
   852     0062  3003               	movlw	3
   853     0063  00F1               	movwf	i1PWM_duty_cycle@duty_cycle+1
   854     0064  120A  118A  20BF  120A  118A  	fcall	i1_PWM_duty_cycle
   855     0069                     i1l752:
   856                           
   857                           ;main.c: 97:     RCIF = 0;
   858     0069  1283               	bcf	3,5	;RP0=0, select bank0
   859     006A  1303               	bcf	3,6	;RP1=0, select bank0
   860     006B  128C               	bcf	12,5	;volatile
   861     006C                     i1l81:
   862     006C  0876               	movf	??_ISR+2,w
   863     006D  00FF               	movwf	btemp+1
   864     006E  0875               	movf	??_ISR+1,w
   865     006F  008A               	movwf	10
   866     0070  0E74               	swapf	??_ISR,w
   867     0071  0083               	movwf	3
   868     0072  0EFE               	swapf	btemp,f
   869     0073  0E7E               	swapf	btemp,w
   870     0074  0009               	retfie
   871     0075                     __end_of_ISR:
   872                           
   873                           	psect	intentry
   874     0004                     __pintentry:	
   875                           ;incstack = 0
   876                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   877                           
   878     0004                     interrupt_function:
   879     007E                     saved_w	set	btemp
   880     0004  00FE               	movwf	btemp
   881     0005  0E03               	swapf	3,w
   882     0006  00F4               	movwf	??_ISR
   883     0007  080A               	movf	10,w
   884     0008  00F5               	movwf	??_ISR+1
   885     0009  087F               	movf	btemp+1,w
   886     000A  00F6               	movwf	??_ISR+2
   887     000B  120A  118A  2816   	ljmp	_ISR
   888                           
   889                           	psect	text7
   890     00BF                     __ptext7:	
   891 ;; *************** function i1_PWM_duty_cycle *****************
   892 ;; Defined at:
   893 ;;		line 102 in file "main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  duty_cycle      2    0[COMMON] unsigned short 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         2       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          2       0       0       0       0
   910 ;;      Totals:         4       0       0       0       0
   911 ;;Total ram usage:        4 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_ISR
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920     00BF                     i1_PWM_duty_cycle:	
   921                           ;psect for function i1_PWM_duty_cycle
   922                           
   923     00BF                     i1l718:	
   924                           ;incstack = 0
   925                           ; Regs used in i1_PWM_duty_cycle: [wreg+status,2+status,0]
   926                           
   927                           
   928                           ;main.c: 103: CCP1Y = duty_cycle & 1;
   929     00BF  1870               	btfsc	i1PWM_duty_cycle@duty_cycle,0
   930     00C0  28C2               	goto	u13_21
   931     00C1  28C6               	goto	u13_20
   932     00C2                     u13_21:
   933     00C2  1283               	bcf	3,5	;RP0=0, select bank0
   934     00C3  1303               	bcf	3,6	;RP1=0, select bank0
   935     00C4  1617               	bsf	23,4	;volatile
   936     00C5  28C9               	goto	u14_24
   937     00C6                     u13_20:
   938     00C6  1283               	bcf	3,5	;RP0=0, select bank0
   939     00C7  1303               	bcf	3,6	;RP1=0, select bank0
   940     00C8  1217               	bcf	23,4	;volatile
   941     00C9                     u14_24:
   942                           
   943                           ;main.c: 104: CCP1X = duty_cycle & 2;
   944     00C9  1297               	bcf	23,5	;volatile
   945     00CA                     i1l720:
   946                           
   947                           ;main.c: 105: CCPR1L = duty_cycle >> 2;
   948     00CA  0871               	movf	i1PWM_duty_cycle@duty_cycle+1,w
   949     00CB  00F3               	movwf	??i1_PWM_duty_cycle+1
   950     00CC  0870               	movf	i1PWM_duty_cycle@duty_cycle,w
   951     00CD  00F2               	movwf	??i1_PWM_duty_cycle
   952     00CE  1003               	clrc
   953     00CF  0CF3               	rrf	??i1_PWM_duty_cycle+1,f
   954     00D0  0CF2               	rrf	??i1_PWM_duty_cycle,f
   955     00D1  1003               	clrc
   956     00D2  0CF3               	rrf	??i1_PWM_duty_cycle+1,f
   957     00D3  0CF2               	rrf	??i1_PWM_duty_cycle,f
   958     00D4  0872               	movf	??i1_PWM_duty_cycle,w
   959     00D5  0095               	movwf	21	;volatile
   960     00D6                     i1l84:
   961     00D6  0008               	return
   962     00D7                     __end_ofi1_PWM_duty_cycle:
   963     007E                     btemp	set	126	;btemp
   964     007E                     wtemp0	set	126
   965                           
   966                           	psect	config
   967                           
   968                           ;Config register CONFIG @ 0x2007
   969                           ;	Oscillator Selection bits
   970                           ;	FOSC = XT, XT oscillator
   971                           ;	Watchdog Timer Enable bit
   972                           ;	WDTE = OFF, WDT disabled
   973                           ;	Power-up Timer Enable bit
   974                           ;	PWRTE = ON, PWRT enabled
   975                           ;	Brown-out Reset Enable bit
   976                           ;	BOREN = ON, BOR enabled
   977                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   978                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   979                           ;	Data EEPROM Memory Code Protection bit
   980                           ;	CPD = OFF, Data EEPROM code protection off
   981                           ;	Flash Program Memory Write Enable bits
   982                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   983                           ;	In-Circuit Debugger Mode bit
   984                           ;	DEBUG = 0x1, unprogrammed default
   985                           ;	Flash Program Memory Code Protection bit
   986                           ;	CP = OFF, Code protection off
   987     2007                     	org	8199
   988     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_PWM_duty_cycle

Critical Paths under _main in BANK0

    _CCP_PWM->_PWM_duty_cycle

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     320
                            _CCP_PWM
                          _Port_Init
                        _Timer2_Init
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM                                              0     0      0     320
                     _PWM_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _PWM_duty_cycle                                       4     2      2     320
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0     148
                                              4 COMMON     3     3      0
                   i1_PWM_duty_cycle
 ---------------------------------------------------------------------------------
 (4) i1_PWM_duty_cycle                                     4     2      2     148
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP_PWM
     _PWM_duty_cycle
   _Port_Init
   _Timer2_Init
   _UART_RX_Init

 _ISR (ROOT)
   i1_PWM_duty_cycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 11 17:54:44 2024

                        l53 00F5                          l70 00EA                          l56 00FC  
                        l64 00A3                          l65 00A3                          l59 00BE  
                        l84 008E    __end_ofi1_PWM_duty_cycle 00D7                         l704 0075  
                       l706 0082                         l760 00A7                         l762 00AB  
                       l754 00EB                         l770 00D7                         l764 00AF  
                       l756 00F1                         l780 00E3                         l772 00DA  
                       l766 00B5                         l758 00F6                         l782 00E4  
                       l774 00DC                         l790 008F                         l768 00B6  
                       l784 00E5                         l776 00DD                         l792 009E  
                       l786 00E6                         l778 00E0                         l788 00E7  
                       _GIE 005F                         u110 007E                         u111 007A  
                       u124 0081                         _PR2 0092                         _ISR 0016  
           __end_of_CCP_PWM 00BF                        ?_ISR 0070                        _BRGH 04C2  
                      _CREN 00C4                        _PEIE 005E                        _RCIE 0465  
                      _RCIF 0065                        i1l81 006C                        i1l84 00D6  
                      _SPEN 00C7                        _SYNC 04C4                        _main 008F  
                      btemp 007E                        start 000E                       ??_ISR 0074  
                     ?_main 0070                       _CCP1X 00BD                       _CCP1Y 00BC  
                     _T2CON 0012                       i1l720 00CA                       i1l730 001E  
                     i1l740 003C                       i1l732 0024                       i1l718 00BF  
                     i1l750 0060                       i1l742 0042                       i1l734 0028  
                     i1l726 0016                       i1l752 0069                       i1l744 004B  
                     i1l736 002E                       i1l728 001C                       i1l746 0051  
                     i1l738 0036                       i1l748 005A                       _RCREG 001A  
                     u20_20 0060                       u20_21 005F                       u13_20 00C6  
                     u13_21 00C2                       u14_24 00C9                       u15_20 001C  
                     u15_21 001B                       u16_20 0024                       u16_21 0023  
                     u17_20 002E                       u17_21 002D                       u18_20 0042  
                     u18_21 0041                       _SPBRG 0099                       u19_20 0051  
                     u19_21 0050                       _PORTC 0007                       _PORTD 0008  
                     _TRISC 0087                       _TRISD 0088                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 0011  
              __end_of_main 00A7                   ??_CCP_PWM 0024                      ??_main 0024  
                    _CCPR1L 0015                      _TRISC6 043E                      _TRISC7 043F  
             ??_Timer2_Init 0020                      saved_w 007E     __end_of__initialization 0012  
            __pcstackCOMMON 0070         __end_of_Timer2_Init 00FD           ?i1_PWM_duty_cycle 0070  
        ??i1_PWM_duty_cycle 0072           __end_of_Port_Init 00F6                  __pmaintext 008F  
                __pintentry 0004                     _CCP1CON 0017                     _CCP_PWM 00A7  
             ?_UART_RX_Init 0070                 _Timer2_Init 00F6                     __ptext1 00D7  
                   __ptext2 00F6                     __ptext3 00EB                     __ptext4 00A7  
                   __ptext5 0075                     __ptext6 0016                     __ptext7 00BF  
            ??_UART_RX_Init 0020        end_of_initialization 0012              _PWM_duty_cycle 0075  
    __end_of_PWM_duty_cycle 008F    PWM_duty_cycle@duty_cycle 0020         start_initialization 0011  
               __end_of_ISR 0075  i1PWM_duty_cycle@duty_cycle 0070        __end_of_UART_RX_Init 00EB  
                 _Port_Init 00EB             ?_PWM_duty_cycle 0020                    ?_CCP_PWM 0070  
               __pbssCOMMON 0077                   ___latbits 0002               __pcstackBANK0 0020  
              ?_Timer2_Init 0070                  ?_Port_Init 0070           interrupt_function 0004  
          i1_PWM_duty_cycle 00BF                 ??_Port_Init 0020                _UART_RX_Init 00D7  
          ??_PWM_duty_cycle 0022                    intlevel1 0000                 _UART_Buffer 0077  
