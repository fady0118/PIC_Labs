

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 26 18:34:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0015                     _CCPR1	set	21
   170     000E                     _TMR1	set	14
   171     0017                     _CCP1CON	set	23
   172     0008                     _PORTD	set	8
   173     0006                     _PORTB	set	6
   174     0062                     _CCP1IF	set	98
   175     005F                     _GIE	set	95
   176     005E                     _PEIE	set	94
   177     0080                     _TMR1ON	set	128
   178     0082                     _T1SYNC	set	130
   179     0085                     _T1CKPS1	set	133
   180     0084                     _T1CKPS0	set	132
   181     0083                     _T1OSCEN	set	131
   182     0081                     _TMR1CS	set	129
   183     0088                     _TRISD	set	136
   184     0086                     _TRISB	set	134
   185     0462                     _CCP1IE	set	1122
   186                           
   187                           	psect	cinit
   188     000F                     start_initialization:	
   189                           ; #config settings
   190                           
   191     000F                     __initialization:
   192     000F                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195     000F                     __end_of__initialization:
   196     000F  0183               	clrf	3
   197     0010  120A  118A  282C   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	cstackCOMMON
   200     0070                     __pcstackCOMMON:
   201     0070                     ?_Port_Init:
   202     0070                     ?_Timer1_init:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ?_CCP_capture:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_ISR:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ??_ISR:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219     0070                     	ds	2
   220     0072                     ??_Port_Init:
   221     0072                     ??_Timer1_init:	
   222                           ; 1 bytes @ 0x2
   223                           
   224     0072                     ??_CCP_capture:	
   225                           ; 1 bytes @ 0x2
   226                           
   227     0072                     ??_main:	
   228                           ; 1 bytes @ 0x2
   229                           
   230                           
   231                           	psect	maintext
   232     002C                     __pmaintext:	
   233                           ; 1 bytes @ 0x2
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 48 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : B00/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   253 ;;      Params:         0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called: 2
   259 ;; This function calls:
   260 ;;		_CCP_capture
   261 ;;		_Port_Init
   262 ;;		_Timer1_init
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268     002C                     _main:	
   269                           ;psect for function _main
   270                           
   271     002C                     l625:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   274                           
   275                           
   276                           ;main.c: 49:     Port_Init();
   277     002C  120A  118A  2013  120A  118A  	fcall	_Port_Init
   278     0031                     l627:
   279                           
   280                           ;main.c: 50:     Timer1_init();
   281     0031  120A  118A  205F  120A  118A  	fcall	_Timer1_init
   282     0036                     l629:
   283                           
   284                           ;main.c: 51:     CCP_capture();
   285     0036  120A  118A  2053  120A  118A  	fcall	_CCP_capture
   286     003B                     l631:
   287                           
   288                           ;main.c: 53:         PORTB=TMR1;
   289     003B  1283               	bcf	3,5	;RP0=0, select bank0
   290     003C  1303               	bcf	3,6	;RP1=0, select bank0
   291     003D  080E               	movf	14,w	;volatile
   292     003E  0086               	movwf	6	;volatile
   293     003F  283B               	goto	l631
   294     0040  120A  118A  280C   	ljmp	start
   295     0043                     __end_of_main:
   296                           
   297                           	psect	text1
   298     005F                     __ptext1:	
   299 ;; *************** function _Timer1_init *****************
   300 ;; Defined at:
   301 ;;		line 28 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		status,2
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; Hardware stack levels required when called: 1
   322 ;; This function calls:
   323 ;;		Nothing
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329     005F                     _Timer1_init:	
   330                           ;psect for function _Timer1_init
   331                           
   332     005F                     l603:	
   333                           ;incstack = 0
   334                           ; Regs used in _Timer1_init: [status,2]
   335                           
   336                           
   337                           ;main.c: 29: TMR1=0x00;
   338     005F  1283               	bcf	3,5	;RP0=0, select bank0
   339     0060  1303               	bcf	3,6	;RP1=0, select bank0
   340     0061  018E               	clrf	14	;volatile
   341     0062  018F               	clrf	15	;volatile
   342     0063                     l605:
   343                           
   344                           ;main.c: 30: TMR1CS=1;
   345     0063  1490               	bsf	16,1	;volatile
   346     0064                     l607:
   347                           
   348                           ;main.c: 31: T1OSCEN=1;
   349     0064  1590               	bsf	16,3	;volatile
   350     0065                     l609:
   351                           
   352                           ;main.c: 34: T1CKPS0=0;
   353     0065  1210               	bcf	16,4	;volatile
   354     0066                     l611:
   355                           
   356                           ;main.c: 35: T1CKPS1=0;
   357     0066  1290               	bcf	16,5	;volatile
   358     0067                     l613:
   359                           
   360                           ;main.c: 36: T1SYNC=0;
   361     0067  1110               	bcf	16,2	;volatile
   362     0068                     l615:
   363                           
   364                           ;main.c: 37: TMR1ON=1;
   365     0068  1410               	bsf	16,0	;volatile
   366     0069                     l40:
   367     0069  0008               	return
   368     006A                     __end_of_Timer1_init:
   369                           
   370                           	psect	text2
   371     0013                     __ptext2:	
   372 ;; *************** function _Port_Init *****************
   373 ;; Defined at:
   374 ;;		line 20 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, btemp+1
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; Hardware stack levels required when called: 1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402     0013                     _Port_Init:	
   403                           ;psect for function _Port_Init
   404                           
   405     0013                     l601:	
   406                           ;incstack = 0
   407                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   408                           
   409                           
   410                           ;main.c: 21:     TRISB&=~0x0F;
   411     0013  30F0               	movlw	240
   412     0014  00FF               	movwf	btemp+1
   413     0015  087F               	movf	btemp+1,w
   414     0016  1683               	bsf	3,5	;RP0=1, select bank1
   415     0017  1303               	bcf	3,6	;RP1=0, select bank1
   416     0018  0586               	andwf	6,f	;volatile
   417                           
   418                           ;main.c: 22:     PORTB&=~0x0F;
   419     0019  30F0               	movlw	240
   420     001A  00FF               	movwf	btemp+1
   421     001B  087F               	movf	btemp+1,w
   422     001C  1283               	bcf	3,5	;RP0=0, select bank0
   423     001D  1303               	bcf	3,6	;RP1=0, select bank0
   424     001E  0586               	andwf	6,f	;volatile
   425                           
   426                           ;main.c: 23:     TRISD&=~0x0F;
   427     001F  30F0               	movlw	240
   428     0020  00FF               	movwf	btemp+1
   429     0021  087F               	movf	btemp+1,w
   430     0022  1683               	bsf	3,5	;RP0=1, select bank1
   431     0023  1303               	bcf	3,6	;RP1=0, select bank1
   432     0024  0588               	andwf	8,f	;volatile
   433                           
   434                           ;main.c: 24:     PORTD&=~0x0F;
   435     0025  30F0               	movlw	240
   436     0026  00FF               	movwf	btemp+1
   437     0027  087F               	movf	btemp+1,w
   438     0028  1283               	bcf	3,5	;RP0=0, select bank0
   439     0029  1303               	bcf	3,6	;RP1=0, select bank0
   440     002A  0588               	andwf	8,f	;volatile
   441     002B                     l37:
   442     002B  0008               	return
   443     002C                     __end_of_Port_Init:
   444                           
   445                           	psect	text3
   446     0053                     __ptext3:	
   447 ;; *************** function _CCP_capture *****************
   448 ;; Defined at:
   449 ;;		line 40 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0, btemp+1
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477     0053                     _CCP_capture:	
   478                           ;psect for function _CCP_capture
   479                           
   480     0053                     l617:	
   481                           ;incstack = 0
   482                           ; Regs used in _CCP_capture: [wreg+status,2+status,0+btemp+1]
   483                           
   484                           
   485                           ;main.c: 41: CCP1CON|=0x05;
   486     0053  3005               	movlw	5
   487     0054  00FF               	movwf	btemp+1
   488     0055  087F               	movf	btemp+1,w
   489     0056  1283               	bcf	3,5	;RP0=0, select bank0
   490     0057  1303               	bcf	3,6	;RP1=0, select bank0
   491     0058  0497               	iorwf	23,f	;volatile
   492     0059                     l619:
   493                           
   494                           ;main.c: 43: PEIE=1;
   495     0059  170B               	bsf	11,6	;volatile
   496     005A                     l621:
   497                           
   498                           ;main.c: 44: GIE=1;
   499     005A  178B               	bsf	11,7	;volatile
   500     005B                     l623:
   501                           
   502                           ;main.c: 45: CCP1IE=1;
   503     005B  1683               	bsf	3,5	;RP0=1, select bank1
   504     005C  1303               	bcf	3,6	;RP1=0, select bank1
   505     005D  150C               	bsf	12,2	;volatile
   506     005E                     l43:
   507     005E  0008               	return
   508     005F                     __end_of_CCP_capture:
   509                           
   510                           	psect	text4
   511     0043                     __ptext4:	
   512 ;; *************** function _ISR *****************
   513 ;; Defined at:
   514 ;;		line 57 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          2       0       0       0       0
   531 ;;      Totals:         2       0       0       0       0
   532 ;;Total ram usage:        2 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		Interrupt level 1
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541     0043                     _ISR:	
   542                           ;psect for function _ISR
   543                           
   544     0043                     i1l633:
   545                           
   546                           ;main.c: 58:     if(CCP1IF){
   547     0043  1283               	bcf	3,5	;RP0=0, select bank0
   548     0044  1303               	bcf	3,6	;RP1=0, select bank0
   549     0045  1D0C               	btfss	12,2	;volatile
   550     0046  2848               	goto	u1_21
   551     0047  2849               	goto	u1_20
   552     0048                     u1_21:
   553     0048  284C               	goto	i1l57
   554     0049                     u1_20:
   555     0049                     i1l635:
   556                           
   557                           ;main.c: 59:     PORTD=CCPR1;
   558     0049  0815               	movf	21,w	;volatile
   559     004A  0088               	movwf	8	;volatile
   560     004B                     i1l637:
   561                           
   562                           ;main.c: 60:     CCP1IF=0;
   563     004B  110C               	bcf	12,2	;volatile
   564     004C                     i1l57:
   565     004C  0871               	movf	??_ISR+1,w
   566     004D  008A               	movwf	10
   567     004E  0E70               	swapf	??_ISR,w
   568     004F  0083               	movwf	3
   569     0050  0EFE               	swapf	btemp,f
   570     0051  0E7E               	swapf	btemp,w
   571     0052  0009               	retfie
   572     0053                     __end_of_ISR:
   573     007E                     btemp	set	126	;btemp
   574     007E                     wtemp0	set	126
   575                           
   576                           	psect	intentry
   577     0004                     __pintentry:	
   578                           ;incstack = 0
   579                           ; Regs used in _ISR: [wreg]
   580                           
   581     0004                     interrupt_function:
   582     007E                     saved_w	set	btemp
   583     0004  00FE               	movwf	btemp
   584     0005  0E03               	swapf	3,w
   585     0006  00F0               	movwf	??_ISR
   586     0007  080A               	movf	10,w
   587     0008  00F1               	movwf	??_ISR+1
   588     0009  120A  118A  2843   	ljmp	_ISR
   589                           
   590                           	psect	config
   591                           
   592                           ;Config register CONFIG @ 0x2007
   593                           ;	Oscillator Selection bits
   594                           ;	FOSC = XT, XT oscillator
   595                           ;	Watchdog Timer Enable bit
   596                           ;	WDTE = OFF, WDT disabled
   597                           ;	Power-up Timer Enable bit
   598                           ;	PWRTE = ON, PWRT enabled
   599                           ;	Brown-out Reset Enable bit
   600                           ;	BOREN = ON, BOR enabled
   601                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   602                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   603                           ;	Data EEPROM Memory Code Protection bit
   604                           ;	CPD = OFF, Data EEPROM code protection off
   605                           ;	Flash Program Memory Write Enable bits
   606                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   607                           ;	In-Circuit Debugger Mode bit
   608                           ;	DEBUG = 0x1, unprogrammed default
   609                           ;	Flash Program Memory Code Protection bit
   610                           ;	CP = OFF, Code protection off
   611     2007                     	org	8199
   612     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _CCP_capture
                          _Port_Init
                        _Timer1_init
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP_capture                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP_capture
   _Port_Init
   _Timer1_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 26 18:34:51 2024

                     l40 0069                       l43 005E                       l37 002B  
                    l601 0013                      l611 0066                      l603 005F  
                    l621 005A                      l613 0067                      l605 0063  
                    l623 005B                      l615 0068                      l607 0064  
                    l631 003B                      l617 0053                      l609 0065  
                    l625 002C                      l619 0059                      l627 0031  
                    l629 0036                      _GIE 005F                      _ISR 0043  
                   ?_ISR 0070                     _PEIE 005E                     i1l57 004C  
                   _TMR1 000E                     u1_20 0049                     u1_21 0048  
                   _main 002C                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _CCPR1 0015  
                  i1l633 0043                    i1l635 0049                    i1l637 004B  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0043  
                 ??_main 0072                   _CCP1IE 0462                   _CCP1IF 0062  
                 _T1SYNC 0082                   _TMR1CS 0081                   _TMR1ON 0080  
          ??_Timer1_init 0072                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070      __end_of_Timer1_init 006A        __end_of_Port_Init 002C  
             __pmaintext 002C               __pintentry 0004                  _CCP1CON 0017  
                _T1CKPS0 0084                  _T1CKPS1 0085                  _T1OSCEN 0083  
            _Timer1_init 005F                  __ptext1 005F                  __ptext2 0013  
                __ptext3 0053                  __ptext4 0043     end_of_initialization 000F  
          ??_CCP_capture 0072      __end_of_CCP_capture 005F      start_initialization 000F  
            __end_of_ISR 0053                _Port_Init 0013                ___latbits 0002  
           ?_Timer1_init 0070              _CCP_capture 0053               ?_Port_Init 0070  
      interrupt_function 0004              ??_Port_Init 0072                 intlevel1 0000  
           ?_CCP_capture 0070  
