

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 08 00:04:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     001A                     _RCREG	set	26
   170     0006                     _PORTB	set	6
   171     0065                     _RCIF	set	101
   172     00C4                     _CREN	set	196
   173     005F                     _GIE	set	95
   174     005E                     _PEIE	set	94
   175     00C7                     _SPEN	set	199
   176     0099                     _SPBRG	set	153
   177     0086                     _TRISB	set	134
   178     0465                     _RCIE	set	1125
   179     043F                     _TRISC7	set	1087
   180     043E                     _TRISC6	set	1086
   181     04C4                     _SYNC	set	1220
   182     04C2                     _BRGH	set	1218
   183                           
   184                           	psect	cinit
   185     000F                     start_initialization:	
   186                           ; #config settings
   187                           
   188     000F                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   192     0010                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195     0010                     __end_of__initialization:
   196     0010  0183               	clrf	3
   197     0011  120A  118A  283A   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMMON
   200     0072                     __pbssCOMMON:
   201     0072                     _UART_Buffer:
   202     0072                     	ds	1
   203                           
   204                           	psect	cstackCOMMON
   205     0070                     __pcstackCOMMON:
   206     0070                     ?_UART_RX_Init:
   207     0070                     ?_Port_Init:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ?_ISR:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ??_ISR:	
   217                           ; 1 bytes @ 0x0
   218                           
   219                           
   220                           ; 1 bytes @ 0x0
   221     0070                     	ds	2
   222     0072                     ??_UART_RX_Init:
   223     0072                     ??_Port_Init:	
   224                           ; 1 bytes @ 0x2
   225                           
   226     0072                     ??_main:	
   227                           ; 1 bytes @ 0x2
   228                           
   229                           
   230                           	psect	maintext
   231     003A                     __pmaintext:	
   232                           ; 1 bytes @ 0x2
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 35 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 2
   258 ;; This function calls:
   259 ;;		_Port_Init
   260 ;;		_UART_RX_Init
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266     003A                     _main:	
   267                           ;psect for function _main
   268                           
   269     003A                     l618:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272                           
   273                           
   274                           ;main.c: 36:     Port_Init();
   275     003A  120A  118A  2048  120A  118A  	fcall	_Port_Init
   276     003F                     l620:
   277                           
   278                           ;main.c: 37:     UART_RX_Init();
   279     003F  120A  118A  2014  120A  118A  	fcall	_UART_RX_Init
   280     0044                     l40:	
   281                           ;main.c: 39:     while(1){
   282                           
   283     0044                     l41:	
   284                           ;main.c: 41:     }
   285                           
   286     0044  2844               	goto	l40
   287     0045  120A  118A  280C   	ljmp	start
   288     0048                     __end_of_main:
   289                           
   290                           	psect	text1
   291     0014                     __ptext1:	
   292 ;; *************** function _UART_RX_Init *****************
   293 ;; Defined at:
   294 ;;		line 45 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels used: 1
   314 ;; Hardware stack levels required when called: 1
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322     0014                     _UART_RX_Init:	
   323                           ;psect for function _UART_RX_Init
   324                           
   325     0014                     l598:	
   326                           ;incstack = 0
   327                           ; Regs used in _UART_RX_Init: [wreg]
   328                           
   329                           
   330                           ;main.c: 46:   BRGH = 1;
   331     0014  1683               	bsf	3,5	;RP0=1, select bank1
   332     0015  1303               	bcf	3,6	;RP1=0, select bank1
   333     0016  1518               	bsf	24,2	;volatile
   334     0017                     l600:
   335                           
   336                           ;main.c: 47:   SPBRG = 25;
   337     0017  3019               	movlw	25
   338     0018  0099               	movwf	25	;volatile
   339     0019                     l602:
   340                           
   341                           ;main.c: 50:   SYNC = 0;
   342     0019  1218               	bcf	24,4	;volatile
   343     001A                     l604:
   344                           
   345                           ;main.c: 51:   SPEN = 1;
   346     001A  1283               	bcf	3,5	;RP0=0, select bank0
   347     001B  1303               	bcf	3,6	;RP1=0, select bank0
   348     001C  1798               	bsf	24,7	;volatile
   349     001D                     l606:
   350                           
   351                           ;main.c: 54:   TRISC6 = 1;
   352     001D  1683               	bsf	3,5	;RP0=1, select bank1
   353     001E  1303               	bcf	3,6	;RP1=0, select bank1
   354     001F  1707               	bsf	7,6	;volatile
   355     0020                     l608:
   356                           
   357                           ;main.c: 55:   TRISC7 = 1;
   358     0020  1787               	bsf	7,7	;volatile
   359     0021                     l610:
   360                           
   361                           ;main.c: 58:   RCIE = 1;
   362     0021  168C               	bsf	12,5	;volatile
   363     0022                     l612:
   364                           
   365                           ;main.c: 59:   PEIE = 1;
   366     0022  170B               	bsf	11,6	;volatile
   367     0023                     l614:
   368                           
   369                           ;main.c: 60:   GIE = 1;
   370     0023  178B               	bsf	11,7	;volatile
   371     0024                     l616:
   372                           
   373                           ;main.c: 62:   CREN = 1;
   374     0024  1283               	bcf	3,5	;RP0=0, select bank0
   375     0025  1303               	bcf	3,6	;RP1=0, select bank0
   376     0026  1618               	bsf	24,4	;volatile
   377     0027                     l46:
   378     0027  0008               	return
   379     0028                     __end_of_UART_RX_Init:
   380                           
   381                           	psect	text2
   382     0048                     __ptext2:	
   383 ;; *************** function _Port_Init *****************
   384 ;; Defined at:
   385 ;;		line 30 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		status,2
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413     0048                     _Port_Init:	
   414                           ;psect for function _Port_Init
   415                           
   416     0048                     l596:	
   417                           ;incstack = 0
   418                           ; Regs used in _Port_Init: [status,2]
   419                           
   420                           
   421                           ;main.c: 31:    TRISB = 0x00;
   422     0048  1683               	bsf	3,5	;RP0=1, select bank1
   423     0049  1303               	bcf	3,6	;RP1=0, select bank1
   424     004A  0186               	clrf	6	;volatile
   425                           
   426                           ;main.c: 32:    PORTB = 0x00;
   427     004B  1283               	bcf	3,5	;RP0=0, select bank0
   428     004C  1303               	bcf	3,6	;RP1=0, select bank0
   429     004D  0186               	clrf	6	;volatile
   430     004E                     l35:
   431     004E  0008               	return
   432     004F                     __end_of_Port_Init:
   433                           
   434                           	psect	text3
   435     0028                     __ptext3:	
   436 ;; *************** function _ISR *****************
   437 ;; Defined at:
   438 ;;		line 65 in file "main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0
   454 ;;      Temps:          2       0       0       0       0
   455 ;;      Totals:         2       0       0       0       0
   456 ;;Total ram usage:        2 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		Interrupt level 1
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465     0028                     _ISR:	
   466                           ;psect for function _ISR
   467                           
   468     0028                     i1l622:
   469                           
   470                           ;main.c: 66:  if (RCIF == 1){
   471     0028  1283               	bcf	3,5	;RP0=0, select bank0
   472     0029  1303               	bcf	3,6	;RP1=0, select bank0
   473     002A  1E8C               	btfss	12,5	;volatile
   474     002B  282D               	goto	u1_21
   475     002C  282E               	goto	u1_20
   476     002D                     u1_21:
   477     002D  2833               	goto	i1l52
   478     002E                     u1_20:
   479     002E                     i1l624:
   480                           
   481                           ;main.c: 67:     UART_Buffer = RCREG;
   482     002E  081A               	movf	26,w	;volatile
   483     002F  00F2               	movwf	_UART_Buffer
   484                           
   485                           ;main.c: 68:     PORTB = UART_Buffer;
   486     0030  0872               	movf	_UART_Buffer,w
   487     0031  0086               	movwf	6	;volatile
   488     0032                     i1l626:
   489                           
   490                           ;main.c: 69:     RCIF = 0;
   491     0032  128C               	bcf	12,5	;volatile
   492     0033                     i1l52:
   493     0033  0871               	movf	??_ISR+1,w
   494     0034  008A               	movwf	10
   495     0035  0E70               	swapf	??_ISR,w
   496     0036  0083               	movwf	3
   497     0037  0EFE               	swapf	btemp,f
   498     0038  0E7E               	swapf	btemp,w
   499     0039  0009               	retfie
   500     003A                     __end_of_ISR:
   501     007E                     btemp	set	126	;btemp
   502     007E                     wtemp0	set	126
   503                           
   504                           	psect	intentry
   505     0004                     __pintentry:	
   506                           ;incstack = 0
   507                           ; Regs used in _ISR: [wreg]
   508                           
   509     0004                     interrupt_function:
   510     007E                     saved_w	set	btemp
   511     0004  00FE               	movwf	btemp
   512     0005  0E03               	swapf	3,w
   513     0006  00F0               	movwf	??_ISR
   514     0007  080A               	movf	10,w
   515     0008  00F1               	movwf	??_ISR+1
   516     0009  120A  118A  2828   	ljmp	_ISR
   517                           
   518                           	psect	config
   519                           
   520                           ;Config register CONFIG @ 0x2007
   521                           ;	Oscillator Selection bits
   522                           ;	FOSC = XT, XT oscillator
   523                           ;	Watchdog Timer Enable bit
   524                           ;	WDTE = OFF, WDT disabled
   525                           ;	Power-up Timer Enable bit
   526                           ;	PWRTE = ON, PWRT enabled
   527                           ;	Brown-out Reset Enable bit
   528                           ;	BOREN = ON, BOR enabled
   529                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   530                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   531                           ;	Data EEPROM Memory Code Protection bit
   532                           ;	CPD = OFF, Data EEPROM code protection off
   533                           ;	Flash Program Memory Write Enable bits
   534                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   535                           ;	In-Circuit Debugger Mode bit
   536                           ;	DEBUG = 0x1, unprogrammed default
   537                           ;	Flash Program Memory Code Protection bit
   538                           ;	CP = OFF, Code protection off
   539     2007                     	org	8199
   540     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _Port_Init
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _UART_RX_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 08 00:04:35 2024

                     l40 0044                       l41 0044                       l35 004E  
                     l46 0027                      l600 0017                      l610 0021  
                    l602 0019                      l612 0022                      l604 001A  
                    l620 003F                      l614 0023                      l606 001D  
                    l616 0024                      l608 0020                      l618 003A  
                    l596 0048                      l598 0014                      _GIE 005F  
                    _ISR 0028                     ?_ISR 0070                     _BRGH 04C2  
                   _CREN 00C4                     _PEIE 005E                     _RCIE 0465  
                   i1l52 0033                     _RCIF 0065                     _SPEN 00C7  
                   _SYNC 04C4                     u1_20 002E                     u1_21 002D  
                   _main 003A                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l622 0028  
                  i1l624 002E                    i1l626 0032                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0048                   ??_main 0072  
                 _TRISC6 043E                   _TRISC7 043F                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070        __end_of_Port_Init 004F  
             __pmaintext 003A               __pintentry 0004            ?_UART_RX_Init 0070  
                __ptext1 0014                  __ptext2 0048                  __ptext3 0028  
         ??_UART_RX_Init 0072     end_of_initialization 0010      start_initialization 000F  
            __end_of_ISR 003A     __end_of_UART_RX_Init 0028                _Port_Init 0048  
            __pbssCOMMON 0072                ___latbits 0002               ?_Port_Init 0070  
      interrupt_function 0004              ??_Port_Init 0072             _UART_RX_Init 0014  
               intlevel1 0000              _UART_Buffer 0072  
