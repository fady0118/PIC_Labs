

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun May 26 23:23:22 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0000                     	;# 
   179     0001                     	;# 
   180     0002                     	;# 
   181     0003                     	;# 
   182     0004                     	;# 
   183     0005                     	;# 
   184     0006                     	;# 
   185     0007                     	;# 
   186     0008                     	;# 
   187     0009                     	;# 
   188     000A                     	;# 
   189     000B                     	;# 
   190     000C                     	;# 
   191     000D                     	;# 
   192     000E                     	;# 
   193     000E                     	;# 
   194     000F                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001B                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001D                     	;# 
   211     001E                     	;# 
   212     001F                     	;# 
   213     0081                     	;# 
   214     0085                     	;# 
   215     0086                     	;# 
   216     0087                     	;# 
   217     0088                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     0091                     	;# 
   223     0092                     	;# 
   224     0093                     	;# 
   225     0094                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     001A                     _RCREG	set	26
   239     0034                     _RB4	set	52
   240     0035                     _RB5	set	53
   241     0033                     _RB3	set	51
   242     0032                     _RB2	set	50
   243     0031                     _RB1	set	49
   244     0030                     _RB0	set	48
   245     0065                     _RCIF	set	101
   246     00C4                     _CREN	set	196
   247     005F                     _GIE	set	95
   248     005E                     _PEIE	set	94
   249     00C7                     _SPEN	set	199
   250     0038                     _RC0	set	56
   251     0086                     _TRISB	set	134
   252     0099                     _SPBRG	set	153
   253     0434                     _TRISB4	set	1076
   254     0435                     _TRISB5	set	1077
   255     0465                     _RCIE	set	1125
   256     043F                     _TRISC7	set	1087
   257     043E                     _TRISC6	set	1086
   258     04C4                     _SYNC	set	1220
   259     04C2                     _BRGH	set	1218
   260                           
   261                           	psect	cinit
   262     0013                     start_initialization:	
   263                           ; #config settings
   264                           
   265     0013                     __initialization:
   266                           
   267                           ; Clear objects allocated to COMMON
   268     0013  01F9               	clrf	__pbssCOMMON& (0+127)
   269                           
   270                           ; Clear objects allocated to BANK0
   271     0014  1383               	bcf	3,7	;select IRP bank0
   272     0015  3020               	movlw	low __pbssBANK0
   273     0016  0084               	movwf	4
   274     0017  3035               	movlw	low (__pbssBANK0+21)
   275     0018  120A  118A  21FA  120A  118A  	fcall	clear_ram0
   276     001D                     end_of_initialization:	
   277                           ;End of C runtime variable initialization code
   278                           
   279     001D                     __end_of__initialization:
   280     001D  0183               	clrf	3
   281     001E  120A  118A  28D0   	ljmp	_main	;jump to C main() function
   282                           
   283                           	psect	bssCOMMON
   284     0079                     __pbssCOMMON:
   285     0079                     _i:
   286     0079                     	ds	1
   287                           
   288                           	psect	bssBANK0
   289     0020                     __pbssBANK0:
   290     0020                     _LCD_FLAG:
   291     0020                     	ds	1
   292     0021                     _string:
   293     0021                     	ds	20
   294                           
   295                           	psect	clrtext
   296     01FA                     clear_ram0:	
   297                           ;	Called with FSR containing the base address, and
   298                           ;	W with the last address+1
   299                           
   300     01FA  0064               	clrwdt	;clear the watchdog before getting into this loop
   301     01FB                     clrloop0:
   302     01FB  0180               	clrf	0	;clear RAM location pointed to by FSR
   303     01FC  0A84               	incf	4,f	;increment pointer
   304     01FD  0604               	xorwf	4,w	;XOR with final address
   305     01FE  1903               	btfsc	3,2	;have we reached the end yet?
   306     01FF  3400               	retlw	0	;all done for this memory range, return
   307     0200  0604               	xorwf	4,w	;XOR again to restore value
   308     0201  29FB               	goto	clrloop0	;do the next byte
   309                           
   310                           	psect	cstackCOMMON
   311     0070                     __pcstackCOMMON:
   312     0070                     ?_UART_RX_Init:
   313     0070                     ?_LCD_Init:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_LCD_Clear:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ?_LCD_Write_String:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_main:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?_ISR:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ??_ISR:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?_LCD_DATA:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_LCD_CMD:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_LCD_Write_Char:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342     0070                     	ds	4
   343     0074                     ??_UART_RX_Init:
   344     0074                     ??_LCD_DATA:	
   345                           ; 1 bytes @ 0x4
   346                           
   347     0074                     LCD_DATA@Data:	
   348                           ; 1 bytes @ 0x4
   349                           
   350                           
   351                           ; 1 bytes @ 0x4
   352     0074                     	ds	1
   353     0075                     ??_LCD_CMD:
   354     0075                     ??_LCD_Write_Char:	
   355                           ; 1 bytes @ 0x5
   356                           
   357                           
   358                           ; 1 bytes @ 0x5
   359     0075                     	ds	1
   360     0076                     LCD_CMD@CMD:
   361     0076                     LCD_Write_Char@Low4:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           ; 1 bytes @ 0x6
   366     0076                     	ds	1
   367     0077                     ??_LCD_Init:
   368     0077                     ??_LCD_Clear:	
   369                           ; 1 bytes @ 0x7
   370                           
   371     0077                     ?_LCD_Set_Cursor:	
   372                           ; 1 bytes @ 0x7
   373                           
   374     0077                     LCD_Set_Cursor@c:	
   375                           ; 1 bytes @ 0x7
   376                           
   377     0077                     LCD_Write_Char@High4:	
   378                           ; 1 bytes @ 0x7
   379                           
   380                           
   381                           ; 1 bytes @ 0x7
   382     0077                     	ds	1
   383     0078                     ??_LCD_Set_Cursor:
   384     0078                     LCD_Write_Char@Data:	
   385                           ; 1 bytes @ 0x8
   386                           
   387                           
   388                           ; 1 bytes @ 0x8
   389     0078                     	ds	1
   390     0079                     ??_main:
   391                           
   392                           	psect	cstackBANK0
   393     0035                     __pcstackBANK0:	
   394                           ; 1 bytes @ 0x9
   395                           
   396     0035                     ??_LCD_Write_String:
   397     0035                     LCD_Set_Cursor@r:	
   398                           ; 1 bytes @ 0x0
   399                           
   400                           
   401                           ; 1 bytes @ 0x0
   402     0035                     	ds	1
   403     0036                     LCD_Set_Cursor@Low4:
   404     0036                     LCD_Write_String@str:	
   405                           ; 1 bytes @ 0x1
   406                           
   407                           
   408                           ; 1 bytes @ 0x1
   409     0036                     	ds	1
   410     0037                     LCD_Set_Cursor@High4:
   411     0037                     LCD_Write_String@i:	
   412                           ; 1 bytes @ 0x2
   413                           
   414                           
   415                           ; 2 bytes @ 0x2
   416     0037                     	ds	1
   417     0038                     LCD_Set_Cursor@Temp:
   418                           
   419                           ; 1 bytes @ 0x3
   420     0038                     	ds	1
   421                           
   422                           	psect	maintext
   423     00D0                     __pmaintext:	
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 24 in file "main_RX.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : B00/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0
   446 ;;      Totals:         0       0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels required when called: 4
   449 ;; This function calls:
   450 ;;		_LCD_Clear
   451 ;;		_LCD_Init
   452 ;;		_LCD_Set_Cursor
   453 ;;		_LCD_Write_String
   454 ;;		_UART_RX_Init
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460     00D0                     _main:	
   461                           ;psect for function _main
   462                           
   463     00D0                     l998:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   466                           
   467                           
   468                           ;main_RX.c: 25:     UART_RX_Init();
   469     00D0  120A  118A  21D9  120A  118A  	fcall	_UART_RX_Init
   470                           
   471                           ;main_RX.c: 26:     LCD_Init();
   472     00D5  120A  118A  2021  120A  118A  	fcall	_LCD_Init
   473                           
   474                           ;main_RX.c: 27:     LCD_Clear();
   475     00DA  120A  118A  21ED  120A  118A  	fcall	_LCD_Clear
   476                           
   477                           ;main_RX.c: 28:     LCD_Set_Cursor(1,1);
   478     00DF  01F7               	clrf	LCD_Set_Cursor@c
   479     00E0  0AF7               	incf	LCD_Set_Cursor@c,f
   480     00E1  3001               	movlw	1
   481     00E2  120A  118A  2083  120A  118A  	fcall	_LCD_Set_Cursor
   482     00E7                     l1000:
   483                           
   484                           ;main_RX.c: 30:        if(RC0){
   485     00E7  1283               	bcf	3,5	;RP0=0, select bank0
   486     00E8  1303               	bcf	3,6	;RP1=0, select bank0
   487     00E9  1C07               	btfss	7,0	;volatile
   488     00EA  28EC               	goto	u301
   489     00EB  28ED               	goto	u300
   490     00EC                     u301:
   491     00EC  28FA               	goto	l1004
   492     00ED                     u300:
   493     00ED                     l1002:
   494                           
   495                           ;main_RX.c: 31:        LCD_Clear();
   496     00ED  120A  118A  21ED  120A  118A  	fcall	_LCD_Clear
   497                           
   498                           ;main_RX.c: 32:        LCD_Set_Cursor(1,1);
   499     00F2  01F7               	clrf	LCD_Set_Cursor@c
   500     00F3  0AF7               	incf	LCD_Set_Cursor@c,f
   501     00F4  3001               	movlw	1
   502     00F5  120A  118A  2083  120A  118A  	fcall	_LCD_Set_Cursor
   503     00FA                     l1004:
   504                           
   505                           ;main_RX.c: 34:        if(LCD_FLAG==1){
   506     00FA  1283               	bcf	3,5	;RP0=0, select bank0
   507     00FB  1303               	bcf	3,6	;RP1=0, select bank0
   508     00FC  0320               	decf	_LCD_FLAG,w
   509     00FD  1D03               	btfss	3,2
   510     00FE  2900               	goto	u311
   511     00FF  2901               	goto	u310
   512     0100                     u311:
   513     0100  28E7               	goto	l1000
   514     0101                     u310:
   515     0101                     l1006:
   516                           
   517                           ;main_RX.c: 35:        LCD_Set_Cursor(1,1);
   518     0101  01F7               	clrf	LCD_Set_Cursor@c
   519     0102  0AF7               	incf	LCD_Set_Cursor@c,f
   520     0103  3001               	movlw	1
   521     0104  120A  118A  2083  120A  118A  	fcall	_LCD_Set_Cursor
   522     0109                     l1008:
   523                           
   524                           ;main_RX.c: 36:        LCD_Write_String(string);
   525     0109  3021               	movlw	(low (_string| 0))& (0+255)
   526     010A  120A  118A  217C  120A  118A  	fcall	_LCD_Write_String
   527     010F                     l1010:
   528                           
   529                           ;main_RX.c: 37:        LCD_FLAG=0;
   530     010F  1283               	bcf	3,5	;RP0=0, select bank0
   531     0110  1303               	bcf	3,6	;RP1=0, select bank0
   532     0111  01A0               	clrf	_LCD_FLAG
   533     0112  28E7               	goto	l1000
   534     0113  120A  118A  2810   	ljmp	start
   535     0116                     __end_of_main:
   536                           
   537                           	psect	text1
   538     01D9                     __ptext1:	
   539 ;; *************** function _UART_RX_Init *****************
   540 ;; Defined at:
   541 ;;		line 43 in file "main_RX.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; Hardware stack levels required when called: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     01D9                     _UART_RX_Init:	
   570                           ;psect for function _UART_RX_Init
   571                           
   572     01D9                     l872:	
   573                           ;incstack = 0
   574                           ; Regs used in _UART_RX_Init: [wreg]
   575                           
   576                           
   577                           ;main_RX.c: 44:   BRGH = 1;
   578     01D9  1683               	bsf	3,5	;RP0=1, select bank1
   579     01DA  1303               	bcf	3,6	;RP1=0, select bank1
   580     01DB  1518               	bsf	24,2	;volatile
   581     01DC                     l874:
   582                           
   583                           ;main_RX.c: 45:   SPBRG = 25;
   584     01DC  3019               	movlw	25
   585     01DD  0099               	movwf	25	;volatile
   586     01DE                     l876:
   587                           
   588                           ;main_RX.c: 48:   SYNC = 0;
   589     01DE  1218               	bcf	24,4	;volatile
   590     01DF                     l878:
   591                           
   592                           ;main_RX.c: 49:   SPEN = 1;
   593     01DF  1283               	bcf	3,5	;RP0=0, select bank0
   594     01E0  1303               	bcf	3,6	;RP1=0, select bank0
   595     01E1  1798               	bsf	24,7	;volatile
   596     01E2                     l880:
   597                           
   598                           ;main_RX.c: 52:   TRISC6 = 1;
   599     01E2  1683               	bsf	3,5	;RP0=1, select bank1
   600     01E3  1303               	bcf	3,6	;RP1=0, select bank1
   601     01E4  1707               	bsf	7,6	;volatile
   602     01E5                     l882:
   603                           
   604                           ;main_RX.c: 53:   TRISC7 = 1;
   605     01E5  1787               	bsf	7,7	;volatile
   606     01E6                     l884:
   607                           
   608                           ;main_RX.c: 56:   RCIE = 1;
   609     01E6  168C               	bsf	12,5	;volatile
   610     01E7                     l886:
   611                           
   612                           ;main_RX.c: 57:   PEIE = 1;
   613     01E7  170B               	bsf	11,6	;volatile
   614     01E8                     l888:
   615                           
   616                           ;main_RX.c: 58:   GIE = 1;
   617     01E8  178B               	bsf	11,7	;volatile
   618     01E9                     l890:
   619                           
   620                           ;main_RX.c: 60:   CREN = 1;
   621     01E9  1283               	bcf	3,5	;RP0=0, select bank0
   622     01EA  1303               	bcf	3,6	;RP1=0, select bank0
   623     01EB  1618               	bsf	24,4	;volatile
   624     01EC                     l55:
   625     01EC  0008               	return
   626     01ED                     __end_of_UART_RX_Init:
   627                           
   628                           	psect	text2
   629     017C                     __ptext2:	
   630 ;; *************** function _LCD_Write_String *****************
   631 ;; Defined at:
   632 ;;		line 108 in file "LCD.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  str             1    wreg     PTR unsigned char 
   635 ;;		 -> string(20), 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  str             1    1[BANK0 ] PTR unsigned char 
   638 ;;		 -> string(20), 
   639 ;;  i               2    2[BANK0 ] int 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         0       0       0       0       0
   650 ;;      Locals:         0       3       0       0       0
   651 ;;      Temps:          0       1       0       0       0
   652 ;;      Totals:         0       4       0       0       0
   653 ;;Total ram usage:        4 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 3
   656 ;; This function calls:
   657 ;;		_LCD_Write_Char
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663     017C                     _LCD_Write_String:	
   664                           ;psect for function _LCD_Write_String
   665                           
   666                           
   667                           ;incstack = 0
   668                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   669                           ;LCD_Write_String@str stored from wreg
   670     017C  1283               	bcf	3,5	;RP0=0, select bank0
   671     017D  1303               	bcf	3,6	;RP1=0, select bank0
   672     017E  00B6               	movwf	LCD_Write_String@str
   673     017F                     l990:
   674                           
   675                           ;LCD.c: 108: void LCD_Write_String(char *str);LCD.c: 109: {;LCD.c: 110:   int i;;LCD.c: 
      +                          111:   for(i=0;str[i]!='\0';i++)
   676     017F  01B7               	clrf	LCD_Write_String@i
   677     0180  01B8               	clrf	LCD_Write_String@i+1
   678     0181  2995               	goto	l996
   679     0182                     l992:
   680                           
   681                           ;LCD.c: 112:     LCD_Write_Char(str[i]);
   682     0182  0837               	movf	LCD_Write_String@i,w
   683     0183  0736               	addwf	LCD_Write_String@str,w
   684     0184  00B5               	movwf	??_LCD_Write_String
   685     0185  0835               	movf	??_LCD_Write_String,w
   686     0186  0084               	movwf	4
   687     0187  0800               	movf	0,w
   688     0188  120A  118A  2116  120A  118A  	fcall	_LCD_Write_Char
   689     018D                     l994:
   690     018D  3001               	movlw	1
   691     018E  1283               	bcf	3,5	;RP0=0, select bank0
   692     018F  1303               	bcf	3,6	;RP1=0, select bank0
   693     0190  07B7               	addwf	LCD_Write_String@i,f
   694     0191  1803               	skipnc
   695     0192  0AB8               	incf	LCD_Write_String@i+1,f
   696     0193  3000               	movlw	0
   697     0194  07B8               	addwf	LCD_Write_String@i+1,f
   698     0195                     l996:
   699     0195  0837               	movf	LCD_Write_String@i,w
   700     0196  0736               	addwf	LCD_Write_String@str,w
   701     0197  00B5               	movwf	??_LCD_Write_String
   702     0198  0835               	movf	??_LCD_Write_String,w
   703     0199  0084               	movwf	4
   704     019A  1383               	bcf	3,7	;select IRP bank0
   705     019B  0800               	movf	0,w
   706     019C  1D03               	btfss	3,2
   707     019D  299F               	goto	u291
   708     019E  29A0               	goto	u290
   709     019F                     u291:
   710     019F  2982               	goto	l992
   711     01A0                     u290:
   712     01A0                     l116:
   713     01A0  0008               	return
   714     01A1                     __end_of_LCD_Write_String:
   715                           
   716                           	psect	text3
   717     0116                     __ptext3:	
   718 ;; *************** function _LCD_Write_Char *****************
   719 ;; Defined at:
   720 ;;		line 91 in file "LCD.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  Data            1    wreg     unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  Data            1    8[COMMON] unsigned char 
   725 ;;  High4           1    7[COMMON] unsigned char 
   726 ;;  Low4            1    6[COMMON] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         3       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0
   739 ;;      Totals:         4       0       0       0       0
   740 ;;Total ram usage:        4 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 2
   743 ;; This function calls:
   744 ;;		_LCD_DATA
   745 ;; This function is called by:
   746 ;;		_LCD_Write_String
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750     0116                     _LCD_Write_Char:	
   751                           ;psect for function _LCD_Write_Char
   752                           
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   756                           ;LCD_Write_Char@Data stored from wreg
   757     0116  00F8               	movwf	LCD_Write_Char@Data
   758     0117                     l848:
   759                           
   760                           ;LCD.c: 91: void LCD_Write_Char(char Data);LCD.c: 92: {;LCD.c: 93:   char Low4,High4;;LC
      +                          D.c: 94:   Low4 = Data & 0x0F;
   761     0117  0878               	movf	LCD_Write_Char@Data,w
   762     0118  390F               	andlw	15
   763     0119  00F6               	movwf	LCD_Write_Char@Low4
   764                           
   765                           ;LCD.c: 95:   High4 = Data & 0xF0;
   766     011A  0878               	movf	LCD_Write_Char@Data,w
   767     011B  39F0               	andlw	240
   768     011C  00F7               	movwf	LCD_Write_Char@High4
   769     011D                     l850:
   770                           
   771                           ;LCD.c: 96:   RB5 = 1;
   772     011D  1283               	bcf	3,5	;RP0=0, select bank0
   773     011E  1303               	bcf	3,6	;RP1=0, select bank0
   774     011F  1686               	bsf	6,5	;volatile
   775     0120                     l852:
   776                           
   777                           ;LCD.c: 97:   LCD_DATA(High4>>4);
   778     0120  0877               	movf	LCD_Write_Char@High4,w
   779     0121  00F5               	movwf	??_LCD_Write_Char
   780     0122  3004               	movlw	4
   781     0123                     u195:
   782     0123  1003               	clrc
   783     0124  0CF5               	rrf	??_LCD_Write_Char,f
   784     0125  3EFF               	addlw	-1
   785     0126  1D03               	skipz
   786     0127  2923               	goto	u195
   787     0128  0875               	movf	??_LCD_Write_Char,w
   788     0129  120A  118A  21A1  120A  118A  	fcall	_LCD_DATA
   789     012E                     l854:
   790                           
   791                           ;LCD.c: 98:   RB4 = 1;
   792     012E  1283               	bcf	3,5	;RP0=0, select bank0
   793     012F  1303               	bcf	3,6	;RP1=0, select bank0
   794     0130  1606               	bsf	6,4	;volatile
   795     0131                     l856:
   796                           
   797                           ;LCD.c: 99:   _delay((unsigned long)((500)*(4000000/4000000.0)));
   798     0131  30A6               	movlw	166
   799     0132  00F5               	movwf	??_LCD_Write_Char
   800     0133                     u327:
   801     0133  0BF5               	decfsz	??_LCD_Write_Char,f
   802     0134  2933               	goto	u327
   803     0135  0000               	nop
   804     0136                     l858:
   805                           
   806                           ;LCD.c: 100:   RB4 = 0;
   807     0136  1283               	bcf	3,5	;RP0=0, select bank0
   808     0137  1303               	bcf	3,6	;RP1=0, select bank0
   809     0138  1206               	bcf	6,4	;volatile
   810     0139                     l860:
   811                           
   812                           ;LCD.c: 101:   _delay((unsigned long)((500)*(4000000/4000000.0)));
   813     0139  30A6               	movlw	166
   814     013A  00F5               	movwf	??_LCD_Write_Char
   815     013B                     u337:
   816     013B  0BF5               	decfsz	??_LCD_Write_Char,f
   817     013C  293B               	goto	u337
   818     013D  0000               	nop
   819     013E                     l862:
   820                           
   821                           ;LCD.c: 102:   LCD_DATA(Low4);
   822     013E  0876               	movf	LCD_Write_Char@Low4,w
   823     013F  120A  118A  21A1  120A  118A  	fcall	_LCD_DATA
   824     0144                     l864:
   825                           
   826                           ;LCD.c: 103:   RB4 = 1;
   827     0144  1283               	bcf	3,5	;RP0=0, select bank0
   828     0145  1303               	bcf	3,6	;RP1=0, select bank0
   829     0146  1606               	bsf	6,4	;volatile
   830     0147                     l866:
   831                           
   832                           ;LCD.c: 104:   _delay((unsigned long)((500)*(4000000/4000000.0)));
   833     0147  30A6               	movlw	166
   834     0148  00F5               	movwf	??_LCD_Write_Char
   835     0149                     u347:
   836     0149  0BF5               	decfsz	??_LCD_Write_Char,f
   837     014A  2949               	goto	u347
   838     014B  0000               	nop
   839     014C                     l868:
   840                           
   841                           ;LCD.c: 105:   RB4 = 0;
   842     014C  1283               	bcf	3,5	;RP0=0, select bank0
   843     014D  1303               	bcf	3,6	;RP1=0, select bank0
   844     014E  1206               	bcf	6,4	;volatile
   845     014F                     l870:
   846                           
   847                           ;LCD.c: 106:   _delay((unsigned long)((500)*(4000000/4000000.0)));
   848     014F  30A6               	movlw	166
   849     0150  00F5               	movwf	??_LCD_Write_Char
   850     0151                     u357:
   851     0151  0BF5               	decfsz	??_LCD_Write_Char,f
   852     0152  2951               	goto	u357
   853     0153  0000               	nop
   854     0154                     l110:
   855     0154  0008               	return
   856     0155                     __end_of_LCD_Write_Char:
   857                           
   858                           	psect	text4
   859     0083                     __ptext4:	
   860 ;; *************** function _LCD_Set_Cursor *****************
   861 ;; Defined at:
   862 ;;		line 48 in file "LCD.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  r               1    wreg     unsigned char 
   865 ;;  c               1    7[COMMON] unsigned char 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  r               1    0[BANK0 ] unsigned char 
   868 ;;  Temp            1    3[BANK0 ] unsigned char 
   869 ;;  High4           1    2[BANK0 ] unsigned char 
   870 ;;  Low4            1    1[BANK0 ] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         1       0       0       0       0
   881 ;;      Locals:         0       4       0       0       0
   882 ;;      Temps:          1       0       0       0       0
   883 ;;      Totals:         2       4       0       0       0
   884 ;;Total ram usage:        6 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 3
   887 ;; This function calls:
   888 ;;		_LCD_CMD
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894     0083                     _LCD_Set_Cursor:	
   895                           ;psect for function _LCD_Set_Cursor
   896                           
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   900                           ;LCD_Set_Cursor@r stored from wreg
   901     0083  1283               	bcf	3,5	;RP0=0, select bank0
   902     0084  1303               	bcf	3,6	;RP1=0, select bank0
   903     0085  00B5               	movwf	LCD_Set_Cursor@r
   904     0086                     l930:
   905                           
   906                           ;LCD.c: 48: void LCD_Set_Cursor(unsigned char r, unsigned char c);LCD.c: 49: {;LCD.c: 50
      +                          :   unsigned char Temp,Low4,High4;;LCD.c: 51:   if(r == 1)
   907     0086  0335               	decf	LCD_Set_Cursor@r,w
   908     0087  1D03               	btfss	3,2
   909     0088  288A               	goto	u201
   910     0089  288B               	goto	u200
   911     008A                     u201:
   912     008A  28A9               	goto	l940
   913     008B                     u200:
   914     008B                     l932:
   915                           
   916                           ;LCD.c: 52:   {;LCD.c: 53:     Temp = 0x80 + c - 1;
   917     008B  0877               	movf	LCD_Set_Cursor@c,w
   918     008C  3E7F               	addlw	127
   919     008D  00B8               	movwf	LCD_Set_Cursor@Temp
   920                           
   921                           ;LCD.c: 54:     High4 = Temp >> 4;
   922     008E  0838               	movf	LCD_Set_Cursor@Temp,w
   923     008F  00F8               	movwf	??_LCD_Set_Cursor
   924     0090  3004               	movlw	4
   925     0091                     u215:
   926     0091  1003               	clrc
   927     0092  0CF8               	rrf	??_LCD_Set_Cursor,f
   928     0093  3EFF               	addlw	-1
   929     0094  1D03               	skipz
   930     0095  2891               	goto	u215
   931     0096  0878               	movf	??_LCD_Set_Cursor,w
   932     0097  00B7               	movwf	LCD_Set_Cursor@High4
   933     0098                     l934:
   934                           
   935                           ;LCD.c: 55:     Low4 = Temp & 0x0F;
   936     0098  0838               	movf	LCD_Set_Cursor@Temp,w
   937     0099  390F               	andlw	15
   938     009A  00B6               	movwf	LCD_Set_Cursor@Low4
   939     009B                     l936:
   940                           
   941                           ;LCD.c: 56:     LCD_CMD(High4);
   942     009B  0837               	movf	LCD_Set_Cursor@High4,w
   943     009C  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
   944     00A1                     l938:
   945                           
   946                           ;LCD.c: 57:     LCD_CMD(Low4);
   947     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   948     00A2  1303               	bcf	3,6	;RP1=0, select bank0
   949     00A3  0836               	movf	LCD_Set_Cursor@Low4,w
   950     00A4  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
   951     00A9                     l940:
   952                           
   953                           ;LCD.c: 59:   if(r == 2)
   954     00A9  3002               	movlw	2
   955     00AA  1283               	bcf	3,5	;RP0=0, select bank0
   956     00AB  1303               	bcf	3,6	;RP1=0, select bank0
   957     00AC  0635               	xorwf	LCD_Set_Cursor@r,w
   958     00AD  1D03               	btfss	3,2
   959     00AE  28B0               	goto	u221
   960     00AF  28B1               	goto	u220
   961     00B0                     u221:
   962     00B0  28CF               	goto	l104
   963     00B1                     u220:
   964     00B1                     l942:
   965                           
   966                           ;LCD.c: 60:   {;LCD.c: 61:     Temp = 0xC0 + c - 1;
   967     00B1  0877               	movf	LCD_Set_Cursor@c,w
   968     00B2  3EBF               	addlw	191
   969     00B3  00B8               	movwf	LCD_Set_Cursor@Temp
   970                           
   971                           ;LCD.c: 62:     High4 = Temp >> 4;
   972     00B4  0838               	movf	LCD_Set_Cursor@Temp,w
   973     00B5  00F8               	movwf	??_LCD_Set_Cursor
   974     00B6  3004               	movlw	4
   975     00B7                     u235:
   976     00B7  1003               	clrc
   977     00B8  0CF8               	rrf	??_LCD_Set_Cursor,f
   978     00B9  3EFF               	addlw	-1
   979     00BA  1D03               	skipz
   980     00BB  28B7               	goto	u235
   981     00BC  0878               	movf	??_LCD_Set_Cursor,w
   982     00BD  00B7               	movwf	LCD_Set_Cursor@High4
   983     00BE                     l944:
   984                           
   985                           ;LCD.c: 63:     Low4 = Temp & 0x0F;
   986     00BE  0838               	movf	LCD_Set_Cursor@Temp,w
   987     00BF  390F               	andlw	15
   988     00C0  00B6               	movwf	LCD_Set_Cursor@Low4
   989     00C1                     l946:
   990                           
   991                           ;LCD.c: 64:     LCD_CMD(High4);
   992     00C1  0837               	movf	LCD_Set_Cursor@High4,w
   993     00C2  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
   994     00C7                     l948:
   995                           
   996                           ;LCD.c: 65:     LCD_CMD(Low4);
   997     00C7  1283               	bcf	3,5	;RP0=0, select bank0
   998     00C8  1303               	bcf	3,6	;RP1=0, select bank0
   999     00C9  0836               	movf	LCD_Set_Cursor@Low4,w
  1000     00CA  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1001     00CF                     l104:
  1002     00CF  0008               	return
  1003     00D0                     __end_of_LCD_Set_Cursor:
  1004                           
  1005                           	psect	text5
  1006     0021                     __ptext5:	
  1007 ;; *************** function _LCD_Init *****************
  1008 ;; Defined at:
  1009 ;;		line 68 in file "LCD.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, pclath, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1023 ;;      Params:         0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0
  1025 ;;      Temps:          2       0       0       0       0
  1026 ;;      Totals:         2       0       0       0       0
  1027 ;;Total ram usage:        2 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 3
  1030 ;; This function calls:
  1031 ;;		_LCD_CMD
  1032 ;;		_LCD_DATA
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038     0021                     _LCD_Init:	
  1039                           ;psect for function _LCD_Init
  1040                           
  1041     0021                     l892:	
  1042                           ;incstack = 0
  1043                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1044                           
  1045                           
  1046                           ;LCD.c: 71:   TRISB = 0x00;
  1047     0021  1683               	bsf	3,5	;RP0=1, select bank1
  1048     0022  1303               	bcf	3,6	;RP1=0, select bank1
  1049     0023  0186               	clrf	6	;volatile
  1050     0024                     l894:
  1051                           
  1052                           ;LCD.c: 72:   TRISB5 = 0;
  1053     0024  1286               	bcf	6,5	;volatile
  1054     0025                     l896:
  1055                           
  1056                           ;LCD.c: 73:   TRISB4 = 0;
  1057     0025  1206               	bcf	6,4	;volatile
  1058     0026                     l898:
  1059                           
  1060                           ;LCD.c: 75:   LCD_DATA(0x00);
  1061     0026  3000               	movlw	0
  1062     0027  120A  118A  21A1  120A  118A  	fcall	_LCD_DATA
  1063     002C                     l900:
  1064                           
  1065                           ;LCD.c: 76:   _delay((unsigned long)((30)*(4000000/4000.0)));
  1066     002C  3027               	movlw	39
  1067     002D  00F8               	movwf	??_LCD_Init+1
  1068     002E  30F5               	movlw	245
  1069     002F  00F7               	movwf	??_LCD_Init
  1070     0030                     u367:
  1071     0030  0BF7               	decfsz	??_LCD_Init,f
  1072     0031  2830               	goto	u367
  1073     0032  0BF8               	decfsz	??_LCD_Init+1,f
  1074     0033  2830               	goto	u367
  1075     0034                     l902:
  1076                           
  1077                           ;LCD.c: 77:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  1078     0034  30A6               	movlw	166
  1079     0035  00F7               	movwf	??_LCD_Init
  1080     0036                     u377:
  1081     0036  0BF7               	decfsz	??_LCD_Init,f
  1082     0037  2836               	goto	u377
  1083     0038  0000               	nop
  1084     0039                     l904:
  1085                           
  1086                           ;LCD.c: 78:   LCD_CMD(0x03);
  1087     0039  3003               	movlw	3
  1088     003A  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1089     003F                     l906:
  1090                           
  1091                           ;LCD.c: 79:   _delay((unsigned long)((5)*(4000000/4000.0)));
  1092     003F  3007               	movlw	7
  1093     0040  00F8               	movwf	??_LCD_Init+1
  1094     0041  307D               	movlw	125
  1095     0042  00F7               	movwf	??_LCD_Init
  1096     0043                     u387:
  1097     0043  0BF7               	decfsz	??_LCD_Init,f
  1098     0044  2843               	goto	u387
  1099     0045  0BF8               	decfsz	??_LCD_Init+1,f
  1100     0046  2843               	goto	u387
  1101     0047                     l908:
  1102                           
  1103                           ;LCD.c: 80:   LCD_CMD(0x03);
  1104     0047  3003               	movlw	3
  1105     0048  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1106     004D                     l910:
  1107                           
  1108                           ;LCD.c: 81:   _delay((unsigned long)((150)*(4000000/4000000.0)));
  1109     004D  3031               	movlw	49
  1110     004E  00F7               	movwf	??_LCD_Init
  1111     004F                     u397:
  1112     004F  0BF7               	decfsz	??_LCD_Init,f
  1113     0050  284F               	goto	u397
  1114     0051  2852               	nop2
  1115     0052                     l912:
  1116                           
  1117                           ;LCD.c: 82:   LCD_CMD(0x03);
  1118     0052  3003               	movlw	3
  1119     0053  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1120     0058                     l914:
  1121                           
  1122                           ;LCD.c: 83:   LCD_CMD(0x02);
  1123     0058  3002               	movlw	2
  1124     0059  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1125     005E                     l916:
  1126                           
  1127                           ;LCD.c: 84:   LCD_CMD(0x02);
  1128     005E  3002               	movlw	2
  1129     005F  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1130     0064                     l918:
  1131                           
  1132                           ;LCD.c: 85:   LCD_CMD(0x08);
  1133     0064  3008               	movlw	8
  1134     0065  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1135     006A                     l920:
  1136                           
  1137                           ;LCD.c: 86:   LCD_CMD(0x00);
  1138     006A  3000               	movlw	0
  1139     006B  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1140     0070                     l922:
  1141                           
  1142                           ;LCD.c: 87:   LCD_CMD(0x0C);
  1143     0070  300C               	movlw	12
  1144     0071  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1145     0076                     l924:
  1146                           
  1147                           ;LCD.c: 88:   LCD_CMD(0x00);
  1148     0076  3000               	movlw	0
  1149     0077  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1150     007C                     l926:
  1151                           
  1152                           ;LCD.c: 89:   LCD_CMD(0x06);
  1153     007C  3006               	movlw	6
  1154     007D  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1155     0082                     l107:
  1156     0082  0008               	return
  1157     0083                     __end_of_LCD_Init:
  1158                           
  1159                           	psect	text6
  1160     01ED                     __ptext6:	
  1161 ;; *************** function _LCD_Clear *****************
  1162 ;; Defined at:
  1163 ;;		line 43 in file "LCD.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0, pclath, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 3
  1184 ;; This function calls:
  1185 ;;		_LCD_CMD
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191     01ED                     _LCD_Clear:	
  1192                           ;psect for function _LCD_Clear
  1193                           
  1194     01ED                     l928:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1197                           
  1198                           
  1199                           ;LCD.c: 45:   LCD_CMD(0);
  1200     01ED  3000               	movlw	0
  1201     01EE  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1202                           
  1203                           ;LCD.c: 46:   LCD_CMD(1);
  1204     01F3  3001               	movlw	1
  1205     01F4  120A  118A  21C3  120A  118A  	fcall	_LCD_CMD
  1206     01F9                     l99:
  1207     01F9  0008               	return
  1208     01FA                     __end_of_LCD_Clear:
  1209                           
  1210                           	psect	text7
  1211     01C3                     __ptext7:	
  1212 ;; *************** function _LCD_CMD *****************
  1213 ;; Defined at:
  1214 ;;		line 32 in file "LCD.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  CMD             1    wreg     unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  CMD             1    6[COMMON] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         1       0       0       0       0
  1230 ;;      Temps:          1       0       0       0       0
  1231 ;;      Totals:         2       0       0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 2
  1235 ;; This function calls:
  1236 ;;		_LCD_DATA
  1237 ;; This function is called by:
  1238 ;;		_LCD_Clear
  1239 ;;		_LCD_Set_Cursor
  1240 ;;		_LCD_Init
  1241 ;;		_LCD_SL
  1242 ;;		_LCD_SR
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246     01C3                     _LCD_CMD:	
  1247                           ;psect for function _LCD_CMD
  1248                           
  1249                           
  1250                           ;incstack = 0
  1251                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1252                           ;LCD_CMD@CMD stored from wreg
  1253     01C3  00F6               	movwf	LCD_CMD@CMD
  1254     01C4                     l838:
  1255                           
  1256                           ;LCD.c: 32: void LCD_CMD(unsigned char CMD);LCD.c: 33: {;LCD.c: 35:   RB5 = 0;
  1257     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1258     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1259     01C6  1286               	bcf	6,5	;volatile
  1260     01C7                     l840:
  1261                           
  1262                           ;LCD.c: 37:   LCD_DATA(CMD);
  1263     01C7  0876               	movf	LCD_CMD@CMD,w
  1264     01C8  120A  118A  21A1  120A  118A  	fcall	_LCD_DATA
  1265     01CD                     l842:
  1266                           
  1267                           ;LCD.c: 39:   RB4 = 1;
  1268     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1269     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1270     01CF  1606               	bsf	6,4	;volatile
  1271     01D0                     l844:
  1272                           
  1273                           ;LCD.c: 40:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  1274     01D0  30A6               	movlw	166
  1275     01D1  00F5               	movwf	??_LCD_CMD
  1276     01D2                     u407:
  1277     01D2  0BF5               	decfsz	??_LCD_CMD,f
  1278     01D3  29D2               	goto	u407
  1279     01D4  0000               	nop
  1280     01D5                     l846:
  1281                           
  1282                           ;LCD.c: 41:   RB4 = 0;
  1283     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1284     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1285     01D7  1206               	bcf	6,4	;volatile
  1286     01D8                     l96:
  1287     01D8  0008               	return
  1288     01D9                     __end_of_LCD_CMD:
  1289                           
  1290                           	psect	text8
  1291     01A1                     __ptext8:	
  1292 ;; *************** function _LCD_DATA *****************
  1293 ;; Defined at:
  1294 ;;		line 13 in file "LCD.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  Data            1    wreg     unsigned char 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  Data            1    4[COMMON] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         1       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         1       0       0       0       0
  1312 ;;Total ram usage:        1 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_LCD_CMD
  1319 ;;		_LCD_Init
  1320 ;;		_LCD_Write_Char
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324     01A1                     _LCD_DATA:	
  1325                           ;psect for function _LCD_DATA
  1326                           
  1327                           
  1328                           ;incstack = 0
  1329                           ; Regs used in _LCD_DATA: [wreg]
  1330                           ;LCD_DATA@Data stored from wreg
  1331     01A1  00F4               	movwf	LCD_DATA@Data
  1332     01A2                     l828:
  1333                           
  1334                           ;LCD.c: 13: void LCD_DATA(unsigned char Data);LCD.c: 14: {;LCD.c: 15:   if(Data & 1)
  1335     01A2  1C74               	btfss	LCD_DATA@Data,0
  1336     01A3  29A5               	goto	u151
  1337     01A4  29A6               	goto	u150
  1338     01A5                     u151:
  1339     01A5  29AA               	goto	l85
  1340     01A6                     u150:
  1341     01A6                     l830:
  1342                           
  1343                           ;LCD.c: 16:     RB0 = 1;
  1344     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1345     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1346     01A8  1406               	bsf	6,0	;volatile
  1347     01A9  29AD               	goto	l86
  1348     01AA                     l85:	
  1349                           ;LCD.c: 17:   else
  1350                           
  1351                           
  1352                           ;LCD.c: 18:     RB0 = 0;
  1353     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1354     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1355     01AC  1006               	bcf	6,0	;volatile
  1356     01AD                     l86:
  1357                           
  1358                           ;LCD.c: 19:   if(Data & 2)
  1359     01AD  1CF4               	btfss	LCD_DATA@Data,1
  1360     01AE  29B0               	goto	u161
  1361     01AF  29B1               	goto	u160
  1362     01B0                     u161:
  1363     01B0  29B3               	goto	l87
  1364     01B1                     u160:
  1365     01B1                     l832:
  1366                           
  1367                           ;LCD.c: 20:     RB1 = 1;
  1368     01B1  1486               	bsf	6,1	;volatile
  1369     01B2  29B4               	goto	l88
  1370     01B3                     l87:	
  1371                           ;LCD.c: 21:   else
  1372                           
  1373                           
  1374                           ;LCD.c: 22:     RB1 = 0;
  1375     01B3  1086               	bcf	6,1	;volatile
  1376     01B4                     l88:
  1377                           
  1378                           ;LCD.c: 23:   if(Data & 4)
  1379     01B4  1D74               	btfss	LCD_DATA@Data,2
  1380     01B5  29B7               	goto	u171
  1381     01B6  29B8               	goto	u170
  1382     01B7                     u171:
  1383     01B7  29BA               	goto	l89
  1384     01B8                     u170:
  1385     01B8                     l834:
  1386                           
  1387                           ;LCD.c: 24:     RB2 = 1;
  1388     01B8  1506               	bsf	6,2	;volatile
  1389     01B9  29BB               	goto	l90
  1390     01BA                     l89:	
  1391                           ;LCD.c: 25:   else
  1392                           
  1393                           
  1394                           ;LCD.c: 26:     RB2 = 0;
  1395     01BA  1106               	bcf	6,2	;volatile
  1396     01BB                     l90:
  1397                           
  1398                           ;LCD.c: 27:   if(Data & 8)
  1399     01BB  1DF4               	btfss	LCD_DATA@Data,3
  1400     01BC  29BE               	goto	u181
  1401     01BD  29BF               	goto	u180
  1402     01BE                     u181:
  1403     01BE  29C1               	goto	l91
  1404     01BF                     u180:
  1405     01BF                     l836:
  1406                           
  1407                           ;LCD.c: 28:     RB3 = 1;
  1408     01BF  1586               	bsf	6,3	;volatile
  1409     01C0  29C2               	goto	l93
  1410     01C1                     l91:	
  1411                           ;LCD.c: 29:   else
  1412                           
  1413                           
  1414                           ;LCD.c: 30:     RB3 = 0;
  1415     01C1  1186               	bcf	6,3	;volatile
  1416     01C2                     l93:
  1417     01C2  0008               	return
  1418     01C3                     __end_of_LCD_DATA:
  1419                           
  1420                           	psect	text9
  1421     0155                     __ptext9:	
  1422 ;; *************** function _ISR *****************
  1423 ;; Defined at:
  1424 ;;		line 63 in file "main_RX.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0
  1440 ;;      Temps:          4       0       0       0       0
  1441 ;;      Totals:         4       0       0       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		Interrupt level 1
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451     0155                     _ISR:	
  1452                           ;psect for function _ISR
  1453                           
  1454     0155                     i1l972:
  1455                           
  1456                           ;main_RX.c: 64:   if (RCIF == 1){
  1457     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1458     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1459     0157  1E8C               	btfss	12,5	;volatile
  1460     0158  295A               	goto	u27_21
  1461     0159  295B               	goto	u27_20
  1462     015A                     u27_21:
  1463     015A  2971               	goto	i1l62
  1464     015B                     u27_20:
  1465     015B                     i1l974:
  1466                           
  1467                           ;main_RX.c: 65:     string[i]=RCREG;
  1468     015B  0879               	movf	_i,w
  1469     015C  3E21               	addlw	(low (_string| 0))& (0+255)
  1470     015D  0084               	movwf	4
  1471     015E  081A               	movf	26,w	;volatile
  1472     015F  1383               	bcf	3,7	;select IRP bank0
  1473     0160  0080               	movwf	0
  1474     0161                     i1l976:
  1475                           
  1476                           ;main_RX.c: 66:     i++;
  1477     0161  3001               	movlw	1
  1478     0162  00FF               	movwf	btemp+1
  1479     0163  087F               	movf	btemp+1,w
  1480     0164  07F9               	addwf	_i,f
  1481     0165                     i1l978:
  1482                           
  1483                           ;main_RX.c: 67:     if(string[i-1]=='\0'){
  1484     0165  0879               	movf	_i,w
  1485     0166  3E20               	addlw	(low ((_string| 0+255)))& (0+255)
  1486     0167  0084               	movwf	4
  1487     0168  0800               	movf	0,w
  1488     0169  1D03               	btfss	3,2
  1489     016A  296C               	goto	u28_21
  1490     016B  296D               	goto	u28_20
  1491     016C                     u28_21:
  1492     016C  2970               	goto	i1l984
  1493     016D                     u28_20:
  1494     016D                     i1l980:
  1495                           
  1496                           ;main_RX.c: 68:         LCD_FLAG=1;
  1497     016D  01A0               	clrf	_LCD_FLAG
  1498     016E  0AA0               	incf	_LCD_FLAG,f
  1499     016F                     i1l982:
  1500                           
  1501                           ;main_RX.c: 69:         i=0;
  1502     016F  01F9               	clrf	_i
  1503     0170                     i1l984:
  1504                           
  1505                           ;main_RX.c: 71:     RCIF = 0;
  1506     0170  128C               	bcf	12,5	;volatile
  1507     0171                     i1l62:
  1508     0171  0873               	movf	??_ISR+3,w
  1509     0172  00FF               	movwf	btemp+1
  1510     0173  0872               	movf	??_ISR+2,w
  1511     0174  008A               	movwf	10
  1512     0175  0871               	movf	??_ISR+1,w
  1513     0176  0084               	movwf	4
  1514     0177  0E70               	swapf	??_ISR,w
  1515     0178  0083               	movwf	3
  1516     0179  0EFE               	swapf	btemp,f
  1517     017A  0E7E               	swapf	btemp,w
  1518     017B  0009               	retfie
  1519     017C                     __end_of_ISR:
  1520     007E                     btemp	set	126	;btemp
  1521     007E                     wtemp0	set	126
  1522                           
  1523                           	psect	intentry
  1524     0004                     __pintentry:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
  1527                           
  1528     0004                     interrupt_function:
  1529     007E                     saved_w	set	btemp
  1530     0004  00FE               	movwf	btemp
  1531     0005  0E03               	swapf	3,w
  1532     0006  00F0               	movwf	??_ISR
  1533     0007  0804               	movf	4,w
  1534     0008  00F1               	movwf	??_ISR+1
  1535     0009  080A               	movf	10,w
  1536     000A  00F2               	movwf	??_ISR+2
  1537     000B  087F               	movf	btemp+1,w
  1538     000C  00F3               	movwf	??_ISR+3
  1539     000D  120A  118A  2955   	ljmp	_ISR
  1540                           
  1541                           	psect	config
  1542                           
  1543                           ;Config register CONFIG @ 0x2007
  1544                           ;	Oscillator Selection bits
  1545                           ;	FOSC = XT, XT oscillator
  1546                           ;	Watchdog Timer Enable bit
  1547                           ;	WDTE = OFF, WDT disabled
  1548                           ;	Power-up Timer Enable bit
  1549                           ;	PWRTE = ON, PWRT enabled
  1550                           ;	Brown-out Reset Enable bit
  1551                           ;	BOREN = ON, BOR enabled
  1552                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1553                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1554                           ;	Data EEPROM Memory Code Protection bit
  1555                           ;	CPD = OFF, Data EEPROM code protection off
  1556                           ;	Flash Program Memory Write Enable bits
  1557                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1558                           ;	In-Circuit Debugger Mode bit
  1559                           ;	DEBUG = 0x1, unprogrammed default
  1560                           ;	Flash Program Memory Code Protection bit
  1561                           ;	CP = OFF, Code protection off
  1562     2007                     	org	8199
  1563     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      4      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 20
		 -> string(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Set_Cursor
    _main->_LCD_Write_String

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1260
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     4     4      0     344
                                              0 BANK0      4     4      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       4     4      0     178
                                              5 COMMON     4     4      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       6     5      1     608
                                              7 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              7 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     110
                                              5 COMMON     2     2      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Init
     _LCD_CMD
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA
   _UART_RX_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun May 26 23:23:22 2024

                       _i 0079                        l55 01EC                        l90 01BB  
                      l91 01C1                        l93 01C2                        l85 01AA  
                      l86 01AD                        l87 01B3                        l88 01B4  
                      l96 01D8                        l89 01BA                        l99 01F9  
                      fsr 0004                       l110 0154                       l104 00CF  
                     l107 0082                       l116 01A0                       l900 002C  
                     l830 01A6                       l910 004D                       l902 0034  
                     l832 01B1                       l840 01C7                       l920 006A  
                     l912 0052                       l904 0039                       l834 01B8  
                     l842 01CD                       l922 0070                       l914 0058  
                     l906 003F                       l930 0086                       l850 011D  
                     l836 01BF                       l828 01A2                       l844 01D0  
                     l924 0076                       l916 005E                       l908 0047  
                     l932 008B                       l940 00A9                       l860 0139  
                     l852 0120                       l846 01D5                       l838 01C4  
                     l926 007C                       l918 0064                       l942 00B1  
                     l934 0098                       l870 014F                       l862 013E  
                     l854 012E                       l928 01ED                       l944 00BE  
                     l936 009B                       l864 0144                       l856 0131  
                     l848 0117                       l880 01E2                       l872 01D9  
                     l946 00C1                       l938 00A1                       l866 0147  
                     l858 0136                       l890 01E9                       l882 01E5  
                     l874 01DC                       l892 0021                       l948 00C7  
                     l868 014C                       l884 01E6                       l876 01DE  
                     l894 0024                       l990 017F                       l886 01E7  
                     l878 01DF                       l896 0025                       l992 0182  
                     l888 01E8                       l898 0026                       l994 018D  
                     _GIE 005F                       l996 0195                       l998 00D0  
                     _RB0 0030                       _RB1 0031                       _RC0 0038  
                     _RB2 0032                       _RB3 0033                       _RB4 0034  
                     _RB5 0035                       u200 008B                       u201 008A  
                     u220 00B1                       u300 00ED                       u221 00B0  
                     u301 00EC                       u150 01A6                       u310 0101  
                     u151 01A5                       u215 0091                       u311 0100  
                     u160 01B1                       u161 01B0                       u170 01B8  
                     u171 01B7                       u235 00B7                       u180 01BF  
                     u181 01BE                       u407 01D2                       u327 0133  
                     u337 013B                       u290 01A0                       u347 0149  
                     u195 0123                       u291 019F                       _ISR 0155  
                     u357 0151                       u367 0030                       u377 0036  
                     u387 0043                       u397 004F                       fsr0 0004  
                     indf 0000           __end_of_LCD_CMD 01D9                      ?_ISR 0070  
          _LCD_Set_Cursor 0083                      l1000 00E7                      l1010 010F  
                    l1002 00ED                      l1004 00FA                      l1006 0101  
                    l1008 0109       LCD_Write_String@str 0036                      _BRGH 04C2  
                    _CREN 00C4                      _PEIE 005E                      _RCIE 0465  
                    _RCIF 0065                      i1l62 0171                      _SPEN 00C7  
                    _SYNC 04C4         ?_LCD_Write_String 0070                      _main 00D0  
                    btemp 007E                      start 0010        ??_LCD_Write_String 0035  
                   ??_ISR 0070          __end_of_LCD_DATA 01C3          __end_of_LCD_Init 0083  
                   ?_main 0070                     i1l980 016D                     i1l972 0155  
                   i1l982 016F                     i1l974 015B                     i1l984 0170  
                   i1l976 0161                     i1l978 0165                     _RCREG 001A  
                   _SPBRG 0099                     u27_20 015B                     u27_21 015A  
                   u28_20 016D                     u28_21 016C                     _TRISB 0086  
  __end_of_LCD_Set_Cursor 00D0                     pclath 000A                     status 0003  
                   wtemp0 007E            _LCD_Write_Char 0116           __initialization 0013  
            __end_of_main 0116                    ??_main 0079         __end_of_LCD_Clear 01FA  
               ??_LCD_CMD 0075           ?_LCD_Set_Cursor 0077                    _TRISB4 0434  
                  _TRISB5 0435                    _TRISC6 043E                    _TRISC7 043F  
  __end_of_LCD_Write_Char 0155                    _string 0021                    saved_w 007E  
         LCD_Set_Cursor@c 0077           LCD_Set_Cursor@r 0035                 ?_LCD_DATA 0070  
 __end_of__initialization 001D                 ?_LCD_Init 0070           ?_LCD_Write_Char 0070  
          __pcstackCOMMON 0070                __pbssBANK0 0020                ??_LCD_DATA 0074  
              ??_LCD_Init 0077                __pmaintext 00D0                __pintentry 0004  
                 _LCD_CMD 01C3             ?_UART_RX_Init 0070          ??_LCD_Set_Cursor 0078  
                 __ptext1 01D9                   __ptext2 017C                   __ptext3 0116  
                 __ptext4 0083                   __ptext5 0021                   __ptext6 01ED  
                 __ptext7 01C3                   __ptext8 01A1                   __ptext9 0155  
               _LCD_Clear 01ED            ??_UART_RX_Init 0074                   clrloop0 01FB  
    end_of_initialization 001D                LCD_CMD@CMD 0076                ?_LCD_Clear 0070  
       LCD_Write_String@i 0037          ??_LCD_Write_Char 0075          _LCD_Write_String 017C  
     start_initialization 0013               __end_of_ISR 017C      __end_of_UART_RX_Init 01ED  
                ?_LCD_CMD 0070               __pbssCOMMON 0079                 ___latbits 0002  
           __pcstackBANK0 0035               ??_LCD_Clear 0077                  _LCD_DATA 01A1  
                _LCD_FLAG 0020         interrupt_function 0004                  _LCD_Init 0021  
               clear_ram0 01FA  __end_of_LCD_Write_String 01A1       LCD_Write_Char@High4 0077  
            _UART_RX_Init 01D9       LCD_Set_Cursor@High4 0037        LCD_Write_Char@Data 0078  
      LCD_Write_Char@Low4 0076                  intlevel1 0000        LCD_Set_Cursor@Low4 0036  
      LCD_Set_Cursor@Temp 0038              LCD_DATA@Data 0074  
