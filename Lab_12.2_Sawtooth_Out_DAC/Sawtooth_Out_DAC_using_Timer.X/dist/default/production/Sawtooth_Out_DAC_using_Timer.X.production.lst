

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 21 17:43:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000E                     _TMR1	set	14
   169     0006                     _PORTB	set	6
   170     0010                     _T1CON	set	16
   171     005F                     _GIE	set	95
   172     005E                     _PEIE	set	94
   173     0060                     _TMR1IF	set	96
   174     0083                     _T1OSCEN	set	131
   175     0081                     _TMR1CS	set	129
   176     0080                     _TMR1ON	set	128
   177     0086                     _TRISB	set	134
   178     0460                     _TMR1IE	set	1120
   179                           
   180                           	psect	cinit
   181     0011                     start_initialization:	
   182                           ; #config settings
   183                           
   184     0011                     __initialization:
   185                           
   186                           ; Clear objects allocated to COMMON
   187     0011  01F3               	clrf	__pbssCOMMON& (0+127)
   188     0012  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   189     0013                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     0013                     __end_of__initialization:
   193     0013  0183               	clrf	3
   194     0014  120A  118A  2848   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197     0073                     __pbssCOMMON:
   198     0073                     _data:
   199     0073                     	ds	1
   200     0074                     _TMR1_Counter:
   201     0074                     	ds	1
   202                           
   203                           	psect	cstackCOMMON
   204     0070                     __pcstackCOMMON:
   205     0070                     ?_Timer1_Init:
   206     0070                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_ISR:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_ISR:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0070                     	ds	3
   218     0073                     ??_Timer1_Init:
   219     0073                     ??_main:	
   220                           ; 1 bytes @ 0x3
   221                           
   222                           
   223                           	psect	maintext
   224     0048                     __pmaintext:	
   225                           ; 1 bytes @ 0x3
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 40 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : B00/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels required when called: 2
   251 ;; This function calls:
   252 ;;		_Timer1_Init
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258     0048                     _main:	
   259                           ;psect for function _main
   260                           
   261     0048                     l603:	
   262                           ;incstack = 0
   263                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   264                           
   265                           
   266                           ;main.c: 41:     TRISB = 0x00;
   267     0048  1683               	bsf	3,5	;RP0=1, select bank1
   268     0049  1303               	bcf	3,6	;RP1=0, select bank1
   269     004A  0186               	clrf	6	;volatile
   270                           
   271                           ;main.c: 42:     PORTB = 0x00;
   272     004B  1283               	bcf	3,5	;RP0=0, select bank0
   273     004C  1303               	bcf	3,6	;RP1=0, select bank0
   274     004D  0186               	clrf	6	;volatile
   275     004E                     l605:
   276                           
   277                           ;main.c: 43:     Timer1_Init();
   278     004E  120A  118A  2031  120A  118A  	fcall	_Timer1_Init
   279     0053                     l34:	
   280                           ;main.c: 44:     while(1){
   281                           
   282     0053                     l35:	
   283                           ;main.c: 46:     }
   284                           
   285     0053  2853               	goto	l34
   286     0054  120A  118A  280E   	ljmp	start
   287     0057                     __end_of_main:
   288                           
   289                           	psect	text1
   290     0031                     __ptext1:	
   291 ;; *************** function _Timer1_Init *****************
   292 ;; Defined at:
   293 ;;		line 27 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, btemp+1
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used: 1
   313 ;; Hardware stack levels required when called: 1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321     0031                     _Timer1_Init:	
   322                           ;psect for function _Timer1_Init
   323                           
   324     0031                     l587:	
   325                           ;incstack = 0
   326                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0+btemp+1]
   327                           
   328                           
   329                           ;main.c: 28: TMR1ON=0;
   330     0031  1283               	bcf	3,5	;RP0=0, select bank0
   331     0032  1303               	bcf	3,6	;RP1=0, select bank0
   332     0033  1010               	bcf	16,0	;volatile
   333                           
   334                           ;main.c: 29: TMR1CS=0;
   335     0034  1090               	bcf	16,1	;volatile
   336                           
   337                           ;main.c: 30: T1OSCEN=1;
   338     0035  1590               	bsf	16,3	;volatile
   339     0036                     l589:
   340                           
   341                           ;main.c: 31: T1CON&=~0x30;
   342     0036  30CF               	movlw	207
   343     0037  00FF               	movwf	btemp+1
   344     0038  087F               	movf	btemp+1,w
   345     0039  0590               	andwf	16,f	;volatile
   346     003A                     l591:
   347                           
   348                           ;main.c: 32: TMR1ON=1;
   349     003A  1410               	bsf	16,0	;volatile
   350     003B                     l593:
   351                           
   352                           ;main.c: 33: TMR1IE=1;
   353     003B  1683               	bsf	3,5	;RP0=1, select bank1
   354     003C  1303               	bcf	3,6	;RP1=0, select bank1
   355     003D  140C               	bsf	12,0	;volatile
   356     003E                     l595:
   357                           
   358                           ;main.c: 34: TMR1IF = 0;
   359     003E  1283               	bcf	3,5	;RP0=0, select bank0
   360     003F  1303               	bcf	3,6	;RP1=0, select bank0
   361     0040  100C               	bcf	12,0	;volatile
   362     0041                     l597:
   363                           
   364                           ;main.c: 35: PEIE = 1;
   365     0041  170B               	bsf	11,6	;volatile
   366     0042                     l599:
   367                           
   368                           ;main.c: 36: GIE = 1;
   369     0042  178B               	bsf	11,7	;volatile
   370     0043                     l601:
   371                           
   372                           ;main.c: 37: TMR1=65177;
   373     0043  30FE               	movlw	254
   374     0044  008F               	movwf	15	;volatile
   375     0045  3099               	movlw	153
   376     0046  008E               	movwf	14	;volatile
   377     0047                     l29:
   378     0047  0008               	return
   379     0048                     __end_of_Timer1_Init:
   380                           
   381                           	psect	text2
   382     0017                     __ptext2:	
   383 ;; *************** function _ISR *****************
   384 ;; Defined at:
   385 ;;		line 59 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, btemp+1
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          3       0       0       0       0
   402 ;;      Totals:         3       0       0       0       0
   403 ;;Total ram usage:        3 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		Interrupt level 1
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412     0017                     _ISR:	
   413                           ;psect for function _ISR
   414                           
   415     0017                     i1l607:
   416                           
   417                           ;main.c: 60:     if(TMR1IF){
   418     0017  1283               	bcf	3,5	;RP0=0, select bank0
   419     0018  1303               	bcf	3,6	;RP1=0, select bank0
   420     0019  1C0C               	btfss	12,0	;volatile
   421     001A  281C               	goto	u1_21
   422     001B  281D               	goto	u1_20
   423     001C                     u1_21:
   424     001C  2828               	goto	i1l43
   425     001D                     u1_20:
   426     001D                     i1l609:
   427                           
   428                           ;main.c: 61:         TMR1IF=0;
   429     001D  100C               	bcf	12,0	;volatile
   430     001E                     i1l611:
   431                           
   432                           ;main.c: 62:         PORTB=data++;
   433     001E  0873               	movf	_data,w
   434     001F  0086               	movwf	6	;volatile
   435     0020                     i1l613:
   436     0020  3001               	movlw	1
   437     0021  00FF               	movwf	btemp+1
   438     0022  087F               	movf	btemp+1,w
   439     0023  07F3               	addwf	_data,f
   440     0024                     i1l615:
   441                           
   442                           ;main.c: 63:         TMR1=65177;
   443     0024  30FE               	movlw	254
   444     0025  008F               	movwf	15	;volatile
   445     0026  3099               	movlw	153
   446     0027  008E               	movwf	14	;volatile
   447     0028                     i1l43:
   448     0028  0872               	movf	??_ISR+2,w
   449     0029  00FF               	movwf	btemp+1
   450     002A  0871               	movf	??_ISR+1,w
   451     002B  008A               	movwf	10
   452     002C  0E70               	swapf	??_ISR,w
   453     002D  0083               	movwf	3
   454     002E  0EFE               	swapf	btemp,f
   455     002F  0E7E               	swapf	btemp,w
   456     0030  0009               	retfie
   457     0031                     __end_of_ISR:
   458     007E                     btemp	set	126	;btemp
   459     007E                     wtemp0	set	126
   460                           
   461                           	psect	intentry
   462     0004                     __pintentry:	
   463                           ;incstack = 0
   464                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   465                           
   466     0004                     interrupt_function:
   467     007E                     saved_w	set	btemp
   468     0004  00FE               	movwf	btemp
   469     0005  0E03               	swapf	3,w
   470     0006  00F0               	movwf	??_ISR
   471     0007  080A               	movf	10,w
   472     0008  00F1               	movwf	??_ISR+1
   473     0009  087F               	movf	btemp+1,w
   474     000A  00F2               	movwf	??_ISR+2
   475     000B  120A  118A  2817   	ljmp	_ISR
   476                           
   477                           	psect	config
   478                           
   479                           ;Config register CONFIG @ 0x2007
   480                           ;	Oscillator Selection bits
   481                           ;	FOSC = XT, XT oscillator
   482                           ;	Watchdog Timer Enable bit
   483                           ;	WDTE = OFF, WDT disabled
   484                           ;	Power-up Timer Enable bit
   485                           ;	PWRTE = ON, PWRT enabled
   486                           ;	Brown-out Reset Enable bit
   487                           ;	BOREN = ON, BOR enabled
   488                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   489                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   490                           ;	Data EEPROM Memory Code Protection bit
   491                           ;	CPD = OFF, Data EEPROM code protection off
   492                           ;	Flash Program Memory Write Enable bits
   493                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   494                           ;	In-Circuit Debugger Mode bit
   495                           ;	DEBUG = 0x1, unprogrammed default
   496                           ;	Flash Program Memory Code Protection bit
   497                           ;	CP = OFF, Code protection off
   498     2007                     	org	8199
   499     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 21 17:43:33 2024

                     l34 0053                       l35 0053                       l29 0047  
                    l601 0043                      l603 0048                      l605 004E  
                    l591 003A                      l593 003B                      l595 003E  
                    l587 0031                      l597 0041                      l589 0036  
                    l599 0042                      _GIE 005F                      _ISR 0017  
                   ?_ISR 0070                     _PEIE 005E                     i1l43 0028  
                   _TMR1 000E                     u1_20 001D                     u1_21 001C  
                   _data 0073                     _main 0048                     btemp 007E  
                   start 000E                    ??_ISR 0070                    ?_main 0070  
                  _T1CON 0010                    i1l611 001E                    i1l613 0020  
                  i1l615 0024                    i1l607 0017                    i1l609 001D  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0057                   ??_main 0073                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
          ??_Timer1_Init 0073                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070      __end_of_Timer1_Init 0048               __pmaintext 0048  
             __pintentry 0004                  _T1OSCEN 0083              _Timer1_Init 0031  
                __ptext1 0031                  __ptext2 0017     end_of_initialization 0013  
    start_initialization 0011              __end_of_ISR 0031              __pbssCOMMON 0073  
              ___latbits 0002             ?_Timer1_Init 0070        interrupt_function 0004  
           _TMR1_Counter 0074                 intlevel1 0000  
