

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 25 15:01:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0000                     	;# 
   176     0001                     	;# 
   177     0002                     	;# 
   178     0003                     	;# 
   179     0004                     	;# 
   180     0005                     	;# 
   181     0006                     	;# 
   182     0007                     	;# 
   183     0008                     	;# 
   184     0009                     	;# 
   185     000A                     	;# 
   186     000B                     	;# 
   187     000C                     	;# 
   188     000D                     	;# 
   189     000E                     	;# 
   190     000E                     	;# 
   191     000F                     	;# 
   192     0010                     	;# 
   193     0011                     	;# 
   194     0012                     	;# 
   195     0013                     	;# 
   196     0014                     	;# 
   197     0015                     	;# 
   198     0015                     	;# 
   199     0016                     	;# 
   200     0017                     	;# 
   201     0018                     	;# 
   202     0019                     	;# 
   203     001A                     	;# 
   204     001B                     	;# 
   205     001B                     	;# 
   206     001C                     	;# 
   207     001D                     	;# 
   208     001E                     	;# 
   209     001F                     	;# 
   210     0081                     	;# 
   211     0085                     	;# 
   212     0086                     	;# 
   213     0087                     	;# 
   214     0088                     	;# 
   215     0089                     	;# 
   216     008C                     	;# 
   217     008D                     	;# 
   218     008E                     	;# 
   219     0091                     	;# 
   220     0092                     	;# 
   221     0093                     	;# 
   222     0094                     	;# 
   223     0098                     	;# 
   224     0099                     	;# 
   225     009C                     	;# 
   226     009D                     	;# 
   227     009E                     	;# 
   228     009F                     	;# 
   229     010C                     	;# 
   230     010D                     	;# 
   231     010E                     	;# 
   232     010F                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0033                     _RB3	set	51
   236     0032                     _RB2	set	50
   237     0031                     _RB1	set	49
   238     0030                     _RB0	set	48
   239     0034                     _RB4	set	52
   240     0035                     _RB5	set	53
   241     0086                     _TRISB	set	134
   242     0434                     _TRISB4	set	1076
   243     0435                     _TRISB5	set	1077
   244                           
   245                           	psect	strings
   246     0003                     __pstrings:
   247     0003                     stringtab:
   248     0003                     __stringtab:
   249     0003                     stringcode:	
   250                           ;	String table - string pointers are 1 byte each
   251                           
   252     0003                     stringdir:
   253     0003  3000               	movlw	high stringdir
   254     0004  008A               	movwf	10
   255     0005  0804               	movf	4,w
   256     0006  0A84               	incf	4,f
   257     0007  0782               	addwf	2,f
   258     0008                     __stringbase:
   259     0008  3400               	retlw	0
   260     0009                     __end_of__stringtab:
   261     0009                     STR_2:
   262     0009  3457               	retlw	87	;'W'
   263     000A  344F               	retlw	79	;'O'
   264     000B  3452               	retlw	82	;'R'
   265     000C  344C               	retlw	76	;'L'
   266     000D  3444               	retlw	68	;'D'
   267     000E  3400               	retlw	0
   268     000F  3400               	retlw	0
   269     0010                     STR_1:
   270     0010  3448               	retlw	72	;'H'
   271     0011  3445               	retlw	69	;'E'
   272     0012  344C               	retlw	76	;'L'
   273     0013  344C               	retlw	76	;'L'
   274     0014  344F               	retlw	79	;'O'
   275     0015  3400               	retlw	0
   276     0016  3400               	retlw	0
   277                           
   278                           	psect	cinit
   279     07FC                     start_initialization:	
   280                           ; #config settings
   281                           
   282     07FC                     __initialization:
   283     07FC                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286     07FC                     __end_of__initialization:
   287     07FC  0183               	clrf	3
   288     07FD  120A  118A  2F4C   	ljmp	_main	;jump to C main() function
   289                           
   290                           	psect	cstackCOMMON
   291     0070                     __pcstackCOMMON:
   292     0070                     ?_LCD_DATA:
   293     0070                     ??_LCD_DATA:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0070                     ?_LCD_Command:	
   297                           ; 1 bytes @ 0x0
   298                           
   299     0070                     ?_LCD_Init:	
   300                           ; 1 bytes @ 0x0
   301                           
   302     0070                     ?_LCD_Clear:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_LCD_Write_Char:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_LCD_Write_String:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_LCD_SL:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_LCD_SR:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     LCD_DATA@Data:	
   321                           ; 1 bytes @ 0x0
   322                           
   323                           
   324                           ; 1 bytes @ 0x0
   325     0070                     	ds	1
   326     0071                     ??_LCD_Command:
   327     0071                     ??_LCD_Write_Char:	
   328                           ; 1 bytes @ 0x1
   329                           
   330                           
   331                           ; 1 bytes @ 0x1
   332     0071                     	ds	1
   333     0072                     LCD_Command@CMD:
   334     0072                     LCD_Write_Char@Low4:	
   335                           ; 1 bytes @ 0x2
   336                           
   337                           
   338                           ; 1 bytes @ 0x2
   339     0072                     	ds	1
   340     0073                     ??_LCD_Init:
   341     0073                     ??_LCD_Clear:	
   342                           ; 1 bytes @ 0x3
   343                           
   344     0073                     ?_LCD_Set_Cursor:	
   345                           ; 1 bytes @ 0x3
   346                           
   347     0073                     ??_LCD_SL:	
   348                           ; 1 bytes @ 0x3
   349                           
   350     0073                     ??_LCD_SR:	
   351                           ; 1 bytes @ 0x3
   352                           
   353     0073                     LCD_Set_Cursor@c:	
   354                           ; 1 bytes @ 0x3
   355                           
   356     0073                     LCD_Write_Char@High4:	
   357                           ; 1 bytes @ 0x3
   358                           
   359                           
   360                           ; 1 bytes @ 0x3
   361     0073                     	ds	1
   362     0074                     ??_LCD_Set_Cursor:
   363     0074                     LCD_Write_Char@Data:	
   364                           ; 1 bytes @ 0x4
   365                           
   366                           
   367                           ; 1 bytes @ 0x4
   368     0074                     	ds	1
   369     0075                     ??_LCD_Write_String:
   370     0075                     LCD_Set_Cursor@r:	
   371                           ; 1 bytes @ 0x5
   372                           
   373     0075                     LCD_Write_String@i:	
   374                           ; 1 bytes @ 0x5
   375                           
   376                           
   377                           ; 2 bytes @ 0x5
   378     0075                     	ds	1
   379     0076                     LCD_Set_Cursor@Low4:
   380                           
   381                           ; 1 bytes @ 0x6
   382     0076                     	ds	1
   383     0077                     LCD_Set_Cursor@High4:
   384     0077                     LCD_Write_String@str:	
   385                           ; 1 bytes @ 0x7
   386                           
   387                           
   388                           ; 1 bytes @ 0x7
   389     0077                     	ds	1
   390     0078                     LCD_Set_Cursor@Temp:
   391                           
   392                           ; 1 bytes @ 0x8
   393     0078                     	ds	1
   394     0079                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x9
   397     0079                     	ds	3
   398                           
   399                           	psect	cstackBANK0
   400     0020                     __pcstackBANK0:
   401     0020                     main@i:
   402                           
   403                           ; 2 bytes @ 0x0
   404     0020                     	ds	2
   405     0022                     main@i_86:
   406                           
   407                           ; 2 bytes @ 0x2
   408     0022                     	ds	2
   409     0024                     main@i_88:
   410                           
   411                           ; 2 bytes @ 0x4
   412     0024                     	ds	2
   413                           
   414                           	psect	maintext
   415     074C                     __pmaintext:	
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 14 in file "main.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  i               2    4[BANK0 ] int 
   426 ;;  i               2    2[BANK0 ] int 
   427 ;;  i               2    0[BANK0 ] int 
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       6       0       0       0
   439 ;;      Temps:          3       0       0       0       0
   440 ;;      Totals:         3       6       0       0       0
   441 ;;Total ram usage:        9 bytes
   442 ;; Hardware stack levels required when called: 3
   443 ;; This function calls:
   444 ;;		_LCD_Clear
   445 ;;		_LCD_Init
   446 ;;		_LCD_SL
   447 ;;		_LCD_SR
   448 ;;		_LCD_Set_Cursor
   449 ;;		_LCD_Write_String
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455     074C                     _main:	
   456                           ;psect for function _main
   457                           
   458     074C                     l910:	
   459                           ;incstack = 0
   460                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   461                           
   462                           
   463                           ;main.c: 15:     LCD_Init();
   464     074C  120A  118A  26EA  120A  118A  	fcall	_LCD_Init
   465                           
   466                           ;main.c: 16:     LCD_Clear();
   467     0751  120A  118A  25E2  120A  118A  	fcall	_LCD_Clear
   468                           
   469                           ;main.c: 17:     LCD_Set_Cursor(1,1);
   470     0756  01F3               	clrf	LCD_Set_Cursor@c
   471     0757  0AF3               	incf	LCD_Set_Cursor@c,f
   472     0758  3001               	movlw	1
   473     0759  120A  118A  26A5  120A  118A  	fcall	_LCD_Set_Cursor
   474                           
   475                           ;main.c: 19:     LCD_Set_Cursor(1,6);
   476     075E  3006               	movlw	6
   477     075F  00F3               	movwf	LCD_Set_Cursor@c
   478     0760  3001               	movlw	1
   479     0761  120A  118A  26A5  120A  118A  	fcall	_LCD_Set_Cursor
   480     0766                     l912:
   481                           
   482                           ;main.c: 20:     LCD_Write_String("HELLO\0");
   483     0766  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   484     0767  120A  118A  2641  120A  118A  	fcall	_LCD_Write_String
   485     076C                     l914:
   486                           
   487                           ;main.c: 21:     LCD_Set_Cursor(2,6);
   488     076C  3006               	movlw	6
   489     076D  00F3               	movwf	LCD_Set_Cursor@c
   490     076E  3002               	movlw	2
   491     076F  120A  118A  26A5  120A  118A  	fcall	_LCD_Set_Cursor
   492                           
   493                           ;main.c: 22:     LCD_Write_String("WORLD\0");
   494     0774  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   495     0775  120A  118A  2641  120A  118A  	fcall	_LCD_Write_String
   496     077A                     l916:
   497                           
   498                           ;main.c: 23:        for(int i=0; i<6; i++)
   499     077A  1283               	bcf	3,5	;RP0=0, select bank0
   500     077B  1303               	bcf	3,6	;RP1=0, select bank0
   501     077C  01A0               	clrf	main@i
   502     077D  01A1               	clrf	main@i+1
   503     077E                     l922:
   504                           
   505                           ;main.c: 24:     {;main.c: 25:       _delay((unsigned long)((300)*(4000000/4000.0)));
   506     077E  3002               	movlw	2
   507     077F  00FB               	movwf	??_main+2
   508     0780  3086               	movlw	134
   509     0781  00FA               	movwf	??_main+1
   510     0782  3099               	movlw	153
   511     0783  00F9               	movwf	??_main
   512     0784                     u277:
   513     0784  0BF9               	decfsz	??_main,f
   514     0785  2F84               	goto	u277
   515     0786  0BFA               	decfsz	??_main+1,f
   516     0787  2F84               	goto	u277
   517     0788  0BFB               	decfsz	??_main+2,f
   518     0789  2F84               	goto	u277
   519     078A                     l924:
   520                           
   521                           ;main.c: 26:       LCD_SR();
   522     078A  120A  118A  25FC  120A  118A  	fcall	_LCD_SR
   523     078F                     l926:
   524                           
   525                           ;main.c: 27:     }
   526     078F  3001               	movlw	1
   527     0790  1283               	bcf	3,5	;RP0=0, select bank0
   528     0791  1303               	bcf	3,6	;RP1=0, select bank0
   529     0792  07A0               	addwf	main@i,f
   530     0793  1803               	skipnc
   531     0794  0AA1               	incf	main@i+1,f
   532     0795  3000               	movlw	0
   533     0796  07A1               	addwf	main@i+1,f
   534     0797                     l928:
   535     0797  0821               	movf	main@i+1,w
   536     0798  3A80               	xorlw	128
   537     0799  00FF               	movwf	btemp+1
   538     079A  3080               	movlw	128
   539     079B  027F               	subwf	btemp+1,w
   540     079C  1D03               	skipz
   541     079D  2FA0               	goto	u245
   542     079E  3006               	movlw	6
   543     079F  0220               	subwf	main@i,w
   544     07A0                     u245:
   545     07A0  1C03               	skipc
   546     07A1  2FA3               	goto	u241
   547     07A2  2FA4               	goto	u240
   548     07A3                     u241:
   549     07A3  2F7E               	goto	l922
   550     07A4                     u240:
   551     07A4                     l930:
   552                           
   553                           ;main.c: 30:     for(int i=0; i<11; i++){
   554     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   555     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   556     07A6  01A2               	clrf	main@i_86
   557     07A7  01A3               	clrf	main@i_86+1
   558     07A8                     l936:
   559                           
   560                           ;main.c: 31:       _delay((unsigned long)((300)*(4000000/4000.0)));
   561     07A8  3002               	movlw	2
   562     07A9  00FB               	movwf	??_main+2
   563     07AA  3086               	movlw	134
   564     07AB  00FA               	movwf	??_main+1
   565     07AC  3099               	movlw	153
   566     07AD  00F9               	movwf	??_main
   567     07AE                     u287:
   568     07AE  0BF9               	decfsz	??_main,f
   569     07AF  2FAE               	goto	u287
   570     07B0  0BFA               	decfsz	??_main+1,f
   571     07B1  2FAE               	goto	u287
   572     07B2  0BFB               	decfsz	??_main+2,f
   573     07B3  2FAE               	goto	u287
   574     07B4                     l938:
   575                           
   576                           ;main.c: 32:       LCD_SL();
   577     07B4  120A  118A  25EF  120A  118A  	fcall	_LCD_SL
   578     07B9                     l940:
   579                           
   580                           ;main.c: 33:     }
   581     07B9  3001               	movlw	1
   582     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   583     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   584     07BC  07A2               	addwf	main@i_86,f
   585     07BD  1803               	skipnc
   586     07BE  0AA3               	incf	main@i_86+1,f
   587     07BF  3000               	movlw	0
   588     07C0  07A3               	addwf	main@i_86+1,f
   589     07C1                     l942:
   590     07C1  0823               	movf	main@i_86+1,w
   591     07C2  3A80               	xorlw	128
   592     07C3  00FF               	movwf	btemp+1
   593     07C4  3080               	movlw	128
   594     07C5  027F               	subwf	btemp+1,w
   595     07C6  1D03               	skipz
   596     07C7  2FCA               	goto	u255
   597     07C8  300B               	movlw	11
   598     07C9  0222               	subwf	main@i_86,w
   599     07CA                     u255:
   600     07CA  1C03               	skipc
   601     07CB  2FCD               	goto	u251
   602     07CC  2FCE               	goto	u250
   603     07CD                     u251:
   604     07CD  2FA8               	goto	l936
   605     07CE                     u250:
   606     07CE                     l944:
   607                           
   608                           ;main.c: 34:        for(int i=0; i<11; i++){
   609     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   610     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   611     07D0  01A4               	clrf	main@i_88
   612     07D1  01A5               	clrf	main@i_88+1
   613     07D2                     l950:
   614                           
   615                           ;main.c: 35:       _delay((unsigned long)((300)*(4000000/4000.0)));
   616     07D2  3002               	movlw	2
   617     07D3  00FB               	movwf	??_main+2
   618     07D4  3086               	movlw	134
   619     07D5  00FA               	movwf	??_main+1
   620     07D6  3099               	movlw	153
   621     07D7  00F9               	movwf	??_main
   622     07D8                     u297:
   623     07D8  0BF9               	decfsz	??_main,f
   624     07D9  2FD8               	goto	u297
   625     07DA  0BFA               	decfsz	??_main+1,f
   626     07DB  2FD8               	goto	u297
   627     07DC  0BFB               	decfsz	??_main+2,f
   628     07DD  2FD8               	goto	u297
   629     07DE                     l952:
   630                           
   631                           ;main.c: 36:       LCD_SR();
   632     07DE  120A  118A  25FC  120A  118A  	fcall	_LCD_SR
   633     07E3                     l954:
   634                           
   635                           ;main.c: 37:     }
   636     07E3  3001               	movlw	1
   637     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   638     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   639     07E6  07A4               	addwf	main@i_88,f
   640     07E7  1803               	skipnc
   641     07E8  0AA5               	incf	main@i_88+1,f
   642     07E9  3000               	movlw	0
   643     07EA  07A5               	addwf	main@i_88+1,f
   644     07EB                     l956:
   645     07EB  0825               	movf	main@i_88+1,w
   646     07EC  3A80               	xorlw	128
   647     07ED  00FF               	movwf	btemp+1
   648     07EE  3080               	movlw	128
   649     07EF  027F               	subwf	btemp+1,w
   650     07F0  1D03               	skipz
   651     07F1  2FF4               	goto	u265
   652     07F2  300B               	movlw	11
   653     07F3  0224               	subwf	main@i_88,w
   654     07F4                     u265:
   655     07F4  1C03               	skipc
   656     07F5  2FF7               	goto	u261
   657     07F6  2FF8               	goto	u260
   658     07F7                     u261:
   659     07F7  2FD2               	goto	l950
   660     07F8                     u260:
   661     07F8  2FA4               	goto	l930
   662     07F9  120A  118A  2800   	ljmp	start
   663     07FC                     __end_of_main:
   664                           
   665                           	psect	text1
   666     0641                     __ptext1:	
   667 ;; *************** function _LCD_Write_String *****************
   668 ;; Defined at:
   669 ;;		line 137 in file "LCD.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  str             1    wreg     PTR unsigned char 
   672 ;;		 -> STR_2(7), STR_1(7), 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  str             1    7[COMMON] PTR unsigned char 
   675 ;;		 -> STR_2(7), STR_1(7), 
   676 ;;  i               2    5[COMMON] int 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         3       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0
   689 ;;      Totals:         3       0       0       0       0
   690 ;;Total ram usage:        3 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 2
   693 ;; This function calls:
   694 ;;		_LCD_Write_Char
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700     0641                     _LCD_Write_String:	
   701                           ;psect for function _LCD_Write_String
   702                           
   703                           
   704                           ;incstack = 0
   705                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   706                           ;LCD_Write_String@str stored from wreg
   707     0641  00F7               	movwf	LCD_Write_String@str
   708     0642                     l898:
   709                           
   710                           ;LCD.c: 137: void LCD_Write_String(char *str);LCD.c: 138: {;LCD.c: 139:     int i;;LCD.c
      +                          : 140:     for(i=0;str[i]!='\0';i++)
   711     0642  01F5               	clrf	LCD_Write_String@i
   712     0643  01F6               	clrf	LCD_Write_String@i+1
   713     0644  2E58               	goto	l904
   714     0645                     l900:
   715                           
   716                           ;LCD.c: 141:        LCD_Write_Char(str[i]);
   717     0645  0875               	movf	LCD_Write_String@i,w
   718     0646  0777               	addwf	LCD_Write_String@str,w
   719     0647  0084               	movwf	4
   720     0648  120A  118A  2003  120A  118A  	fcall	stringdir
   721     064D  120A  118A  2666  120A  118A  	fcall	_LCD_Write_Char
   722     0652                     l902:
   723     0652  3001               	movlw	1
   724     0653  07F5               	addwf	LCD_Write_String@i,f
   725     0654  1803               	skipnc
   726     0655  0AF6               	incf	LCD_Write_String@i+1,f
   727     0656  3000               	movlw	0
   728     0657  07F6               	addwf	LCD_Write_String@i+1,f
   729     0658                     l904:
   730     0658  0875               	movf	LCD_Write_String@i,w
   731     0659  0777               	addwf	LCD_Write_String@str,w
   732     065A  0084               	movwf	4
   733     065B  120A  118A  2003  120A  118A  	fcall	stringdir
   734     0660  3A00               	xorlw	0
   735     0661  1D03               	skipz
   736     0662  2E64               	goto	u231
   737     0663  2E65               	goto	u230
   738     0664                     u231:
   739     0664  2E45               	goto	l900
   740     0665                     u230:
   741     0665                     l56:
   742     0665  0008               	return
   743     0666                     __end_of_LCD_Write_String:
   744                           
   745                           	psect	text2
   746     0666                     __ptext2:	
   747 ;; *************** function _LCD_Write_Char *****************
   748 ;; Defined at:
   749 ;;		line 119 in file "LCD.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  Data            1    wreg     unsigned char 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  Data            1    4[COMMON] unsigned char 
   754 ;;  High4           1    3[COMMON] unsigned char 
   755 ;;  Low4            1    2[COMMON] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         3       0       0       0       0
   767 ;;      Temps:          1       0       0       0       0
   768 ;;      Totals:         4       0       0       0       0
   769 ;;Total ram usage:        4 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 1
   772 ;; This function calls:
   773 ;;		_LCD_DATA
   774 ;; This function is called by:
   775 ;;		_LCD_Write_String
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     0666                     _LCD_Write_Char:	
   780                           ;psect for function _LCD_Write_Char
   781                           
   782                           
   783                           ;incstack = 0
   784                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   785                           ;LCD_Write_Char@Data stored from wreg
   786     0666  00F4               	movwf	LCD_Write_Char@Data
   787     0667                     l816:
   788                           
   789                           ;LCD.c: 119: void LCD_Write_Char(char Data);LCD.c: 120: {;LCD.c: 121:    char Low4,High4
      +                          ;;LCD.c: 122:    Low4 = Data & 0x0F;
   790     0667  0874               	movf	LCD_Write_Char@Data,w
   791     0668  390F               	andlw	15
   792     0669  00F2               	movwf	LCD_Write_Char@Low4
   793                           
   794                           ;LCD.c: 123:    High4 = Data & 0xF0;
   795     066A  0874               	movf	LCD_Write_Char@Data,w
   796     066B  39F0               	andlw	240
   797     066C  00F3               	movwf	LCD_Write_Char@High4
   798     066D                     l818:
   799                           
   800                           ;LCD.c: 124:    RB5 = 1;
   801     066D  1283               	bcf	3,5	;RP0=0, select bank0
   802     066E  1303               	bcf	3,6	;RP1=0, select bank0
   803     066F  1686               	bsf	6,5	;volatile
   804     0670                     l820:
   805                           
   806                           ;LCD.c: 125:    LCD_DATA(High4>>4);
   807     0670  0873               	movf	LCD_Write_Char@High4,w
   808     0671  00F1               	movwf	??_LCD_Write_Char
   809     0672  3004               	movlw	4
   810     0673                     u185:
   811     0673  1003               	clrc
   812     0674  0CF1               	rrf	??_LCD_Write_Char,f
   813     0675  3EFF               	addlw	-1
   814     0676  1D03               	skipz
   815     0677  2E73               	goto	u185
   816     0678  0871               	movf	??_LCD_Write_Char,w
   817     0679  120A  118A  261F  120A  118A  	fcall	_LCD_DATA
   818     067E                     l822:
   819                           
   820                           ;LCD.c: 126:    RB4 = 1;
   821     067E  1283               	bcf	3,5	;RP0=0, select bank0
   822     067F  1303               	bcf	3,6	;RP1=0, select bank0
   823     0680  1606               	bsf	6,4	;volatile
   824     0681                     l824:
   825                           
   826                           ;LCD.c: 127:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   827     0681  30A6               	movlw	166
   828     0682  00F1               	movwf	??_LCD_Write_Char
   829     0683                     u307:
   830     0683  0BF1               	decfsz	??_LCD_Write_Char,f
   831     0684  2E83               	goto	u307
   832     0685  0000               	nop
   833     0686                     l826:
   834                           
   835                           ;LCD.c: 128:    RB4 = 0;
   836     0686  1283               	bcf	3,5	;RP0=0, select bank0
   837     0687  1303               	bcf	3,6	;RP1=0, select bank0
   838     0688  1206               	bcf	6,4	;volatile
   839     0689                     l828:
   840                           
   841                           ;LCD.c: 129:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   842     0689  30A6               	movlw	166
   843     068A  00F1               	movwf	??_LCD_Write_Char
   844     068B                     u317:
   845     068B  0BF1               	decfsz	??_LCD_Write_Char,f
   846     068C  2E8B               	goto	u317
   847     068D  0000               	nop
   848     068E                     l830:
   849                           
   850                           ;LCD.c: 130:    LCD_DATA(Low4);
   851     068E  0872               	movf	LCD_Write_Char@Low4,w
   852     068F  120A  118A  261F  120A  118A  	fcall	_LCD_DATA
   853     0694                     l832:
   854                           
   855                           ;LCD.c: 131:    RB4 = 1;
   856     0694  1283               	bcf	3,5	;RP0=0, select bank0
   857     0695  1303               	bcf	3,6	;RP1=0, select bank0
   858     0696  1606               	bsf	6,4	;volatile
   859     0697                     l834:
   860                           
   861                           ;LCD.c: 132:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   862     0697  30A6               	movlw	166
   863     0698  00F1               	movwf	??_LCD_Write_Char
   864     0699                     u327:
   865     0699  0BF1               	decfsz	??_LCD_Write_Char,f
   866     069A  2E99               	goto	u327
   867     069B  0000               	nop
   868     069C                     l836:
   869                           
   870                           ;LCD.c: 133:    RB4 = 0;
   871     069C  1283               	bcf	3,5	;RP0=0, select bank0
   872     069D  1303               	bcf	3,6	;RP1=0, select bank0
   873     069E  1206               	bcf	6,4	;volatile
   874     069F                     l838:
   875                           
   876                           ;LCD.c: 134:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   877     069F  30A6               	movlw	166
   878     06A0  00F1               	movwf	??_LCD_Write_Char
   879     06A1                     u337:
   880     06A1  0BF1               	decfsz	??_LCD_Write_Char,f
   881     06A2  2EA1               	goto	u337
   882     06A3  0000               	nop
   883     06A4                     l50:
   884     06A4  0008               	return
   885     06A5                     __end_of_LCD_Write_Char:
   886                           
   887                           	psect	text3
   888     06A5                     __ptext3:	
   889 ;; *************** function _LCD_Set_Cursor *****************
   890 ;; Defined at:
   891 ;;		line 99 in file "LCD.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  r               1    wreg     unsigned char 
   894 ;;  c               1    3[COMMON] unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  r               1    5[COMMON] unsigned char 
   897 ;;  Temp            1    8[COMMON] unsigned char 
   898 ;;  High4           1    7[COMMON] unsigned char 
   899 ;;  Low4            1    6[COMMON] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         1       0       0       0       0
   910 ;;      Locals:         4       0       0       0       0
   911 ;;      Temps:          1       0       0       0       0
   912 ;;      Totals:         6       0       0       0       0
   913 ;;Total ram usage:        6 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 2
   916 ;; This function calls:
   917 ;;		_LCD_Command
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923     06A5                     _LCD_Set_Cursor:	
   924                           ;psect for function _LCD_Set_Cursor
   925                           
   926                           
   927                           ;incstack = 0
   928                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   929                           ;LCD_Set_Cursor@r stored from wreg
   930     06A5  00F5               	movwf	LCD_Set_Cursor@r
   931     06A6                     l878:
   932                           
   933                           ;LCD.c: 100:     unsigned char Temp,Low4,High4;;LCD.c: 101:     if(r == 1)
   934     06A6  0375               	decf	LCD_Set_Cursor@r,w
   935     06A7  1D03               	btfss	3,2
   936     06A8  2EAA               	goto	u191
   937     06A9  2EAB               	goto	u190
   938     06AA                     u191:
   939     06AA  2EC7               	goto	l888
   940     06AB                     u190:
   941     06AB                     l880:
   942                           
   943                           ;LCD.c: 102:     {;LCD.c: 103:       Temp = 0x80 + c - 1;
   944     06AB  0873               	movf	LCD_Set_Cursor@c,w
   945     06AC  3E7F               	addlw	127
   946     06AD  00F8               	movwf	LCD_Set_Cursor@Temp
   947                           
   948                           ;LCD.c: 104:       High4 = Temp >> 4;
   949     06AE  0878               	movf	LCD_Set_Cursor@Temp,w
   950     06AF  00F4               	movwf	??_LCD_Set_Cursor
   951     06B0  3004               	movlw	4
   952     06B1                     u205:
   953     06B1  1003               	clrc
   954     06B2  0CF4               	rrf	??_LCD_Set_Cursor,f
   955     06B3  3EFF               	addlw	-1
   956     06B4  1D03               	skipz
   957     06B5  2EB1               	goto	u205
   958     06B6  0874               	movf	??_LCD_Set_Cursor,w
   959     06B7  00F7               	movwf	LCD_Set_Cursor@High4
   960     06B8                     l882:
   961                           
   962                           ;LCD.c: 105:       Low4 = Temp & 0x0F;
   963     06B8  0878               	movf	LCD_Set_Cursor@Temp,w
   964     06B9  390F               	andlw	15
   965     06BA  00F6               	movwf	LCD_Set_Cursor@Low4
   966     06BB                     l884:
   967                           
   968                           ;LCD.c: 106:       LCD_Command(High4);
   969     06BB  0877               	movf	LCD_Set_Cursor@High4,w
   970     06BC  120A  118A  2609  120A  118A  	fcall	_LCD_Command
   971     06C1                     l886:
   972                           
   973                           ;LCD.c: 107:       LCD_Command(Low4);
   974     06C1  0876               	movf	LCD_Set_Cursor@Low4,w
   975     06C2  120A  118A  2609  120A  118A  	fcall	_LCD_Command
   976     06C7                     l888:
   977                           
   978                           ;LCD.c: 109:     if(r == 2)
   979     06C7  3002               	movlw	2
   980     06C8  0675               	xorwf	LCD_Set_Cursor@r,w
   981     06C9  1D03               	btfss	3,2
   982     06CA  2ECC               	goto	u211
   983     06CB  2ECD               	goto	u210
   984     06CC                     u211:
   985     06CC  2EE9               	goto	l47
   986     06CD                     u210:
   987     06CD                     l890:
   988                           
   989                           ;LCD.c: 110:     {;LCD.c: 111:       Temp = 0xC0 + c - 1;
   990     06CD  0873               	movf	LCD_Set_Cursor@c,w
   991     06CE  3EBF               	addlw	191
   992     06CF  00F8               	movwf	LCD_Set_Cursor@Temp
   993                           
   994                           ;LCD.c: 112:       High4 = Temp >> 4;
   995     06D0  0878               	movf	LCD_Set_Cursor@Temp,w
   996     06D1  00F4               	movwf	??_LCD_Set_Cursor
   997     06D2  3004               	movlw	4
   998     06D3                     u225:
   999     06D3  1003               	clrc
  1000     06D4  0CF4               	rrf	??_LCD_Set_Cursor,f
  1001     06D5  3EFF               	addlw	-1
  1002     06D6  1D03               	skipz
  1003     06D7  2ED3               	goto	u225
  1004     06D8  0874               	movf	??_LCD_Set_Cursor,w
  1005     06D9  00F7               	movwf	LCD_Set_Cursor@High4
  1006     06DA                     l892:
  1007                           
  1008                           ;LCD.c: 113:       Low4 = Temp & 0x0F;
  1009     06DA  0878               	movf	LCD_Set_Cursor@Temp,w
  1010     06DB  390F               	andlw	15
  1011     06DC  00F6               	movwf	LCD_Set_Cursor@Low4
  1012     06DD                     l894:
  1013                           
  1014                           ;LCD.c: 114:       LCD_Command(High4);
  1015     06DD  0877               	movf	LCD_Set_Cursor@High4,w
  1016     06DE  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1017     06E3                     l896:
  1018                           
  1019                           ;LCD.c: 115:       LCD_Command(Low4);
  1020     06E3  0876               	movf	LCD_Set_Cursor@Low4,w
  1021     06E4  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1022     06E9                     l47:
  1023     06E9  0008               	return
  1024     06EA                     __end_of_LCD_Set_Cursor:
  1025                           
  1026                           	psect	text4
  1027     05FC                     __ptext4:	
  1028 ;; *************** function _LCD_SR *****************
  1029 ;; Defined at:
  1030 ;;		line 149 in file "LCD.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0, pclath, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         0       0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0
  1047 ;;      Totals:         0       0       0       0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 2
  1051 ;; This function calls:
  1052 ;;		_LCD_Command
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058     05FC                     _LCD_SR:	
  1059                           ;psect for function _LCD_SR
  1060                           
  1061     05FC                     l908:	
  1062                           ;incstack = 0
  1063                           ; Regs used in _LCD_SR: [wreg+status,2+status,0+pclath+cstack]
  1064                           
  1065                           
  1066                           ;LCD.c: 150:     LCD_Command(0x01);
  1067     05FC  3001               	movlw	1
  1068     05FD  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1069                           
  1070                           ;LCD.c: 151:     LCD_Command(0x0C);
  1071     0602  300C               	movlw	12
  1072     0603  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1073     0608                     l62:
  1074     0608  0008               	return
  1075     0609                     __end_of_LCD_SR:
  1076                           
  1077                           	psect	text5
  1078     05EF                     __ptext5:	
  1079 ;; *************** function _LCD_SL *****************
  1080 ;; Defined at:
  1081 ;;		line 144 in file "LCD.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 2
  1102 ;; This function calls:
  1103 ;;		_LCD_Command
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109     05EF                     _LCD_SL:	
  1110                           ;psect for function _LCD_SL
  1111                           
  1112     05EF                     l906:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _LCD_SL: [wreg+status,2+status,0+pclath+cstack]
  1115                           
  1116                           
  1117                           ;LCD.c: 145:     LCD_Command(0x01);
  1118     05EF  3001               	movlw	1
  1119     05F0  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1120                           
  1121                           ;LCD.c: 146:     LCD_Command(0x08);
  1122     05F5  3008               	movlw	8
  1123     05F6  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1124     05FB                     l59:
  1125     05FB  0008               	return
  1126     05FC                     __end_of_LCD_SL:
  1127                           
  1128                           	psect	text6
  1129     06EA                     __ptext6:	
  1130 ;; *************** function _LCD_Init *****************
  1131 ;; Defined at:
  1132 ;;		line 44 in file "LCD.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          2       0       0       0       0
  1149 ;;      Totals:         2       0       0       0       0
  1150 ;;Total ram usage:        2 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 2
  1153 ;; This function calls:
  1154 ;;		_LCD_Command
  1155 ;;		_LCD_DATA
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161     06EA                     _LCD_Init:	
  1162                           ;psect for function _LCD_Init
  1163                           
  1164     06EA                     l840:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1167                           
  1168                           
  1169                           ;LCD.c: 73:   TRISB = 0x00;
  1170     06EA  1683               	bsf	3,5	;RP0=1, select bank1
  1171     06EB  1303               	bcf	3,6	;RP1=0, select bank1
  1172     06EC  0186               	clrf	6	;volatile
  1173     06ED                     l842:
  1174                           
  1175                           ;LCD.c: 74:   TRISB5 = 0;
  1176     06ED  1286               	bcf	6,5	;volatile
  1177     06EE                     l844:
  1178                           
  1179                           ;LCD.c: 75:   TRISB4 = 0;
  1180     06EE  1206               	bcf	6,4	;volatile
  1181     06EF                     l846:
  1182                           
  1183                           ;LCD.c: 77:   LCD_DATA(0x00);
  1184     06EF  3000               	movlw	0
  1185     06F0  120A  118A  261F  120A  118A  	fcall	_LCD_DATA
  1186     06F5                     l848:
  1187                           
  1188                           ;LCD.c: 78:   _delay((unsigned long)((30)*(4000000/4000.0)));
  1189     06F5  3027               	movlw	39
  1190     06F6  00F4               	movwf	??_LCD_Init+1
  1191     06F7  30F5               	movlw	245
  1192     06F8  00F3               	movwf	??_LCD_Init
  1193     06F9                     u347:
  1194     06F9  0BF3               	decfsz	??_LCD_Init,f
  1195     06FA  2EF9               	goto	u347
  1196     06FB  0BF4               	decfsz	??_LCD_Init+1,f
  1197     06FC  2EF9               	goto	u347
  1198     06FD                     l850:
  1199                           
  1200                           ;LCD.c: 79:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  1201     06FD  30A6               	movlw	166
  1202     06FE  00F3               	movwf	??_LCD_Init
  1203     06FF                     u357:
  1204     06FF  0BF3               	decfsz	??_LCD_Init,f
  1205     0700  2EFF               	goto	u357
  1206     0701  0000               	nop
  1207     0702                     l852:
  1208                           
  1209                           ;LCD.c: 80:   LCD_Command(0x03);
  1210     0702  3003               	movlw	3
  1211     0703  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1212     0708                     l854:
  1213                           
  1214                           ;LCD.c: 81:   _delay((unsigned long)((5)*(4000000/4000.0)));
  1215     0708  3007               	movlw	7
  1216     0709  00F4               	movwf	??_LCD_Init+1
  1217     070A  307D               	movlw	125
  1218     070B  00F3               	movwf	??_LCD_Init
  1219     070C                     u367:
  1220     070C  0BF3               	decfsz	??_LCD_Init,f
  1221     070D  2F0C               	goto	u367
  1222     070E  0BF4               	decfsz	??_LCD_Init+1,f
  1223     070F  2F0C               	goto	u367
  1224     0710                     l856:
  1225                           
  1226                           ;LCD.c: 82:   LCD_Command(0x03);
  1227     0710  3003               	movlw	3
  1228     0711  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1229     0716                     l858:
  1230                           
  1231                           ;LCD.c: 83:   _delay((unsigned long)((150)*(4000000/4000000.0)));
  1232     0716  3031               	movlw	49
  1233     0717  00F3               	movwf	??_LCD_Init
  1234     0718                     u377:
  1235     0718  0BF3               	decfsz	??_LCD_Init,f
  1236     0719  2F18               	goto	u377
  1237     071A  2F1B               	nop2
  1238     071B                     l860:
  1239                           
  1240                           ;LCD.c: 84:   LCD_Command(0x03);
  1241     071B  3003               	movlw	3
  1242     071C  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1243     0721                     l862:
  1244                           
  1245                           ;LCD.c: 85:   LCD_Command(0x02);
  1246     0721  3002               	movlw	2
  1247     0722  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1248     0727                     l864:
  1249                           
  1250                           ;LCD.c: 86:   LCD_Command(0x02);
  1251     0727  3002               	movlw	2
  1252     0728  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1253     072D                     l866:
  1254                           
  1255                           ;LCD.c: 87:   LCD_Command(0x08);
  1256     072D  3008               	movlw	8
  1257     072E  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1258     0733                     l868:
  1259                           
  1260                           ;LCD.c: 88:   LCD_Command(0x00);
  1261     0733  3000               	movlw	0
  1262     0734  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1263     0739                     l870:
  1264                           
  1265                           ;LCD.c: 89:   LCD_Command(0x0C);
  1266     0739  300C               	movlw	12
  1267     073A  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1268     073F                     l872:
  1269                           
  1270                           ;LCD.c: 90:   LCD_Command(0x00);
  1271     073F  3000               	movlw	0
  1272     0740  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1273     0745                     l874:
  1274                           
  1275                           ;LCD.c: 91:   LCD_Command(0x06);
  1276     0745  3006               	movlw	6
  1277     0746  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1278     074B                     l39:
  1279     074B  0008               	return
  1280     074C                     __end_of_LCD_Init:
  1281                           
  1282                           	psect	text7
  1283     05E2                     __ptext7:	
  1284 ;; *************** function _LCD_Clear *****************
  1285 ;; Defined at:
  1286 ;;		line 94 in file "LCD.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 2
  1307 ;; This function calls:
  1308 ;;		_LCD_Command
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     05E2                     _LCD_Clear:	
  1315                           ;psect for function _LCD_Clear
  1316                           
  1317     05E2                     l876:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1320                           
  1321                           
  1322                           ;LCD.c: 95:     LCD_Command(0);
  1323     05E2  3000               	movlw	0
  1324     05E3  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1325                           
  1326                           ;LCD.c: 96:     LCD_Command(1);
  1327     05E8  3001               	movlw	1
  1328     05E9  120A  118A  2609  120A  118A  	fcall	_LCD_Command
  1329     05EE                     l42:
  1330     05EE  0008               	return
  1331     05EF                     __end_of_LCD_Clear:
  1332                           
  1333                           	psect	text8
  1334     0609                     __ptext8:	
  1335 ;; *************** function _LCD_Command *****************
  1336 ;; Defined at:
  1337 ;;		line 13 in file "LCD.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  CMD             1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  CMD             1    2[COMMON] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0
  1353 ;;      Temps:          1       0       0       0       0
  1354 ;;      Totals:         2       0       0       0       0
  1355 ;;Total ram usage:        2 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 1
  1358 ;; This function calls:
  1359 ;;		_LCD_DATA
  1360 ;; This function is called by:
  1361 ;;		_LCD_Init
  1362 ;;		_LCD_Clear
  1363 ;;		_LCD_Set_Cursor
  1364 ;;		_LCD_SL
  1365 ;;		_LCD_SR
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369     0609                     _LCD_Command:	
  1370                           ;psect for function _LCD_Command
  1371                           
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  1375                           ;LCD_Command@CMD stored from wreg
  1376     0609  00F2               	movwf	LCD_Command@CMD
  1377     060A                     l806:
  1378                           
  1379                           ;LCD.c: 15:     RB5 = 0;
  1380     060A  1283               	bcf	3,5	;RP0=0, select bank0
  1381     060B  1303               	bcf	3,6	;RP1=0, select bank0
  1382     060C  1286               	bcf	6,5	;volatile
  1383     060D                     l808:
  1384                           
  1385                           ;LCD.c: 17:     LCD_DATA(CMD);
  1386     060D  0872               	movf	LCD_Command@CMD,w
  1387     060E  120A  118A  261F  120A  118A  	fcall	_LCD_DATA
  1388     0613                     l810:
  1389                           
  1390                           ;LCD.c: 19:     RB4 = 1;
  1391     0613  1283               	bcf	3,5	;RP0=0, select bank0
  1392     0614  1303               	bcf	3,6	;RP1=0, select bank0
  1393     0615  1606               	bsf	6,4	;volatile
  1394     0616                     l812:
  1395                           
  1396                           ;LCD.c: 20:     _delay((unsigned long)((500)*(4000000/4000000.0)));
  1397     0616  30A6               	movlw	166
  1398     0617  00F1               	movwf	??_LCD_Command
  1399     0618                     u387:
  1400     0618  0BF1               	decfsz	??_LCD_Command,f
  1401     0619  2E18               	goto	u387
  1402     061A  0000               	nop
  1403     061B                     l814:
  1404                           
  1405                           ;LCD.c: 21:     RB4 = 0;
  1406     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1407     061C  1303               	bcf	3,6	;RP1=0, select bank0
  1408     061D  1206               	bcf	6,4	;volatile
  1409     061E                     l25:
  1410     061E  0008               	return
  1411     061F                     __end_of_LCD_Command:
  1412                           
  1413                           	psect	text9
  1414     061F                     __ptext9:	
  1415 ;; *************** function _LCD_DATA *****************
  1416 ;; Defined at:
  1417 ;;		line 24 in file "LCD.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  Data            1    wreg     unsigned char 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  Data            1    0[COMMON] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0
  1434 ;;      Totals:         1       0       0       0       0
  1435 ;;Total ram usage:        1 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_LCD_Command
  1441 ;;		_LCD_Init
  1442 ;;		_LCD_Write_Char
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446     061F                     _LCD_DATA:	
  1447                           ;psect for function _LCD_DATA
  1448                           
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _LCD_DATA: [wreg]
  1452                           ;LCD_DATA@Data stored from wreg
  1453     061F  00F0               	movwf	LCD_DATA@Data
  1454     0620                     l796:
  1455                           
  1456                           ;LCD.c: 26:   if(Data & 1)
  1457     0620  1C70               	btfss	LCD_DATA@Data,0
  1458     0621  2E23               	goto	u141
  1459     0622  2E24               	goto	u140
  1460     0623                     u141:
  1461     0623  2E28               	goto	l28
  1462     0624                     u140:
  1463     0624                     l798:
  1464                           
  1465                           ;LCD.c: 27:     RB0 = 1;
  1466     0624  1283               	bcf	3,5	;RP0=0, select bank0
  1467     0625  1303               	bcf	3,6	;RP1=0, select bank0
  1468     0626  1406               	bsf	6,0	;volatile
  1469     0627  2E2B               	goto	l29
  1470     0628                     l28:	
  1471                           ;LCD.c: 28:   else
  1472                           
  1473                           
  1474                           ;LCD.c: 29:     RB0 = 0;
  1475     0628  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0629  1303               	bcf	3,6	;RP1=0, select bank0
  1477     062A  1006               	bcf	6,0	;volatile
  1478     062B                     l29:
  1479                           
  1480                           ;LCD.c: 30:   if(Data & 2)
  1481     062B  1CF0               	btfss	LCD_DATA@Data,1
  1482     062C  2E2E               	goto	u151
  1483     062D  2E2F               	goto	u150
  1484     062E                     u151:
  1485     062E  2E31               	goto	l30
  1486     062F                     u150:
  1487     062F                     l800:
  1488                           
  1489                           ;LCD.c: 31:     RB1 = 1;
  1490     062F  1486               	bsf	6,1	;volatile
  1491     0630  2E32               	goto	l31
  1492     0631                     l30:	
  1493                           ;LCD.c: 32:   else
  1494                           
  1495                           
  1496                           ;LCD.c: 33:     RB1 = 0;
  1497     0631  1086               	bcf	6,1	;volatile
  1498     0632                     l31:
  1499                           
  1500                           ;LCD.c: 34:   if(Data & 4)
  1501     0632  1D70               	btfss	LCD_DATA@Data,2
  1502     0633  2E35               	goto	u161
  1503     0634  2E36               	goto	u160
  1504     0635                     u161:
  1505     0635  2E38               	goto	l32
  1506     0636                     u160:
  1507     0636                     l802:
  1508                           
  1509                           ;LCD.c: 35:     RB2 = 1;
  1510     0636  1506               	bsf	6,2	;volatile
  1511     0637  2E39               	goto	l33
  1512     0638                     l32:	
  1513                           ;LCD.c: 36:   else
  1514                           
  1515                           
  1516                           ;LCD.c: 37:     RB2 = 0;
  1517     0638  1106               	bcf	6,2	;volatile
  1518     0639                     l33:
  1519                           
  1520                           ;LCD.c: 38:   if(Data & 8)
  1521     0639  1DF0               	btfss	LCD_DATA@Data,3
  1522     063A  2E3C               	goto	u171
  1523     063B  2E3D               	goto	u170
  1524     063C                     u171:
  1525     063C  2E3F               	goto	l34
  1526     063D                     u170:
  1527     063D                     l804:
  1528                           
  1529                           ;LCD.c: 39:     RB3 = 1;
  1530     063D  1586               	bsf	6,3	;volatile
  1531     063E  2E40               	goto	l36
  1532     063F                     l34:	
  1533                           ;LCD.c: 40:   else
  1534                           
  1535                           
  1536                           ;LCD.c: 41:     RB3 = 0;
  1537     063F  1186               	bcf	6,3	;volatile
  1538     0640                     l36:
  1539     0640  0008               	return
  1540     0641                     __end_of_LCD_DATA:
  1541     007E                     btemp	set	126	;btemp
  1542     007E                     wtemp0	set	126
  1543                           
  1544                           	psect	config
  1545                           
  1546                           ;Config register CONFIG @ 0x2007
  1547                           ;	Oscillator Selection bits
  1548                           ;	FOSC = XT, XT oscillator
  1549                           ;	Watchdog Timer Enable bit
  1550                           ;	WDTE = OFF, WDT disabled
  1551                           ;	Power-up Timer Enable bit
  1552                           ;	PWRTE = ON, PWRT enabled
  1553                           ;	Brown-out Reset Enable bit
  1554                           ;	BOREN = ON, BOR enabled
  1555                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1556                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1557                           ;	Data EEPROM Memory Code Protection bit
  1558                           ;	CPD = OFF, Data EEPROM code protection off
  1559                           ;	Flash Program Memory Write Enable bits
  1560                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1561                           ;	In-Circuit Debugger Mode bit
  1562                           ;	DEBUG = 0x1, unprogrammed default
  1563                           ;	Flash Program Memory Code Protection bit
  1564                           ;	CP = OFF, Code protection off
  1565     2007                     	org	8199
  1566     2007  3F71               	dw	16241

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), STR_2(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_Command
    _LCD_SR->_LCD_Command
    _LCD_SL->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_LCD_DATA

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1608
                                              9 COMMON     3     3      0
                                              0 BANK0      6     6      0
                          _LCD_Clear
                           _LCD_Init
                             _LCD_SL
                             _LCD_SR
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       6     5      1     608
                                              3 COMMON     6     5      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_SR                                               0     0      0     110
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_SL                                               0     0      0     110
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              3 COMMON     2     2      0
                        _LCD_Command
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
       _LCD_DATA
   _LCD_Init
     _LCD_Command
     _LCD_DATA
   _LCD_SL
     _LCD_Command
   _LCD_SR
     _LCD_Command
   _LCD_Set_Cursor
     _LCD_Command
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 25 15:01:05 2024

                       pc 0002              ?_LCD_Command 0070                        l30 0631  
                      l31 0632                        l32 0638                        l33 0639  
                      l25 061E                        l34 063F                        l42 05EE  
                      l50 06A4                        l36 0640                        l28 0628  
                      l29 062B                        l62 0608                        l39 074B  
                      l47 06E9                        l56 0665                        l59 05FB  
                      fsr 0004                       l800 062F                       l802 0636  
                     l810 0613                       l804 063D                       l812 0616  
                     l820 0670                       l900 0645                       l814 061B  
                     l806 060A                       l830 068E                       l822 067E  
                     l902 0652                       l910 074C                       l808 060D  
                     l840 06EA                       l832 0694                       l824 0681  
                     l816 0667                       l904 0658                       l912 0766  
                     l850 06FD                       l842 06ED                       l906 05EF  
                     l834 0697                       l826 0686                       l818 066D  
                     l930 07A4                       l922 077E                       l914 076C  
                     l860 071B                       l852 0702                       l844 06EE  
                     l908 05FC                       l836 069C                       l828 0689  
                     l940 07B9                       l924 078A                       l916 077A  
                     l870 0739                       l862 0721                       l854 0708  
                     l846 06EF                       l838 069F                       l950 07D2  
                     l942 07C1                       l926 078F                       l872 073F  
                     l864 0727                       l856 0710                       l848 06F5  
                     l880 06AB                       l952 07DE                       l944 07CE  
                     l936 07A8                       l928 0797                       l874 0745  
                     l866 072D                       l858 0716                       l890 06CD  
                     l882 06B8                       l954 07E3                       l938 07B4  
                     l796 0620                       l876 05E2                       l868 0733  
                     l892 06DA                       l884 06BB                       l956 07EB  
                     l798 0624                       l894 06DD                       l886 06C1  
                     l878 06A6                       l896 06E3                       l888 06C7  
                     l898 0642                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RB3 0033                       _RB4 0034  
                     _RB5 0035                       u210 06CD                       u211 06CC  
                     u140 0624                       u141 0623                       u205 06B1  
                     u150 062F                       u230 0665                       u151 062E  
                     u231 0664                       u160 0636                       u240 07A4  
                     u161 0635                       u225 06D3                       u241 07A3  
                     u170 063D                       u250 07CE                       u171 063C  
                     u307 0683                       u251 07CD                       u260 07F8  
                     u317 068B                       u261 07F7                       u245 07A0  
                     u190 06AB                       u191 06AA                       u327 0699  
                     u255 07CA                       u337 06A1                       u185 0673  
                     u265 07F4                       u347 06F9                       u357 06FF  
                     u277 0784                       u367 070C                       u287 07AE  
                     u377 0718                       u297 07D8                       u387 0618  
                     fsr0 0004            _LCD_Set_Cursor 06A5       LCD_Write_String@str 0077  
                    STR_1 0010                      STR_2 0009         ?_LCD_Write_String 0070  
                    _main 074C                      btemp 007E                      start 0000  
      ??_LCD_Write_String 0075          __end_of_LCD_DATA 0641          __end_of_LCD_Init 074C  
                   ?_main 0070                     _TRISB 0086    __end_of_LCD_Set_Cursor 06EA  
                   main@i 0020                     pclath 000A                     status 0003  
                   wtemp0 007E            _LCD_Write_Char 0666           __initialization 07FC  
            __end_of_main 07FC                    ??_main 0079         __end_of_LCD_Clear 05EF  
         ?_LCD_Set_Cursor 0073                    _LCD_SL 05EF                    _LCD_SR 05FC  
                  _TRISB4 0434                    _TRISB5 0435    __end_of_LCD_Write_Char 06A5  
         LCD_Set_Cursor@c 0073           LCD_Set_Cursor@r 0075                 ?_LCD_DATA 0070  
 __end_of__initialization 07FC                 ?_LCD_Init 0070           ?_LCD_Write_Char 0070  
          __pcstackCOMMON 0070                   ?_LCD_SL 0070                   ?_LCD_SR 0070  
              ??_LCD_DATA 0070                ??_LCD_Init 0073                __pmaintext 074C  
              __stringtab 0003          ??_LCD_Set_Cursor 0074                   __ptext1 0641  
                 __ptext2 0666                   __ptext3 06A5                   __ptext4 05FC  
                 __ptext5 05EF                   __ptext6 06EA                   __ptext7 05E2  
                 __ptext8 0609                   __ptext9 061F                 _LCD_Clear 05E2  
    end_of_initialization 07FC            LCD_Command@CMD 0072                ?_LCD_Clear 0070  
       LCD_Write_String@i 0075          ??_LCD_Write_Char 0071            __end_of_LCD_SL 05FC  
          __end_of_LCD_SR 0609             ??_LCD_Command 0071          _LCD_Write_String 0641  
     start_initialization 07FC                  ??_LCD_SL 0073                  ??_LCD_SR 0073  
     __end_of_LCD_Command 061F                 ___latbits 0002             __pcstackBANK0 0020  
             ??_LCD_Clear 0073                 __pstrings 0003                  _LCD_DATA 061F  
                _LCD_Init 06EA               _LCD_Command 0609               __stringbase 0008  
__end_of_LCD_Write_String 0666       LCD_Write_Char@High4 0073        __end_of__stringtab 0009  
     LCD_Set_Cursor@High4 0077                  main@i_86 0022                  main@i_88 0024  
      LCD_Write_Char@Data 0074        LCD_Write_Char@Low4 0072                 stringcode 0003  
      LCD_Set_Cursor@Low4 0076        LCD_Set_Cursor@Temp 0078              LCD_DATA@Data 0070  
                stringdir 0003                  stringtab 0003  
