

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 03 01:19:37 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0007                     _PORTC	set	7
   168     0006                     _PORTB	set	6
   169     005F                     _GIE	set	95
   170     0033                     _RB3	set	51
   171     0032                     _RB2	set	50
   172     0031                     _RB1	set	49
   173     0030                     _RB0	set	48
   174     0087                     _TRISC	set	135
   175     0086                     _TRISB	set	134
   176     010C                     _EEDATA	set	268
   177     010D                     _EEADR	set	269
   178     018D                     _EECON2	set	397
   179     0C60                     _RD	set	3168
   180     0C62                     _WREN	set	3170
   181     0C67                     _EEPGD	set	3175
   182     0C61                     _WR	set	3169
   183                           
   184                           	psect	cinit
   185     07FC                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FC                     __initialization:
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2F5D   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_write_EEPROM:
   199     0070                     ?_Read_EEPROM:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ??_Read_EEPROM:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ?_Port_Init:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ??_Port_Init:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     write_EEPROM@data:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     Read_EEPROM@address:	
   218                           ; 1 bytes @ 0x0
   219                           
   220                           
   221                           ; 1 bytes @ 0x0
   222     0070                     	ds	1
   223     0071                     ??_write_EEPROM:
   224     0071                     write_EEPROM@address:	
   225                           ; 1 bytes @ 0x1
   226                           
   227     0071                     Read_EEPROM@Data:	
   228                           ; 1 bytes @ 0x1
   229                           
   230                           
   231                           ; 1 bytes @ 0x1
   232     0071                     	ds	1
   233     0072                     ??_main:
   234                           
   235                           ; 1 bytes @ 0x2
   236     0072                     	ds	3
   237     0075                     main@i:
   238                           
   239                           ; 2 bytes @ 0x5
   240     0075                     	ds	2
   241     0077                     main@Address:
   242                           
   243                           ; 1 bytes @ 0x7
   244     0077                     	ds	1
   245                           
   246                           	psect	maintext
   247     075D                     __pmaintext:	
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 26 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  i               2    5[COMMON] int 
   258 ;;  Address         1    7[COMMON] unsigned char 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : B00/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   268 ;;      Params:         0       0       0       0       0
   269 ;;      Locals:         3       0       0       0       0
   270 ;;      Temps:          3       0       0       0       0
   271 ;;      Totals:         6       0       0       0       0
   272 ;;Total ram usage:        6 bytes
   273 ;; Hardware stack levels required when called: 1
   274 ;; This function calls:
   275 ;;		_Port_Init
   276 ;;		_Read_EEPROM
   277 ;;		_write_EEPROM
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283     075D                     _main:	
   284                           ;psect for function _main
   285                           
   286     075D                     l707:	
   287                           ;incstack = 0
   288                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   289                           
   290                           
   291                           ;main.c: 27:     Port_Init();
   292     075D  120A  118A  272F  120A  118A  	fcall	_Port_Init
   293     0762                     l709:
   294                           
   295                           ;main.c: 28:     uint8_t Address=0;
   296     0762  01F7               	clrf	main@Address
   297     0763                     l711:
   298                           
   299                           ;main.c: 30:     if(RB0)
   300     0763  1283               	bcf	3,5	;RP0=0, select bank0
   301     0764  1303               	bcf	3,6	;RP1=0, select bank0
   302     0765  1C06               	btfss	6,0	;volatile
   303     0766  2F68               	goto	u91
   304     0767  2F69               	goto	u90
   305     0768                     u91:
   306     0768  2F82               	goto	l719
   307     0769                     u90:
   308     0769                     l713:
   309                           
   310                           ;main.c: 31:     {;main.c: 32:       write_EEPROM(Address++, 3);
   311     0769  3003               	movlw	3
   312     076A  00F0               	movwf	write_EEPROM@data
   313     076B  0877               	movf	main@Address,w
   314     076C  120A  118A  2742  120A  118A  	fcall	_write_EEPROM
   315     0771                     l715:
   316     0771  3001               	movlw	1
   317     0772  00FF               	movwf	btemp+1
   318     0773  087F               	movf	btemp+1,w
   319     0774  07F7               	addwf	main@Address,f
   320     0775                     l717:
   321                           
   322                           ;main.c: 33:       _delay((unsigned long)((500)*(4000000/4000.0)));
   323     0775  3003               	movlw	3
   324     0776  00F4               	movwf	??_main+2
   325     0777  308A               	movlw	138
   326     0778  00F3               	movwf	??_main+1
   327     0779  3055               	movlw	85
   328     077A  00F2               	movwf	??_main
   329     077B                     u157:
   330     077B  0BF2               	decfsz	??_main,f
   331     077C  2F7B               	goto	u157
   332     077D  0BF3               	decfsz	??_main+1,f
   333     077E  2F7B               	goto	u157
   334     077F  0BF4               	decfsz	??_main+2,f
   335     0780  2F7B               	goto	u157
   336     0781  2F82               	nop2
   337     0782                     l719:
   338                           
   339                           ;main.c: 35:     if(RB1)
   340     0782  1283               	bcf	3,5	;RP0=0, select bank0
   341     0783  1303               	bcf	3,6	;RP1=0, select bank0
   342     0784  1C86               	btfss	6,1	;volatile
   343     0785  2F87               	goto	u101
   344     0786  2F88               	goto	u100
   345     0787                     u101:
   346     0787  2FA1               	goto	l727
   347     0788                     u100:
   348     0788                     l721:
   349                           
   350                           ;main.c: 36:     {;main.c: 37:       write_EEPROM(Address++, 5);
   351     0788  3005               	movlw	5
   352     0789  00F0               	movwf	write_EEPROM@data
   353     078A  0877               	movf	main@Address,w
   354     078B  120A  118A  2742  120A  118A  	fcall	_write_EEPROM
   355     0790                     l723:
   356     0790  3001               	movlw	1
   357     0791  00FF               	movwf	btemp+1
   358     0792  087F               	movf	btemp+1,w
   359     0793  07F7               	addwf	main@Address,f
   360     0794                     l725:
   361                           
   362                           ;main.c: 38:       _delay((unsigned long)((500)*(4000000/4000.0)));
   363     0794  3003               	movlw	3
   364     0795  00F4               	movwf	??_main+2
   365     0796  308A               	movlw	138
   366     0797  00F3               	movwf	??_main+1
   367     0798  3055               	movlw	85
   368     0799  00F2               	movwf	??_main
   369     079A                     u167:
   370     079A  0BF2               	decfsz	??_main,f
   371     079B  2F9A               	goto	u167
   372     079C  0BF3               	decfsz	??_main+1,f
   373     079D  2F9A               	goto	u167
   374     079E  0BF4               	decfsz	??_main+2,f
   375     079F  2F9A               	goto	u167
   376     07A0  2FA1               	nop2
   377     07A1                     l727:
   378                           
   379                           ;main.c: 40:     if(RB2)
   380     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   381     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   382     07A3  1D06               	btfss	6,2	;volatile
   383     07A4  2FA6               	goto	u111
   384     07A5  2FA7               	goto	u110
   385     07A6                     u111:
   386     07A6  2FC0               	goto	l735
   387     07A7                     u110:
   388     07A7                     l729:
   389                           
   390                           ;main.c: 41:     {;main.c: 42:       write_EEPROM(Address++, 7);
   391     07A7  3007               	movlw	7
   392     07A8  00F0               	movwf	write_EEPROM@data
   393     07A9  0877               	movf	main@Address,w
   394     07AA  120A  118A  2742  120A  118A  	fcall	_write_EEPROM
   395     07AF                     l731:
   396     07AF  3001               	movlw	1
   397     07B0  00FF               	movwf	btemp+1
   398     07B1  087F               	movf	btemp+1,w
   399     07B2  07F7               	addwf	main@Address,f
   400     07B3                     l733:
   401                           
   402                           ;main.c: 43:       _delay((unsigned long)((500)*(4000000/4000.0)));
   403     07B3  3003               	movlw	3
   404     07B4  00F4               	movwf	??_main+2
   405     07B5  308A               	movlw	138
   406     07B6  00F3               	movwf	??_main+1
   407     07B7  3055               	movlw	85
   408     07B8  00F2               	movwf	??_main
   409     07B9                     u177:
   410     07B9  0BF2               	decfsz	??_main,f
   411     07BA  2FB9               	goto	u177
   412     07BB  0BF3               	decfsz	??_main+1,f
   413     07BC  2FB9               	goto	u177
   414     07BD  0BF4               	decfsz	??_main+2,f
   415     07BE  2FB9               	goto	u177
   416     07BF  2FC0               	nop2
   417     07C0                     l735:
   418                           
   419                           ;main.c: 45:     if(Address==3){Address=0;}
   420     07C0  3003               	movlw	3
   421     07C1  0677               	xorwf	main@Address,w
   422     07C2  1D03               	btfss	3,2
   423     07C3  2FC5               	goto	u121
   424     07C4  2FC6               	goto	u120
   425     07C5                     u121:
   426     07C5  2FC7               	goto	l739
   427     07C6                     u120:
   428     07C6                     l737:
   429     07C6  01F7               	clrf	main@Address
   430     07C7                     l739:
   431                           
   432                           ;main.c: 47:     if(RB3)
   433     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   434     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   435     07C9  1D86               	btfss	6,3	;volatile
   436     07CA  2FCC               	goto	u131
   437     07CB  2FCD               	goto	u130
   438     07CC                     u131:
   439     07CC  2F63               	goto	l711
   440     07CD                     u130:
   441     07CD                     l741:
   442                           
   443                           ;main.c: 48:     {;main.c: 50:         for(int i=0;i<3;i++){
   444     07CD  01F5               	clrf	main@i
   445     07CE  01F6               	clrf	main@i+1
   446     07CF                     l747:
   447                           
   448                           ;main.c: 51:         PORTC=Read_EEPROM(i);
   449     07CF  0875               	movf	main@i,w
   450     07D0  120A  118A  2720  120A  118A  	fcall	_Read_EEPROM
   451     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   452     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   453     07D7  0087               	movwf	7	;volatile
   454     07D8                     l749:
   455                           
   456                           ;main.c: 52:          _delay((unsigned long)((1000)*(4000000/4000.0)));
   457     07D8  3006               	movlw	6
   458     07D9  00F4               	movwf	??_main+2
   459     07DA  3013               	movlw	19
   460     07DB  00F3               	movwf	??_main+1
   461     07DC  30AD               	movlw	173
   462     07DD  00F2               	movwf	??_main
   463     07DE                     u187:
   464     07DE  0BF2               	decfsz	??_main,f
   465     07DF  2FDE               	goto	u187
   466     07E0  0BF3               	decfsz	??_main+1,f
   467     07E1  2FDE               	goto	u187
   468     07E2  0BF4               	decfsz	??_main+2,f
   469     07E3  2FDE               	goto	u187
   470     07E4  2FE5               	nop2
   471     07E5                     l751:
   472                           
   473                           ;main.c: 53:         }
   474     07E5  3001               	movlw	1
   475     07E6  07F5               	addwf	main@i,f
   476     07E7  1803               	skipnc
   477     07E8  0AF6               	incf	main@i+1,f
   478     07E9  3000               	movlw	0
   479     07EA  07F6               	addwf	main@i+1,f
   480     07EB                     l753:
   481     07EB  0876               	movf	main@i+1,w
   482     07EC  3A80               	xorlw	128
   483     07ED  00FF               	movwf	btemp+1
   484     07EE  3080               	movlw	128
   485     07EF  027F               	subwf	btemp+1,w
   486     07F0  1D03               	skipz
   487     07F1  2FF4               	goto	u145
   488     07F2  3003               	movlw	3
   489     07F3  0275               	subwf	main@i,w
   490     07F4                     u145:
   491     07F4  1C03               	skipc
   492     07F5  2FF7               	goto	u141
   493     07F6  2FF8               	goto	u140
   494     07F7                     u141:
   495     07F7  2FCF               	goto	l747
   496     07F8                     u140:
   497     07F8  2F63               	goto	l711
   498     07F9  120A  118A  2800   	ljmp	start
   499     07FC                     __end_of_main:
   500                           
   501                           	psect	text1
   502     0742                     __ptext1:	
   503 ;; *************** function _write_EEPROM *****************
   504 ;; Defined at:
   505 ;;		line 60 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  address         1    wreg     unsigned char 
   508 ;;  data            1    0[COMMON] unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  address         1    1[COMMON] unsigned char 
   511 ;;  GIE_status      1    0        unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         1       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0
   524 ;;      Totals:         2       0       0       0       0
   525 ;;Total ram usage:        2 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534     0742                     _write_EEPROM:	
   535                           ;psect for function _write_EEPROM
   536                           
   537                           
   538                           ;incstack = 0
   539                           ; Regs used in _write_EEPROM: [wreg]
   540                           ;write_EEPROM@address stored from wreg
   541     0742  00F1               	movwf	write_EEPROM@address
   542     0743                     l689:
   543     0743                     l59:	
   544                           ;main.c: 62: while(WR);
   545                           
   546     0743  1683               	bsf	3,5	;RP0=1, select bank3
   547     0744  1703               	bsf	3,6	;RP1=1, select bank3
   548     0745  188C               	btfsc	12,1	;volsfr
   549     0746  2F48               	goto	u81
   550     0747  2F49               	goto	u80
   551     0748                     u81:
   552     0748  2F43               	goto	l59
   553     0749                     u80:
   554     0749                     l691:
   555                           
   556                           ;main.c: 63: EEADR=address;
   557     0749  0871               	movf	write_EEPROM@address,w
   558     074A  1283               	bcf	3,5	;RP0=0, select bank2
   559     074B  1703               	bsf	3,6	;RP1=1, select bank2
   560     074C  008D               	movwf	13	;volatile
   561                           
   562                           ;main.c: 64: EEDATA=data;
   563     074D  0870               	movf	write_EEPROM@data,w
   564     074E  008C               	movwf	12	;volatile
   565     074F                     l693:
   566                           
   567                           ;main.c: 65: EEPGD=0;
   568     074F  1683               	bsf	3,5	;RP0=1, select bank3
   569     0750  1703               	bsf	3,6	;RP1=1, select bank3
   570     0751  138C               	bcf	12,7	;volsfr
   571     0752                     l695:
   572                           
   573                           ;main.c: 66: WREN=1;
   574     0752  150C               	bsf	12,2	;volsfr
   575     0753                     l697:
   576                           
   577                           ;main.c: 67: GIE=0;
   578     0753  138B               	bcf	11,7	;volatile
   579                           
   580                           ;main.c: 69: EECON2=0x55;
   581     0754  3055               	movlw	85
   582     0755  008D               	movwf	13	;volsfr
   583                           
   584                           ;main.c: 70: EECON2=0xAA;
   585     0756  30AA               	movlw	170
   586     0757  008D               	movwf	13	;volsfr
   587     0758                     l699:
   588                           
   589                           ;main.c: 71: WR=1;
   590     0758  148C               	bsf	12,1	;volsfr
   591     0759                     l701:
   592                           
   593                           ;main.c: 72: GIE=1;
   594     0759  178B               	bsf	11,7	;volatile
   595     075A                     l703:
   596                           
   597                           ;main.c: 73: WREN=0;
   598     075A  110C               	bcf	12,2	;volsfr
   599     075B                     l705:
   600                           
   601                           ;main.c: 74: WR=0;
   602     075B  108C               	bcf	12,1	;volsfr
   603     075C                     l62:
   604     075C  0008               	return
   605     075D                     __end_of_write_EEPROM:
   606                           
   607                           	psect	text2
   608     0720                     __ptext2:	
   609 ;; *************** function _Read_EEPROM *****************
   610 ;; Defined at:
   611 ;;		line 78 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  address         1    wreg     unsigned char 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  address         1    0[COMMON] unsigned char 
   616 ;;  Data            1    1[COMMON] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      unsigned char 
   619 ;; Registers used:
   620 ;;		wreg
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         2       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0
   629 ;;      Totals:         2       0       0       0       0
   630 ;;Total ram usage:        2 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639     0720                     _Read_EEPROM:	
   640                           ;psect for function _Read_EEPROM
   641                           
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _Read_EEPROM: [wreg]
   645                           ;Read_EEPROM@address stored from wreg
   646     0720  00F0               	movwf	Read_EEPROM@address
   647     0721                     l633:
   648                           
   649                           ;main.c: 79: uint8_t Data;;main.c: 80: EEADR=address;
   650     0721  0870               	movf	Read_EEPROM@address,w
   651     0722  1283               	bcf	3,5	;RP0=0, select bank2
   652     0723  1703               	bsf	3,6	;RP1=1, select bank2
   653     0724  008D               	movwf	13	;volatile
   654     0725                     l635:
   655                           
   656                           ;main.c: 81: EEPGD=0;
   657     0725  1683               	bsf	3,5	;RP0=1, select bank3
   658     0726  1703               	bsf	3,6	;RP1=1, select bank3
   659     0727  138C               	bcf	12,7	;volsfr
   660     0728                     l637:
   661                           
   662                           ;main.c: 82: RD=1;
   663     0728  140C               	bsf	12,0	;volsfr
   664                           
   665                           ;main.c: 83: Data=EEDATA;
   666     0729  1283               	bcf	3,5	;RP0=0, select bank2
   667     072A  1703               	bsf	3,6	;RP1=1, select bank2
   668     072B  080C               	movf	12,w	;volatile
   669     072C  00F1               	movwf	Read_EEPROM@Data
   670                           
   671                           ;main.c: 84: return Data;
   672     072D  0871               	movf	Read_EEPROM@Data,w
   673     072E                     l65:
   674     072E  0008               	return
   675     072F                     __end_of_Read_EEPROM:
   676                           
   677                           	psect	text3
   678     072F                     __ptext3:	
   679 ;; *************** function _Port_Init *****************
   680 ;; Defined at:
   681 ;;		line 19 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, btemp+1
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708     072F                     _Port_Init:	
   709                           ;psect for function _Port_Init
   710                           
   711     072F                     l609:	
   712                           ;incstack = 0
   713                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   714                           
   715                           
   716                           ;main.c: 20:   TRISB |= 0x0F;
   717     072F  300F               	movlw	15
   718     0730  00FF               	movwf	btemp+1
   719     0731  087F               	movf	btemp+1,w
   720     0732  1683               	bsf	3,5	;RP0=1, select bank1
   721     0733  1303               	bcf	3,6	;RP1=0, select bank1
   722     0734  0486               	iorwf	6,f	;volatile
   723     0735                     l611:
   724                           
   725                           ;main.c: 21:   PORTB = 0;
   726     0735  1283               	bcf	3,5	;RP0=0, select bank0
   727     0736  1303               	bcf	3,6	;RP1=0, select bank0
   728     0737  0186               	clrf	6	;volatile
   729     0738                     l613:
   730                           
   731                           ;main.c: 22:   TRISC &= ~0x0F;
   732     0738  30F0               	movlw	240
   733     0739  00FF               	movwf	btemp+1
   734     073A  087F               	movf	btemp+1,w
   735     073B  1683               	bsf	3,5	;RP0=1, select bank1
   736     073C  1303               	bcf	3,6	;RP1=0, select bank1
   737     073D  0587               	andwf	7,f	;volatile
   738                           
   739                           ;main.c: 23:   PORTC = 0x00;
   740     073E  1283               	bcf	3,5	;RP0=0, select bank0
   741     073F  1303               	bcf	3,6	;RP1=0, select bank0
   742     0740  0187               	clrf	7	;volatile
   743     0741                     l41:
   744     0741  0008               	return
   745     0742                     __end_of_Port_Init:
   746     007E                     btemp	set	126	;btemp
   747     007E                     wtemp0	set	126
   748                           
   749                           	psect	config
   750                           
   751                           ;Config register CONFIG @ 0x2007
   752                           ;	Oscillator Selection bits
   753                           ;	FOSC = XT, XT oscillator
   754                           ;	Watchdog Timer Enable bit
   755                           ;	WDTE = OFF, WDT disabled
   756                           ;	Power-up Timer Enable bit
   757                           ;	PWRTE = ON, PWRT enabled
   758                           ;	Brown-out Reset Enable bit
   759                           ;	BOREN = ON, BOR enabled
   760                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   761                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   762                           ;	Data EEPROM Memory Code Protection bit
   763                           ;	CPD = OFF, Data EEPROM code protection off
   764                           ;	Flash Program Memory Write Enable bits
   765                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   766                           ;	In-Circuit Debugger Mode bit
   767                           ;	DEBUG = 0x1, unprogrammed default
   768                           ;	Flash Program Memory Code Protection bit
   769                           ;	CP = OFF, Code protection off
   770     2007                     	org	8199
   771     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Read_EEPROM
    _main->_write_EEPROM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     464
                                              2 COMMON     6     6      0
                          _Port_Init
                        _Read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (1) _write_EEPROM                                         3     2      1     273
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read_EEPROM                                          2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _Read_EEPROM
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 03 01:19:37 2024

                     l41 0741                       l62 075C                       l65 072E  
                     l59 0743                       _RD 0C60                       u80 0749  
                     u81 0748                       u90 0769                       u91 0768  
                     _WR 0C61                      l611 0735                      l613 0738  
                    l701 0759                      l703 075A                      l711 0763  
                    l609 072F                      l633 0721                      l705 075B  
                    l721 0788                      l713 0769                      l635 0725  
                    l731 07AF                      l723 0790                      l715 0771  
                    l707 075D                      l637 0728                      l741 07CD  
                    l733 07B3                      l725 0794                      l717 0775  
                    l709 0762                      l751 07E5                      l735 07C0  
                    l727 07A1                      l719 0782                      l753 07EB  
                    l737 07C6                      l729 07A7                      l691 0749  
                    l747 07CF                      l739 07C7                      l693 074F  
                    l749 07D8                      l695 0752                      l697 0753  
                    l689 0743                      l699 0758                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      u100 0788                      u101 0787  
                    u110 07A7                      u111 07A6                      u120 07C6  
                    u121 07C5                      u130 07CD                      u131 07CC  
                    u140 07F8                      u141 07F7                      u145 07F4  
                    u157 077B                      u167 079A                      u177 07B9  
                    u187 07DE                     _WREN 0C62                     _main 075D  
                   btemp 007E            ??_Read_EEPROM 0070                     start 0000  
                  ?_main 0070                    _EEADR 010D                    _EEPGD 0C67  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    main@i 0075                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
    __end_of_Read_EEPROM 072F                   ??_main 0072             _write_EEPROM 0742  
                 _EEDATA 010C                   _EECON2 018D  __end_of__initialization 07FC  
            _Read_EEPROM 0720           __pcstackCOMMON 0070         write_EEPROM@data 0070  
        Read_EEPROM@Data 0071        __end_of_Port_Init 0742               __pmaintext 075D  
                __ptext1 0742                  __ptext2 0720                  __ptext3 072F  
   end_of_initialization 07FC      write_EEPROM@address 0071             ?_Read_EEPROM 0070  
    start_initialization 07FC                _Port_Init 072F       Read_EEPROM@address 0070  
              ___latbits 0002               ?_Port_Init 0070            ?_write_EEPROM 0070  
         ??_write_EEPROM 0071              ??_Port_Init 0070     __end_of_write_EEPROM 075D  
            main@Address 0077  
