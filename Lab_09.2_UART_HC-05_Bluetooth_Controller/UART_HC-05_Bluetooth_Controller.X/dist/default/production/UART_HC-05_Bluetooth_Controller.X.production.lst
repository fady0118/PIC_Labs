

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 09 20:09:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     001A                     _RCREG	set	26
   170     0006                     _PORTB	set	6
   171     0031                     _RB1	set	49
   172     0030                     _RB0	set	48
   173     0065                     _RCIF	set	101
   174     00C4                     _CREN	set	196
   175     005F                     _GIE	set	95
   176     005E                     _PEIE	set	94
   177     00C7                     _SPEN	set	199
   178     0099                     _SPBRG	set	153
   179     0086                     _TRISB	set	134
   180     0465                     _RCIE	set	1125
   181     043F                     _TRISC7	set	1087
   182     043E                     _TRISC6	set	1086
   183     04C4                     _SYNC	set	1220
   184     04C2                     _BRGH	set	1218
   185                           
   186                           	psect	cinit
   187     000F                     start_initialization:	
   188                           ; #config settings
   189                           
   190     000F                     __initialization:
   191                           
   192                           ; Clear objects allocated to COMMON
   193     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   194     0010                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197     0010                     __end_of__initialization:
   198     0010  0183               	clrf	3
   199     0011  120A  118A  284E   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMMON
   202     0072                     __pbssCOMMON:
   203     0072                     _UART_Buffer:
   204     0072                     	ds	1
   205                           
   206                           	psect	cstackCOMMON
   207     0070                     __pcstackCOMMON:
   208     0070                     ?_UART_RX_Init:
   209     0070                     ?_Port_Init:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?_ISR:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ??_ISR:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223     0070                     	ds	2
   224     0072                     ??_UART_RX_Init:
   225     0072                     ??_Port_Init:	
   226                           ; 1 bytes @ 0x2
   227                           
   228     0072                     ??_main:	
   229                           ; 1 bytes @ 0x2
   230                           
   231                           
   232                           	psect	maintext
   233     004E                     __pmaintext:	
   234                           ; 1 bytes @ 0x2
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 32 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : B00/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0
   257 ;;      Totals:         0       0       0       0       0
   258 ;;Total ram usage:        0 bytes
   259 ;; Hardware stack levels required when called: 2
   260 ;; This function calls:
   261 ;;		_Port_Init
   262 ;;		_UART_RX_Init
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268     004E                     _main:	
   269                           ;psect for function _main
   270                           
   271     004E                     l627:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   274                           
   275                           
   276                           ;main.c: 33:     Port_Init();
   277     004E  120A  118A  205C  120A  118A  	fcall	_Port_Init
   278     0053                     l629:
   279                           
   280                           ;main.c: 34:     UART_RX_Init();
   281     0053  120A  118A  203A  120A  118A  	fcall	_UART_RX_Init
   282     0058                     l44:	
   283                           ;main.c: 36:     while(1){
   284                           
   285     0058                     l45:	
   286                           ;main.c: 38:     }
   287                           
   288     0058  2858               	goto	l44
   289     0059  120A  118A  280C   	ljmp	start
   290     005C                     __end_of_main:
   291                           
   292                           	psect	text1
   293     003A                     __ptext1:	
   294 ;; *************** function _UART_RX_Init *****************
   295 ;; Defined at:
   296 ;;		line 44 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; Hardware stack levels required when called: 1
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     003A                     _UART_RX_Init:	
   325                           ;psect for function _UART_RX_Init
   326                           
   327     003A                     l607:	
   328                           ;incstack = 0
   329                           ; Regs used in _UART_RX_Init: [wreg]
   330                           
   331                           
   332                           ;main.c: 45:   BRGH = 1;
   333     003A  1683               	bsf	3,5	;RP0=1, select bank1
   334     003B  1303               	bcf	3,6	;RP1=0, select bank1
   335     003C  1518               	bsf	24,2	;volatile
   336     003D                     l609:
   337                           
   338                           ;main.c: 46:   SPBRG = 25;
   339     003D  3019               	movlw	25
   340     003E  0099               	movwf	25	;volatile
   341     003F                     l611:
   342                           
   343                           ;main.c: 48:   SYNC = 0;
   344     003F  1218               	bcf	24,4	;volatile
   345     0040                     l613:
   346                           
   347                           ;main.c: 49:   SPEN = 1;
   348     0040  1283               	bcf	3,5	;RP0=0, select bank0
   349     0041  1303               	bcf	3,6	;RP1=0, select bank0
   350     0042  1798               	bsf	24,7	;volatile
   351     0043                     l615:
   352                           
   353                           ;main.c: 51:   TRISC6 = 1;
   354     0043  1683               	bsf	3,5	;RP0=1, select bank1
   355     0044  1303               	bcf	3,6	;RP1=0, select bank1
   356     0045  1707               	bsf	7,6	;volatile
   357     0046                     l617:
   358                           
   359                           ;main.c: 52:   TRISC7 = 1;
   360     0046  1787               	bsf	7,7	;volatile
   361     0047                     l619:
   362                           
   363                           ;main.c: 54:   RCIE = 1;
   364     0047  168C               	bsf	12,5	;volatile
   365     0048                     l621:
   366                           
   367                           ;main.c: 55:   PEIE = 1;
   368     0048  170B               	bsf	11,6	;volatile
   369     0049                     l623:
   370                           
   371                           ;main.c: 56:   GIE = 1;
   372     0049  178B               	bsf	11,7	;volatile
   373     004A                     l625:
   374                           
   375                           ;main.c: 58:   CREN = 1;
   376     004A  1283               	bcf	3,5	;RP0=0, select bank0
   377     004B  1303               	bcf	3,6	;RP1=0, select bank0
   378     004C  1618               	bsf	24,4	;volatile
   379     004D                     l50:
   380     004D  0008               	return
   381     004E                     __end_of_UART_RX_Init:
   382                           
   383                           	psect	text2
   384     005C                     __ptext2:	
   385 ;; *************** function _Port_Init *****************
   386 ;; Defined at:
   387 ;;		line 27 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, btemp+1
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0
   404 ;;      Totals:         0       0       0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels used: 1
   407 ;; Hardware stack levels required when called: 1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415     005C                     _Port_Init:	
   416                           ;psect for function _Port_Init
   417                           
   418     005C                     l603:	
   419                           ;incstack = 0
   420                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   421                           
   422                           
   423                           ;main.c: 28:   TRISB &= ~0x03;
   424     005C  30FC               	movlw	252
   425     005D  00FF               	movwf	btemp+1
   426     005E  087F               	movf	btemp+1,w
   427     005F  1683               	bsf	3,5	;RP0=1, select bank1
   428     0060  1303               	bcf	3,6	;RP1=0, select bank1
   429     0061  0586               	andwf	6,f	;volatile
   430     0062                     l605:
   431                           
   432                           ;main.c: 29:   PORTB = 0;
   433     0062  1283               	bcf	3,5	;RP0=0, select bank0
   434     0063  1303               	bcf	3,6	;RP1=0, select bank0
   435     0064  0186               	clrf	6	;volatile
   436     0065                     l39:
   437     0065  0008               	return
   438     0066                     __end_of_Port_Init:
   439                           
   440                           	psect	text3
   441     0014                     __ptext3:	
   442 ;; *************** function _ISR *****************
   443 ;; Defined at:
   444 ;;		line 61 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          2       0       0       0       0
   461 ;;      Totals:         2       0       0       0       0
   462 ;;Total ram usage:        2 bytes
   463 ;; Hardware stack levels used: 1
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		Interrupt level 1
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471     0014                     _ISR:	
   472                           ;psect for function _ISR
   473                           
   474     0014                     i1l631:
   475                           
   476                           ;main.c: 62:   if (RCIF == 1)
   477     0014  1283               	bcf	3,5	;RP0=0, select bank0
   478     0015  1303               	bcf	3,6	;RP1=0, select bank0
   479     0016  1E8C               	btfss	12,5	;volatile
   480     0017  2819               	goto	u1_21
   481     0018  281A               	goto	u1_20
   482     0019                     u1_21:
   483     0019  2833               	goto	i1l59
   484     001A                     u1_20:
   485     001A                     i1l633:
   486                           
   487                           ;main.c: 63:   {;main.c: 64:     UART_Buffer = RCREG;
   488     001A  081A               	movf	26,w	;volatile
   489     001B  00F2               	movwf	_UART_Buffer
   490     001C                     i1l635:
   491                           
   492                           ;main.c: 68:     if(UART_Buffer == 49)
   493     001C  3031               	movlw	49
   494     001D  0672               	xorwf	_UART_Buffer,w
   495     001E  1D03               	btfss	3,2
   496     001F  2821               	goto	u2_21
   497     0020  2822               	goto	u2_20
   498     0021                     u2_21:
   499     0021  2823               	goto	i1l639
   500     0022                     u2_20:
   501     0022                     i1l637:
   502                           
   503                           ;main.c: 69:       RB0 = 1;
   504     0022  1406               	bsf	6,0	;volatile
   505     0023                     i1l639:
   506                           
   507                           ;main.c: 70:     if(UART_Buffer == 50)
   508     0023  3032               	movlw	50
   509     0024  0672               	xorwf	_UART_Buffer,w
   510     0025  1D03               	btfss	3,2
   511     0026  2828               	goto	u3_21
   512     0027  2829               	goto	u3_20
   513     0028                     u3_21:
   514     0028  282A               	goto	i1l643
   515     0029                     u3_20:
   516     0029                     i1l641:
   517                           
   518                           ;main.c: 71:       RB0 = 0;
   519     0029  1006               	bcf	6,0	;volatile
   520     002A                     i1l643:
   521                           
   522                           ;main.c: 72:     if(UART_Buffer == 51)
   523     002A  3033               	movlw	51
   524     002B  0672               	xorwf	_UART_Buffer,w
   525     002C  1D03               	btfss	3,2
   526     002D  282F               	goto	u4_21
   527     002E  2830               	goto	u4_20
   528     002F                     u4_21:
   529     002F  2832               	goto	i1l647
   530     0030                     u4_20:
   531     0030                     i1l645:
   532                           
   533                           ;main.c: 73:       RB1 = ~RB1;
   534     0030  3002               	movlw	2
   535     0031  0686               	xorwf	6,f
   536     0032                     i1l647:
   537                           
   538                           ;main.c: 75:     RCIF = 0;
   539     0032  128C               	bcf	12,5	;volatile
   540     0033                     i1l59:
   541     0033  0871               	movf	??_ISR+1,w
   542     0034  008A               	movwf	10
   543     0035  0E70               	swapf	??_ISR,w
   544     0036  0083               	movwf	3
   545     0037  0EFE               	swapf	btemp,f
   546     0038  0E7E               	swapf	btemp,w
   547     0039  0009               	retfie
   548     003A                     __end_of_ISR:
   549     007E                     btemp	set	126	;btemp
   550     007E                     wtemp0	set	126
   551                           
   552                           	psect	intentry
   553     0004                     __pintentry:	
   554                           ;incstack = 0
   555                           ; Regs used in _ISR: [wreg+status,2+status,0]
   556                           
   557     0004                     interrupt_function:
   558     007E                     saved_w	set	btemp
   559     0004  00FE               	movwf	btemp
   560     0005  0E03               	swapf	3,w
   561     0006  00F0               	movwf	??_ISR
   562     0007  080A               	movf	10,w
   563     0008  00F1               	movwf	??_ISR+1
   564     0009  120A  118A  2814   	ljmp	_ISR
   565                           
   566                           	psect	config
   567                           
   568                           ;Config register CONFIG @ 0x2007
   569                           ;	Oscillator Selection bits
   570                           ;	FOSC = XT, XT oscillator
   571                           ;	Watchdog Timer Enable bit
   572                           ;	WDTE = OFF, WDT disabled
   573                           ;	Power-up Timer Enable bit
   574                           ;	PWRTE = ON, PWRT enabled
   575                           ;	Brown-out Reset Enable bit
   576                           ;	BOREN = ON, BOR enabled
   577                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   578                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   579                           ;	Data EEPROM Memory Code Protection bit
   580                           ;	CPD = OFF, Data EEPROM code protection off
   581                           ;	Flash Program Memory Write Enable bits
   582                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   583                           ;	In-Circuit Debugger Mode bit
   584                           ;	DEBUG = 0x1, unprogrammed default
   585                           ;	Flash Program Memory Code Protection bit
   586                           ;	CP = OFF, Code protection off
   587     2007                     	org	8199
   588     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _Port_Init
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _UART_RX_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 09 20:09:26 2024

                     l50 004D                       l44 0058                       l45 0058  
                     l39 0065                      l603 005C                      l611 003F  
                    l605 0062                      l621 0048                      l613 0040  
                    l623 0049                      l615 0043                      l607 003A  
                    l625 004A                      l617 0046                      l609 003D  
                    l619 0047                      l627 004E                      l629 0053  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _ISR 0014                     ?_ISR 0070                     _BRGH 04C2  
                   _CREN 00C4                     _PEIE 005E                     _RCIE 0465  
                   _RCIF 0065                     i1l59 0033                     _SPEN 00C7  
                   _SYNC 04C4                     u1_20 001A                     u1_21 0019  
                   u2_20 0022                     u2_21 0021                     u3_20 0029  
                   u3_21 0028                     u4_20 0030                     u4_21 002F  
                   _main 004E                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l631 0014  
                  i1l641 0029                    i1l633 001A                    i1l643 002A  
                  i1l635 001C                    i1l645 0030                    i1l637 0022  
                  i1l647 0032                    i1l639 0023                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 005C                   ??_main 0072  
                 _TRISC6 043E                   _TRISC7 043F                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070        __end_of_Port_Init 0066  
             __pmaintext 004E               __pintentry 0004            ?_UART_RX_Init 0070  
                __ptext1 003A                  __ptext2 005C                  __ptext3 0014  
         ??_UART_RX_Init 0072     end_of_initialization 0010      start_initialization 000F  
            __end_of_ISR 003A     __end_of_UART_RX_Init 004E                _Port_Init 005C  
            __pbssCOMMON 0072                ___latbits 0002               ?_Port_Init 0070  
      interrupt_function 0004              ??_Port_Init 0072             _UART_RX_Init 003A  
               intlevel1 0000              _UART_Buffer 0072  
