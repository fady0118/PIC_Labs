

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 23 17:24:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000E                     _TMR1	set	14
   169     0006                     _PORTB	set	6
   170     0010                     _T1CON	set	16
   171     005F                     _GIE	set	95
   172     005E                     _PEIE	set	94
   173     0060                     _TMR1IF	set	96
   174     0083                     _T1OSCEN	set	131
   175     0081                     _TMR1CS	set	129
   176     0080                     _TMR1ON	set	128
   177     0086                     _TRISB	set	134
   178     0460                     _TMR1IE	set	1120
   179                           
   180                           	psect	cinit
   181     0013                     start_initialization:	
   182                           ; #config settings
   183                           
   184     0013                     __initialization:
   185                           
   186                           ; Clear objects allocated to COMMON
   187     0013  01F6               	clrf	__pbssCOMMON& (0+127)
   188     0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   189     0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   190     0016                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     0016                     __end_of__initialization:
   194     0016  0183               	clrf	3
   195     0017  120A  118A  286F   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198     0076                     __pbssCOMMON:
   199     0076                     _counter:
   200     0076                     	ds	1
   201     0077                     _data:
   202     0077                     	ds	1
   203     0078                     _State:
   204     0078                     	ds	1
   205                           
   206                           	psect	cstackCOMMON
   207     0070                     __pcstackCOMMON:
   208     0070                     ?_Timer1_Init:
   209     0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_ISR:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ??_ISR:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 1 bytes @ 0x0
   220     0070                     	ds	6
   221     0076                     ??_Timer1_Init:
   222     0076                     ??_main:	
   223                           ; 1 bytes @ 0x6
   224                           
   225                           
   226                           	psect	maintext
   227     006F                     __pmaintext:	
   228                           ; 1 bytes @ 0x6
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 38 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called: 2
   254 ;; This function calls:
   255 ;;		_Timer1_Init
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261     006F                     _main:	
   262                           ;psect for function _main
   263                           
   264     006F                     l612:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   267                           
   268                           
   269                           ;main.c: 39:     TRISB = 0x00;
   270     006F  1683               	bsf	3,5	;RP0=1, select bank1
   271     0070  1303               	bcf	3,6	;RP1=0, select bank1
   272     0071  0186               	clrf	6	;volatile
   273                           
   274                           ;main.c: 40:     PORTB = 0x00;
   275     0072  1283               	bcf	3,5	;RP0=0, select bank0
   276     0073  1303               	bcf	3,6	;RP1=0, select bank0
   277     0074  0186               	clrf	6	;volatile
   278     0075                     l614:
   279                           
   280                           ;main.c: 41:     Timer1_Init();
   281     0075  120A  118A  2058  120A  118A  	fcall	_Timer1_Init
   282     007A                     l36:	
   283                           ;main.c: 42:     while(1){
   284                           
   285     007A                     l37:	
   286                           ;main.c: 44:     }
   287                           
   288     007A  287A               	goto	l36
   289     007B  120A  118A  2810   	ljmp	start
   290     007E                     __end_of_main:
   291                           
   292                           	psect	text1
   293     0058                     __ptext1:	
   294 ;; *************** function _Timer1_Init *****************
   295 ;; Defined at:
   296 ;;		line 25 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, btemp+1
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; Hardware stack levels required when called: 1
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     0058                     _Timer1_Init:	
   325                           ;psect for function _Timer1_Init
   326                           
   327     0058                     l596:	
   328                           ;incstack = 0
   329                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0+btemp+1]
   330                           
   331                           
   332                           ;main.c: 26: TMR1ON=0;
   333     0058  1283               	bcf	3,5	;RP0=0, select bank0
   334     0059  1303               	bcf	3,6	;RP1=0, select bank0
   335     005A  1010               	bcf	16,0	;volatile
   336                           
   337                           ;main.c: 27: TMR1CS=0;
   338     005B  1090               	bcf	16,1	;volatile
   339                           
   340                           ;main.c: 28: T1OSCEN=1;
   341     005C  1590               	bsf	16,3	;volatile
   342     005D                     l598:
   343                           
   344                           ;main.c: 29: T1CON&=~0x30;
   345     005D  30CF               	movlw	207
   346     005E  00FF               	movwf	btemp+1
   347     005F  087F               	movf	btemp+1,w
   348     0060  0590               	andwf	16,f	;volatile
   349     0061                     l600:
   350                           
   351                           ;main.c: 30: TMR1ON=1;
   352     0061  1410               	bsf	16,0	;volatile
   353     0062                     l602:
   354                           
   355                           ;main.c: 31: TMR1IE=1;
   356     0062  1683               	bsf	3,5	;RP0=1, select bank1
   357     0063  1303               	bcf	3,6	;RP1=0, select bank1
   358     0064  140C               	bsf	12,0	;volatile
   359     0065                     l604:
   360                           
   361                           ;main.c: 32: TMR1IF = 0;
   362     0065  1283               	bcf	3,5	;RP0=0, select bank0
   363     0066  1303               	bcf	3,6	;RP1=0, select bank0
   364     0067  100C               	bcf	12,0	;volatile
   365     0068                     l606:
   366                           
   367                           ;main.c: 33: PEIE = 1;
   368     0068  170B               	bsf	11,6	;volatile
   369     0069                     l608:
   370                           
   371                           ;main.c: 34: GIE = 1;
   372     0069  178B               	bsf	11,7	;volatile
   373     006A                     l610:
   374                           
   375                           ;main.c: 35: TMR1=65400;
   376     006A  30FF               	movlw	255
   377     006B  008F               	movwf	15	;volatile
   378     006C  3078               	movlw	120
   379     006D  008E               	movwf	14	;volatile
   380     006E                     l31:
   381     006E  0008               	return
   382     006F                     __end_of_Timer1_Init:
   383                           
   384                           	psect	text2
   385     001A                     __ptext2:	
   386 ;; *************** function _ISR *****************
   387 ;; Defined at:
   388 ;;		line 57 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          6       0       0       0       0
   405 ;;      Totals:         6       0       0       0       0
   406 ;;Total ram usage:        6 bytes
   407 ;; Hardware stack levels used: 1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		Interrupt level 1
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415     001A                     _ISR:	
   416                           ;psect for function _ISR
   417                           
   418     001A                     i1l616:
   419                           
   420                           ;main.c: 58:     if(TMR1IF){
   421     001A  1283               	bcf	3,5	;RP0=0, select bank0
   422     001B  1303               	bcf	3,6	;RP1=0, select bank0
   423     001C  1C0C               	btfss	12,0	;volatile
   424     001D  281F               	goto	u1_21
   425     001E  2820               	goto	u1_20
   426     001F                     u1_21:
   427     001F  284D               	goto	i1l52
   428     0020                     u1_20:
   429     0020                     i1l618:
   430                           
   431                           ;main.c: 59:         TMR1IF=0;
   432     0020  100C               	bcf	12,0	;volatile
   433                           
   434                           ;main.c: 60:   switch(State){
   435     0021  282E               	goto	i1l630
   436     0022                     i1l620:
   437                           
   438                           ;main.c: 62:     PORTB=data++;
   439     0022  0877               	movf	_data,w
   440     0023  0086               	movwf	6	;volatile
   441     0024                     i1l622:
   442     0024  3001               	movlw	1
   443     0025  00FF               	movwf	btemp+1
   444     0026  087F               	movf	btemp+1,w
   445     0027  07F7               	addwf	_data,f
   446                           
   447                           ;main.c: 63:     break;
   448     0028  283B               	goto	i1l632
   449     0029                     i1l624:
   450                           
   451                           ;main.c: 65:     PORTB=data--;
   452     0029  0877               	movf	_data,w
   453     002A  0086               	movwf	6	;volatile
   454     002B                     i1l626:
   455     002B  3001               	movlw	1
   456     002C  02F7               	subwf	_data,f
   457                           
   458                           ;main.c: 66:     break;
   459     002D  283B               	goto	i1l632
   460     002E                     i1l630:
   461     002E  0878               	movf	_State,w
   462     002F  00F0               	movwf	??_ISR
   463     0030  01F1               	clrf	??_ISR+1
   464                           
   465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   466                           ; Switch size 1, requested type "simple"
   467                           ; Number of cases is 1, Range of values is 0 to 0
   468                           ; switch strategies available:
   469                           ; Name         Instructions Cycles
   470                           ; simple_byte            4     3 (average)
   471                           ; direct_byte           11     8 (fixed)
   472                           ; jumptable            260     6 (fixed)
   473                           ;	Chosen strategy is simple_byte
   474     0031  0871               	movf	??_ISR+1,w
   475     0032  3A00               	xorlw	0	; case 0
   476     0033  1903               	skipnz
   477     0034  2836               	goto	i1l664
   478     0035  2829               	goto	i1l624
   479     0036                     i1l664:
   480                           
   481                           ; Switch size 1, requested type "simple"
   482                           ; Number of cases is 1, Range of values is 0 to 0
   483                           ; switch strategies available:
   484                           ; Name         Instructions Cycles
   485                           ; simple_byte            4     3 (average)
   486                           ; direct_byte           11     8 (fixed)
   487                           ; jumptable            260     6 (fixed)
   488                           ;	Chosen strategy is simple_byte
   489     0036  0870               	movf	??_ISR,w
   490     0037  3A00               	xorlw	0	; case 0
   491     0038  1903               	skipnz
   492     0039  2822               	goto	i1l620
   493     003A  2829               	goto	i1l624
   494     003B                     i1l632:
   495                           
   496                           ;main.c: 69:         if(data==255 || data==0){State^=1;}
   497     003B  0A77               	incf	_data,w
   498     003C  1903               	btfsc	3,2
   499     003D  283F               	goto	u2_21
   500     003E  2840               	goto	u2_20
   501     003F                     u2_21:
   502     003F  2845               	goto	i1l636
   503     0040                     u2_20:
   504     0040                     i1l634:
   505     0040  0877               	movf	_data,w
   506     0041  1D03               	btfss	3,2
   507     0042  2844               	goto	u3_21
   508     0043  2845               	goto	u3_20
   509     0044                     u3_21:
   510     0044  2849               	goto	i1l638
   511     0045                     u3_20:
   512     0045                     i1l636:
   513     0045  3001               	movlw	1
   514     0046  00FF               	movwf	btemp+1
   515     0047  087F               	movf	btemp+1,w
   516     0048  06F8               	xorwf	_State,f
   517     0049                     i1l638:
   518                           
   519                           ;main.c: 70:         TMR1=65400;
   520     0049  30FF               	movlw	255
   521     004A  008F               	movwf	15	;volatile
   522     004B  3078               	movlw	120
   523     004C  008E               	movwf	14	;volatile
   524     004D                     i1l52:
   525     004D  0875               	movf	??_ISR+5,w
   526     004E  00FF               	movwf	btemp+1
   527     004F  0874               	movf	??_ISR+4,w
   528     0050  008A               	movwf	10
   529     0051  0873               	movf	??_ISR+3,w
   530     0052  0084               	movwf	4
   531     0053  0E72               	swapf	??_ISR+2,w
   532     0054  0083               	movwf	3
   533     0055  0EFE               	swapf	btemp,f
   534     0056  0E7E               	swapf	btemp,w
   535     0057  0009               	retfie
   536     0058                     __end_of_ISR:
   537     007E                     btemp	set	126	;btemp
   538     007E                     wtemp0	set	126
   539                           
   540                           	psect	intentry
   541     0004                     __pintentry:	
   542                           ;incstack = 0
   543                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
   544                           
   545     0004                     interrupt_function:
   546     007E                     saved_w	set	btemp
   547     0004  00FE               	movwf	btemp
   548     0005  0E03               	swapf	3,w
   549     0006  00F2               	movwf	??_ISR+2
   550     0007  0804               	movf	4,w
   551     0008  00F3               	movwf	??_ISR+3
   552     0009  080A               	movf	10,w
   553     000A  00F4               	movwf	??_ISR+4
   554     000B  087F               	movf	btemp+1,w
   555     000C  00F5               	movwf	??_ISR+5
   556     000D  120A  118A  281A   	ljmp	_ISR
   557                           
   558                           	psect	config
   559                           
   560                           ;Config register CONFIG @ 0x2007
   561                           ;	Oscillator Selection bits
   562                           ;	FOSC = XT, XT oscillator
   563                           ;	Watchdog Timer Enable bit
   564                           ;	WDTE = OFF, WDT disabled
   565                           ;	Power-up Timer Enable bit
   566                           ;	PWRTE = ON, PWRT enabled
   567                           ;	Brown-out Reset Enable bit
   568                           ;	BOREN = ON, BOR enabled
   569                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   570                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   571                           ;	Data EEPROM Memory Code Protection bit
   572                           ;	CPD = OFF, Data EEPROM code protection off
   573                           ;	Flash Program Memory Write Enable bits
   574                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   575                           ;	In-Circuit Debugger Mode bit
   576                           ;	DEBUG = 0x1, unprogrammed default
   577                           ;	Flash Program Memory Code Protection bit
   578                           ;	CP = OFF, Code protection off
   579     2007                     	org	8199
   580     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 23 17:24:49 2024

                     l31 006E                       l36 007A                       l37 007A  
                    l600 0061                      l610 006A                      l602 0062  
                    l604 0065                      l612 006F                      l606 0068  
                    l614 0075                      l608 0069                      l596 0058  
                    l598 005D                      _GIE 005F                      _ISR 001A  
                    fsr0 0004                     ?_ISR 0070                     _PEIE 005E  
                   i1l52 004D                     _TMR1 000E                     u1_20 0020  
                   u1_21 001F                     u2_20 0040                     u2_21 003F  
                   u3_20 0045                     u3_21 0044                     _data 0077  
                   _main 006F                     btemp 007E                     start 0010  
                  ??_ISR 0070                    ?_main 0070                    _T1CON 0010  
                  i1l620 0022                    i1l622 0024                    i1l630 002E  
                  i1l624 0029                    i1l632 003B                    i1l616 001A  
                  i1l634 0040                    i1l626 002B                    i1l618 0020  
                  i1l636 0045                    i1l638 0049                    i1l664 0036  
                  _PORTB 0006                    _TRISB 0086                    _State 0078  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0013             __end_of_main 007E                   ??_main 0076  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1CS 0081  
                 _TMR1ON 0080            ??_Timer1_Init 0076                   saved_w 007E  
__end_of__initialization 0016           __pcstackCOMMON 0070      __end_of_Timer1_Init 006F  
             __pmaintext 006F               __pintentry 0004                  _T1OSCEN 0083  
            _Timer1_Init 0058                  __ptext1 0058                  __ptext2 001A  
                _counter 0076     end_of_initialization 0016      start_initialization 0013  
            __end_of_ISR 0058              __pbssCOMMON 0076                ___latbits 0002  
           ?_Timer1_Init 0070        interrupt_function 0004                 intlevel1 0000  
