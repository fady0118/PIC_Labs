

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 21 19:36:52 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000E                     _TMR1	set	14
   169     0006                     _PORTB	set	6
   170     0010                     _T1CON	set	16
   171     005F                     _GIE	set	95
   172     005E                     _PEIE	set	94
   173     0060                     _TMR1IF	set	96
   174     0083                     _T1OSCEN	set	131
   175     0081                     _TMR1CS	set	129
   176     0080                     _TMR1ON	set	128
   177     0086                     _TRISB	set	134
   178     0460                     _TMR1IE	set	1120
   179                           
   180                           	psect	cinit
   181     0011                     start_initialization:	
   182                           ; #config settings
   183                           
   184     0011                     __initialization:
   185                           
   186                           ; Clear objects allocated to COMMON
   187     0011  01F0               	clrf	__pbssCOMMON& (0+127)
   188     0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   189     0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   190     0014                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     0014                     __end_of__initialization:
   194     0014  0183               	clrf	3
   195     0015  120A  118A  2861   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198     0070                     __pbssCOMMON:
   199     0070                     _counter:
   200     0070                     	ds	1
   201     0071                     _data:
   202     0071                     	ds	1
   203     0072                     _State:
   204     0072                     	ds	1
   205                           
   206                           	psect	cstackCOMMON
   207     0073                     __pcstackCOMMON:
   208     0073                     ?_Timer1_Init:
   209     0073                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0073                     ?_ISR:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0073                     ??_ISR:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 1 bytes @ 0x0
   220     0073                     	ds	3
   221     0076                     ??_Timer1_Init:
   222     0076                     ??_main:	
   223                           ; 1 bytes @ 0x3
   224                           
   225                           
   226                           	psect	maintext
   227     0061                     __pmaintext:	
   228                           ; 1 bytes @ 0x3
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 38 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called: 2
   254 ;; This function calls:
   255 ;;		_Timer1_Init
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261     0061                     _main:	
   262                           ;psect for function _main
   263                           
   264     0061                     l610:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   267                           
   268                           
   269                           ;main.c: 39:     TRISB = 0x00;
   270     0061  1683               	bsf	3,5	;RP0=1, select bank1
   271     0062  1303               	bcf	3,6	;RP1=0, select bank1
   272     0063  0186               	clrf	6	;volatile
   273                           
   274                           ;main.c: 40:     PORTB = 0x00;
   275     0064  1283               	bcf	3,5	;RP0=0, select bank0
   276     0065  1303               	bcf	3,6	;RP1=0, select bank0
   277     0066  0186               	clrf	6	;volatile
   278     0067                     l612:
   279                           
   280                           ;main.c: 41:     Timer1_Init();
   281     0067  120A  118A  204A  120A  118A  	fcall	_Timer1_Init
   282     006C                     l36:	
   283                           ;main.c: 42:     while(1){
   284                           
   285     006C                     l37:	
   286                           ;main.c: 44:     }
   287                           
   288     006C  286C               	goto	l36
   289     006D  120A  118A  280E   	ljmp	start
   290     0070                     __end_of_main:
   291                           
   292                           	psect	text1
   293     004A                     __ptext1:	
   294 ;; *************** function _Timer1_Init *****************
   295 ;; Defined at:
   296 ;;		line 25 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, btemp+1
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; Hardware stack levels required when called: 1
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     004A                     _Timer1_Init:	
   325                           ;psect for function _Timer1_Init
   326                           
   327     004A                     l594:	
   328                           ;incstack = 0
   329                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0+btemp+1]
   330                           
   331                           
   332                           ;main.c: 26: TMR1ON=0;
   333     004A  1283               	bcf	3,5	;RP0=0, select bank0
   334     004B  1303               	bcf	3,6	;RP1=0, select bank0
   335     004C  1010               	bcf	16,0	;volatile
   336                           
   337                           ;main.c: 27: TMR1CS=0;
   338     004D  1090               	bcf	16,1	;volatile
   339                           
   340                           ;main.c: 28: T1OSCEN=1;
   341     004E  1590               	bsf	16,3	;volatile
   342     004F                     l596:
   343                           
   344                           ;main.c: 29: T1CON&=~0x30;
   345     004F  30CF               	movlw	207
   346     0050  00FF               	movwf	btemp+1
   347     0051  087F               	movf	btemp+1,w
   348     0052  0590               	andwf	16,f	;volatile
   349     0053                     l598:
   350                           
   351                           ;main.c: 30: TMR1ON=1;
   352     0053  1410               	bsf	16,0	;volatile
   353     0054                     l600:
   354                           
   355                           ;main.c: 31: TMR1IE=1;
   356     0054  1683               	bsf	3,5	;RP0=1, select bank1
   357     0055  1303               	bcf	3,6	;RP1=0, select bank1
   358     0056  140C               	bsf	12,0	;volatile
   359     0057                     l602:
   360                           
   361                           ;main.c: 32: TMR1IF = 0;
   362     0057  1283               	bcf	3,5	;RP0=0, select bank0
   363     0058  1303               	bcf	3,6	;RP1=0, select bank0
   364     0059  100C               	bcf	12,0	;volatile
   365     005A                     l604:
   366                           
   367                           ;main.c: 33: PEIE = 1;
   368     005A  170B               	bsf	11,6	;volatile
   369     005B                     l606:
   370                           
   371                           ;main.c: 34: GIE = 1;
   372     005B  178B               	bsf	11,7	;volatile
   373     005C                     l608:
   374                           
   375                           ;main.c: 35: TMR1=65388;
   376     005C  30FF               	movlw	255
   377     005D  008F               	movwf	15	;volatile
   378     005E  306C               	movlw	108
   379     005F  008E               	movwf	14	;volatile
   380     0060                     l31:
   381     0060  0008               	return
   382     0061                     __end_of_Timer1_Init:
   383                           
   384                           	psect	text2
   385     0018                     __ptext2:	
   386 ;; *************** function _ISR *****************
   387 ;; Defined at:
   388 ;;		line 57 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, btemp+1
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          3       0       0       0       0
   405 ;;      Totals:         3       0       0       0       0
   406 ;;Total ram usage:        3 bytes
   407 ;; Hardware stack levels used: 1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		Interrupt level 1
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415     0018                     _ISR:	
   416                           ;psect for function _ISR
   417                           
   418     0018                     i1l614:
   419                           
   420                           ;main.c: 58:     if(TMR1IF){
   421     0018  1283               	bcf	3,5	;RP0=0, select bank0
   422     0019  1303               	bcf	3,6	;RP1=0, select bank0
   423     001A  1C0C               	btfss	12,0	;volatile
   424     001B  281D               	goto	u1_21
   425     001C  281E               	goto	u1_20
   426     001D                     u1_21:
   427     001D  2841               	goto	i1l50
   428     001E                     u1_20:
   429     001E                     i1l616:
   430                           
   431                           ;main.c: 59:         TMR1IF=0;
   432     001E  100C               	bcf	12,0	;volatile
   433     001F                     i1l618:
   434                           
   435                           ;main.c: 61:         if(State==0){
   436     001F  0872               	movf	_State,w
   437     0020  1D03               	btfss	3,2
   438     0021  2823               	goto	u2_21
   439     0022  2824               	goto	u2_20
   440     0023                     u2_21:
   441     0023  282B               	goto	i1l624
   442     0024                     u2_20:
   443     0024                     i1l620:
   444                           
   445                           ;main.c: 62:             PORTB=data++;
   446     0024  0871               	movf	_data,w
   447     0025  0086               	movwf	6	;volatile
   448     0026                     i1l622:
   449     0026  3001               	movlw	1
   450     0027  00FF               	movwf	btemp+1
   451     0028  087F               	movf	btemp+1,w
   452     0029  07F1               	addwf	_data,f
   453                           
   454                           ;main.c: 63:         }
   455     002A  282F               	goto	i1l628
   456     002B                     i1l624:
   457                           
   458                           ;main.c: 65:             PORTB=data--;
   459     002B  0871               	movf	_data,w
   460     002C  0086               	movwf	6	;volatile
   461     002D                     i1l626:
   462     002D  3001               	movlw	1
   463     002E  02F1               	subwf	_data,f
   464     002F                     i1l628:
   465                           
   466                           ;main.c: 67:         if(data==255 || data==0){State^=1;}
   467     002F  0A71               	incf	_data,w
   468     0030  1903               	btfsc	3,2
   469     0031  2833               	goto	u3_21
   470     0032  2834               	goto	u3_20
   471     0033                     u3_21:
   472     0033  2839               	goto	i1l632
   473     0034                     u3_20:
   474     0034                     i1l630:
   475     0034  0871               	movf	_data,w
   476     0035  1D03               	btfss	3,2
   477     0036  2838               	goto	u4_21
   478     0037  2839               	goto	u4_20
   479     0038                     u4_21:
   480     0038  283D               	goto	i1l634
   481     0039                     u4_20:
   482     0039                     i1l632:
   483     0039  3001               	movlw	1
   484     003A  00FF               	movwf	btemp+1
   485     003B  087F               	movf	btemp+1,w
   486     003C  06F2               	xorwf	_State,f
   487     003D                     i1l634:
   488                           
   489                           ;main.c: 68:         TMR1=65388;
   490     003D  30FF               	movlw	255
   491     003E  008F               	movwf	15	;volatile
   492     003F  306C               	movlw	108
   493     0040  008E               	movwf	14	;volatile
   494     0041                     i1l50:
   495     0041  0875               	movf	??_ISR+2,w
   496     0042  00FF               	movwf	btemp+1
   497     0043  0874               	movf	??_ISR+1,w
   498     0044  008A               	movwf	10
   499     0045  0E73               	swapf	??_ISR,w
   500     0046  0083               	movwf	3
   501     0047  0EFE               	swapf	btemp,f
   502     0048  0E7E               	swapf	btemp,w
   503     0049  0009               	retfie
   504     004A                     __end_of_ISR:
   505     007E                     btemp	set	126	;btemp
   506     007E                     wtemp0	set	126
   507                           
   508                           	psect	intentry
   509     0004                     __pintentry:	
   510                           ;incstack = 0
   511                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   512                           
   513     0004                     interrupt_function:
   514     007E                     saved_w	set	btemp
   515     0004  00FE               	movwf	btemp
   516     0005  0E03               	swapf	3,w
   517     0006  00F3               	movwf	??_ISR
   518     0007  080A               	movf	10,w
   519     0008  00F4               	movwf	??_ISR+1
   520     0009  087F               	movf	btemp+1,w
   521     000A  00F5               	movwf	??_ISR+2
   522     000B  120A  118A  2818   	ljmp	_ISR
   523                           
   524                           	psect	config
   525                           
   526                           ;Config register CONFIG @ 0x2007
   527                           ;	Oscillator Selection bits
   528                           ;	FOSC = XT, XT oscillator
   529                           ;	Watchdog Timer Enable bit
   530                           ;	WDTE = OFF, WDT disabled
   531                           ;	Power-up Timer Enable bit
   532                           ;	PWRTE = ON, PWRT enabled
   533                           ;	Brown-out Reset Enable bit
   534                           ;	BOREN = ON, BOR enabled
   535                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   536                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   537                           ;	Data EEPROM Memory Code Protection bit
   538                           ;	CPD = OFF, Data EEPROM code protection off
   539                           ;	Flash Program Memory Write Enable bits
   540                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   541                           ;	In-Circuit Debugger Mode bit
   542                           ;	DEBUG = 0x1, unprogrammed default
   543                           ;	Flash Program Memory Code Protection bit
   544                           ;	CP = OFF, Code protection off
   545     2007                     	org	8199
   546     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 21 19:36:52 2024

                     l31 0060                       l36 006C                       l37 006C  
                    l600 0054                      l602 0057                      l610 0061  
                    l604 005A                      l612 0067                      l606 005B  
                    l608 005C                      l594 004A                      l596 004F  
                    l598 0053                      _GIE 005F                      _ISR 0018  
                   ?_ISR 0073                     _PEIE 005E                     i1l50 0041  
                   _TMR1 000E                     u1_20 001E                     u1_21 001D  
                   u2_20 0024                     u2_21 0023                     u3_20 0034  
                   u3_21 0033                     u4_20 0039                     u4_21 0038  
                   _data 0071                     _main 0061                     btemp 007E  
                   start 000E                    ??_ISR 0073                    ?_main 0073  
                  _T1CON 0010                    i1l620 0024                    i1l630 0034  
                  i1l622 0026                    i1l614 0018                    i1l632 0039  
                  i1l624 002B                    i1l616 001E                    i1l634 003D  
                  i1l626 002D                    i1l618 001F                    i1l628 002F  
                  _PORTB 0006                    _TRISB 0086                    _State 0072  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0070                   ??_main 0076  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1CS 0081  
                 _TMR1ON 0080            ??_Timer1_Init 0076                   saved_w 007E  
__end_of__initialization 0014           __pcstackCOMMON 0073      __end_of_Timer1_Init 0061  
             __pmaintext 0061               __pintentry 0004                  _T1OSCEN 0083  
            _Timer1_Init 004A                  __ptext1 004A                  __ptext2 0018  
                _counter 0070     end_of_initialization 0014      start_initialization 0011  
            __end_of_ISR 004A              __pbssCOMMON 0070                ___latbits 0002  
           ?_Timer1_Init 0073        interrupt_function 0004                 intlevel1 0000  
