

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jun 01 18:45:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0013                     _SSPBUF	set	19
   171     0014                     _SSPCON	set	20
   172     0007                     _PORTC	set	7
   173     003D                     _RC5	set	61
   174     0093                     _SSPADD	set	147
   175     0094                     _SSPSTAT	set	148
   176     0091                     _SSPCON2	set	145
   177     0087                     _TRISC	set	135
   178     048E                     _ACKSTAT	set	1166
   179     048C                     _ACKEN	set	1164
   180     048D                     _ACKDT	set	1165
   181     0489                     _RSEN	set	1161
   182     048A                     _PEN	set	1162
   183     0488                     _SEN	set	1160
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2FC1   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_I2C_Master_init:
   200     0070                     ??_I2C_Master_init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_I2C_Start:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ??_I2C_Start:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_I2C_Write:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_I2C_Write:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?_I2C_Stop:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ??_I2C_Stop:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ?_port_init:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ??_port_init:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_main:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_I2C_Wait:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ??_I2C_Wait:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     I2C_Write@Data:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241     0070                     	ds	1
   242     0071                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x1
   245     0071                     	ds	3
   246     0074                     main@i:
   247                           
   248                           ; 1 bytes @ 0x4
   249     0074                     	ds	1
   250                           
   251                           	psect	maintext
   252     07C1                     __pmaintext:	
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 33 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  i               1    4[COMMON] unsigned char 
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         0       0       0       0       0
   273 ;;      Locals:         1       0       0       0       0
   274 ;;      Temps:          3       0       0       0       0
   275 ;;      Totals:         4       0       0       0       0
   276 ;;Total ram usage:        4 bytes
   277 ;; Hardware stack levels required when called: 2
   278 ;; This function calls:
   279 ;;		_I2C_Master_init
   280 ;;		_I2C_Start
   281 ;;		_I2C_Stop
   282 ;;		_I2C_Write
   283 ;;		_port_init
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289     07C1                     _main:	
   290                           ;psect for function _main
   291                           
   292     07C1                     l656:	
   293                           ;incstack = 0
   294                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   295                           
   296                           
   297                           ;main.c: 34:     port_init();
   298     07C1  120A  118A  278B  120A  118A  	fcall	_port_init
   299                           
   300                           ;main.c: 35:     I2C_Master_init();
   301     07C6  120A  118A  27A2  120A  118A  	fcall	_I2C_Master_init
   302     07CB                     l658:
   303                           
   304                           ;main.c: 36:     unsigned char i=1;
   305     07CB  01F4               	clrf	main@i
   306     07CC  0AF4               	incf	main@i,f
   307     07CD                     l660:
   308                           
   309                           ;main.c: 38:     I2C_Start();
   310     07CD  120A  118A  2779  120A  118A  	fcall	_I2C_Start
   311     07D2                     l662:
   312                           
   313                           ;main.c: 39:     I2C_Write(0x40);
   314     07D2  3040               	movlw	64
   315     07D3  120A  118A  27B1  120A  118A  	fcall	_I2C_Write
   316     07D8                     l664:
   317                           
   318                           ;main.c: 40:     I2C_Write(i++);
   319     07D8  0874               	movf	main@i,w
   320     07D9  120A  118A  27B1  120A  118A  	fcall	_I2C_Write
   321     07DE                     l666:
   322     07DE  3001               	movlw	1
   323     07DF  00FF               	movwf	btemp+1
   324     07E0  087F               	movf	btemp+1,w
   325     07E1  07F4               	addwf	main@i,f
   326     07E2                     l668:
   327                           
   328                           ;main.c: 41:     I2C_Stop();
   329     07E2  120A  118A  2782  120A  118A  	fcall	_I2C_Stop
   330     07E7                     l670:
   331                           
   332                           ;main.c: 42:     _delay((unsigned long)((500)*(4000000/4000.0)));
   333     07E7  3003               	movlw	3
   334     07E8  00F3               	movwf	??_main+2
   335     07E9  308A               	movlw	138
   336     07EA  00F2               	movwf	??_main+1
   337     07EB  3055               	movlw	85
   338     07EC  00F1               	movwf	??_main
   339     07ED                     u37:
   340     07ED  0BF1               	decfsz	??_main,f
   341     07EE  2FED               	goto	u37
   342     07EF  0BF2               	decfsz	??_main+1,f
   343     07F0  2FED               	goto	u37
   344     07F1  0BF3               	decfsz	??_main+2,f
   345     07F2  2FED               	goto	u37
   346     07F3  2FF4               	nop2
   347     07F4                     l672:
   348                           
   349                           ;main.c: 43:     RC5^=1;
   350     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   351     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   352     07F6  3020               	movlw	32
   353     07F7  0687               	xorwf	7,f
   354     07F8  2FCD               	goto	l660
   355     07F9  120A  118A  2800   	ljmp	start
   356     07FC                     __end_of_main:
   357                           
   358                           	psect	text1
   359     078B                     __ptext1:	
   360 ;; *************** function _port_init *****************
   361 ;; Defined at:
   362 ;;		line 27 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0, btemp+1
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389     078B                     _port_init:	
   390                           ;psect for function _port_init
   391                           
   392     078B                     l624:	
   393                           ;incstack = 0
   394                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   395                           
   396                           
   397                           ;main.c: 28: TRISC&=~0x20;
   398     078B  30DF               	movlw	223
   399     078C  00FF               	movwf	btemp+1
   400     078D  087F               	movf	btemp+1,w
   401     078E  1683               	bsf	3,5	;RP0=1, select bank1
   402     078F  1303               	bcf	3,6	;RP1=0, select bank1
   403     0790  0587               	andwf	7,f	;volatile
   404     0791                     l626:
   405                           
   406                           ;main.c: 29: PORTC=0;
   407     0791  1283               	bcf	3,5	;RP0=0, select bank0
   408     0792  1303               	bcf	3,6	;RP1=0, select bank0
   409     0793  0187               	clrf	7	;volatile
   410     0794                     l41:
   411     0794  0008               	return
   412     0795                     __end_of_port_init:
   413                           
   414                           	psect	text2
   415     07B1                     __ptext2:	
   416 ;; *************** function _I2C_Write *****************
   417 ;; Defined at:
   418 ;;		line 99 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  Data            1    wreg     unsigned char 
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  Data            1    0[COMMON] unsigned char 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      unsigned char 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         1       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0
   435 ;;      Totals:         1       0       0       0       0
   436 ;;Total ram usage:        1 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; Hardware stack levels required when called: 1
   439 ;; This function calls:
   440 ;;		_I2C_Wait
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446     07B1                     _I2C_Write:	
   447                           ;psect for function _I2C_Write
   448                           
   449                           
   450                           ;incstack = 0
   451                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   452                           ;I2C_Write@Data stored from wreg
   453     07B1  00F0               	movwf	I2C_Write@Data
   454     07B2                     l642:
   455                           
   456                           ;main.c: 101:   I2C_Wait();
   457     07B2  120A  118A  2795  120A  118A  	fcall	_I2C_Wait
   458     07B7                     l644:
   459                           
   460                           ;main.c: 102:   SSPBUF = Data;
   461     07B7  0870               	movf	I2C_Write@Data,w
   462     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   463     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   464     07BA  0093               	movwf	19	;volatile
   465     07BB                     l646:
   466                           
   467                           ;main.c: 103:   I2C_Wait();
   468     07BB  120A  118A  2795  120A  118A  	fcall	_I2C_Wait
   469     07C0                     l648:
   470     07C0                     l76:	
   471                           ;main.c: 104:   return ACKSTAT;;	Return value of _I2C_Write is never used
   472                           
   473     07C0  0008               	return
   474     07C1                     __end_of_I2C_Write:
   475                           
   476                           	psect	text3
   477     0782                     __ptext3:	
   478 ;; *************** function _I2C_Stop *****************
   479 ;; Defined at:
   480 ;;		line 73 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 1
   501 ;; This function calls:
   502 ;;		_I2C_Wait
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     0782                     _I2C_Stop:	
   509                           ;psect for function _I2C_Stop
   510                           
   511     0782                     l652:	
   512                           ;incstack = 0
   513                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;main.c: 75:     I2C_Wait();
   517     0782  120A  118A  2795  120A  118A  	fcall	_I2C_Wait
   518     0787                     l654:
   519                           
   520                           ;main.c: 76:     PEN=1;
   521     0787  1683               	bsf	3,5	;RP0=1, select bank1
   522     0788  1303               	bcf	3,6	;RP1=0, select bank1
   523     0789  1511               	bsf	17,2	;volatile
   524     078A                     l64:
   525     078A  0008               	return
   526     078B                     __end_of_I2C_Stop:
   527                           
   528                           	psect	text4
   529     0779                     __ptext4:	
   530 ;; *************** function _I2C_Start *****************
   531 ;; Defined at:
   532 ;;		line 67 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 1
   553 ;; This function calls:
   554 ;;		_I2C_Wait
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560     0779                     _I2C_Start:	
   561                           ;psect for function _I2C_Start
   562                           
   563     0779                     l638:	
   564                           ;incstack = 0
   565                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   566                           
   567                           
   568                           ;main.c: 69:     I2C_Wait();
   569     0779  120A  118A  2795  120A  118A  	fcall	_I2C_Wait
   570     077E                     l640:
   571                           
   572                           ;main.c: 70:     SEN=1;
   573     077E  1683               	bsf	3,5	;RP0=1, select bank1
   574     077F  1303               	bcf	3,6	;RP1=0, select bank1
   575     0780  1411               	bsf	17,0	;volatile
   576     0781                     l61:
   577     0781  0008               	return
   578     0782                     __end_of_I2C_Start:
   579                           
   580                           	psect	text5
   581     0795                     __ptext5:	
   582 ;; *************** function _I2C_Wait *****************
   583 ;; Defined at:
   584 ;;		line 63 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_I2C_Start
   608 ;;		_I2C_Stop
   609 ;;		_I2C_Write
   610 ;;		_I2C_Restart
   611 ;;		_I2C_ACK
   612 ;;		_I2C_NACK
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616     0795                     _I2C_Wait:	
   617                           ;psect for function _I2C_Wait
   618                           
   619     0795                     l620:	
   620                           ;incstack = 0
   621                           ; Regs used in _I2C_Wait: [wreg+status,2]
   622                           
   623     0795                     l55:	
   624                           ;main.c: 64:     while( (SSPSTAT & 0x04) || (SSPCON2 & 0x1F) );
   625                           
   626     0795  1683               	bsf	3,5	;RP0=1, select bank1
   627     0796  1303               	bcf	3,6	;RP1=0, select bank1
   628     0797  1914               	btfsc	20,2	;volatile
   629     0798  2F9A               	goto	u11
   630     0799  2F9B               	goto	u10
   631     079A                     u11:
   632     079A  2F95               	goto	l55
   633     079B                     u10:
   634     079B                     l622:
   635     079B  0811               	movf	17,w	;volatile
   636     079C  391F               	andlw	31
   637     079D  1D03               	btfss	3,2
   638     079E  2FA0               	goto	u21
   639     079F  2FA1               	goto	u20
   640     07A0                     u21:
   641     07A0  2F95               	goto	l55
   642     07A1                     u20:
   643     07A1                     l58:
   644     07A1  0008               	return
   645     07A2                     __end_of_I2C_Wait:
   646                           
   647                           	psect	text6
   648     07A2                     __ptext6:	
   649 ;; *************** function _I2C_Master_init *****************
   650 ;; Defined at:
   651 ;;		line 50 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0, btemp+1
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678     07A2                     _I2C_Master_init:	
   679                           ;psect for function _I2C_Master_init
   680                           
   681     07A2                     l628:	
   682                           ;incstack = 0
   683                           ; Regs used in _I2C_Master_init: [wreg+status,2+status,0+btemp+1]
   684                           
   685                           
   686                           ;main.c: 51:     SSPCON=0x28;
   687     07A2  3028               	movlw	40
   688     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   689     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   690     07A5  0094               	movwf	20	;volatile
   691     07A6                     l630:
   692                           
   693                           ;main.c: 54:     TRISC|=0x18;
   694     07A6  3018               	movlw	24
   695     07A7  00FF               	movwf	btemp+1
   696     07A8  087F               	movf	btemp+1,w
   697     07A9  1683               	bsf	3,5	;RP0=1, select bank1
   698     07AA  1303               	bcf	3,6	;RP1=0, select bank1
   699     07AB  0487               	iorwf	7,f	;volatile
   700     07AC                     l632:
   701                           
   702                           ;main.c: 55:     SSPCON2=0;
   703     07AC  0191               	clrf	17	;volatile
   704     07AD                     l634:
   705                           
   706                           ;main.c: 56:     SSPSTAT=0;
   707     07AD  0194               	clrf	20	;volatile
   708     07AE                     l636:
   709                           
   710                           ;main.c: 57:     SSPADD=(4000000/(4*100000)) - 1;
   711     07AE  3009               	movlw	9
   712     07AF  0093               	movwf	19	;volatile
   713     07B0                     l52:
   714     07B0  0008               	return
   715     07B1                     __end_of_I2C_Master_init:
   716     007E                     btemp	set	126	;btemp
   717     007E                     wtemp0	set	126
   718                           
   719                           	psect	config
   720                           
   721                           ;Config register CONFIG @ 0x2007
   722                           ;	Oscillator Selection bits
   723                           ;	FOSC = XT, XT oscillator
   724                           ;	Watchdog Timer Enable bit
   725                           ;	WDTE = OFF, WDT disabled
   726                           ;	Power-up Timer Enable bit
   727                           ;	PWRTE = ON, PWRT enabled
   728                           ;	Brown-out Reset Enable bit
   729                           ;	BOREN = ON, BOR enabled
   730                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   731                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   732                           ;	Data EEPROM Memory Code Protection bit
   733                           ;	CPD = OFF, Data EEPROM code protection off
   734                           ;	Flash Program Memory Write Enable bits
   735                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   736                           ;	In-Circuit Debugger Mode bit
   737                           ;	DEBUG = 0x1, unprogrammed default
   738                           ;	Flash Program Memory Code Protection bit
   739                           ;	CP = OFF, Code protection off
   740     2007                     	org	8199
   741     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              1 COMMON     4     4      0
                    _I2C_Master_init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_init
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _I2C_Write
     _I2C_Wait
   _port_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jun 01 18:45:33 2024

                     l41 0794                       l52 07B0                       l61 0781  
                     l55 0795                       l64 078A                       l58 07A1  
                     l76 07C0                       u10 079B                       u11 079A  
                     u20 07A1                       u21 07A0                       u37 07ED  
                    l620 0795                      l630 07A6                      l622 079B  
                    l632 07AC                      l640 077E                      l624 078B  
                    l634 07AD                      l642 07B2                      l626 0791  
                    l636 07AE                      l628 07A2                      l652 0782  
                    l644 07B7                      l660 07CD                      l638 0779  
                    l654 0787                      l646 07BB                      l670 07E7  
                    l662 07D2                      l648 07C0                      l672 07F4  
                    l664 07D8                      l656 07C1                      l666 07DE  
                    l658 07CB                      l668 07E2                      _RC5 003D  
                    _PEN 048A                      _SEN 0488                     _RSEN 0489  
                   _main 07C1                     btemp 007E         __end_of_I2C_Wait 07A2  
       __end_of_I2C_Stop 078B                     start 0000         ?_I2C_Master_init 0070  
                  ?_main 0070                    _ACKEN 048C                    _ACKDT 048D  
                  _PORTC 0007                    _TRISC 0087                    main@i 0074  
      __end_of_I2C_Start 0782        __end_of_I2C_Write 07C1                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013                ?_I2C_Wait 0070                ?_I2C_Stop 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_I2C_Wait 0070  
             ??_I2C_Stop 0070               __pmaintext 07C1                  _ACKSTAT 048E  
                _SSPCON2 0091                  _SSPSTAT 0094                _I2C_Start 0779  
              _I2C_Write 07B1                  __ptext1 078B                  __ptext2 07B1  
                __ptext3 0782                  __ptext4 0779                  __ptext5 0795  
                __ptext6 07A2     end_of_initialization 07FC               ?_I2C_Start 0070  
             ?_I2C_Write 0070        __end_of_port_init 0795      start_initialization 07FC  
      ??_I2C_Master_init 0070              ??_I2C_Start 0070              ??_I2C_Write 0070  
              ___latbits 0002                 _I2C_Wait 0795                 _I2C_Stop 0782  
              _port_init 078B            I2C_Write@Data 0070               ?_port_init 0070  
        _I2C_Master_init 07A2              ??_port_init 0070  __end_of_I2C_Master_init 07B1  
