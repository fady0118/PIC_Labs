

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jun 01 18:48:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0013                     _SSPBUF	set	19
   170     0014                     _SSPCON	set	20
   171     0008                     _PORTD	set	8
   172     00A4                     _CKP	set	164
   173     0063                     _SSPIF	set	99
   174     005F                     _GIE	set	95
   175     005E                     _PEIE	set	94
   176     0093                     _SSPADD	set	147
   177     0087                     _TRISC	set	135
   178     0088                     _TRISD	set	136
   179     04A0                     _BF	set	1184
   180     04A2                     _R_nW	set	1186
   181     0463                     _SSPIE	set	1123
   182     0488                     _SEN	set	1160
   183     04A7                     _SMP	set	1191
   184                           
   185                           	psect	cinit
   186     000F                     start_initialization:	
   187                           ; #config settings
   188                           
   189     000F                     __initialization:
   190                           
   191                           ; Clear objects allocated to COMMON
   192     000F  01F3               	clrf	__pbssCOMMON& (0+127)
   193     0010                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     0010                     __end_of__initialization:
   197     0010  0183               	clrf	3
   198     0011  120A  118A  2854   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201     0073                     __pbssCOMMON:
   202     0073                     _RX_Data:
   203     0073                     	ds	1
   204                           
   205                           	psect	cstackCOMMON
   206     0070                     __pcstackCOMMON:
   207     0070                     ?_I2C_Slave_init:
   208     0070                     ?_port_init:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_ISR:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ??_ISR:	
   218                           ; 1 bytes @ 0x0
   219                           
   220                           
   221                           ; 1 bytes @ 0x0
   222     0070                     	ds	2
   223     0072                     ??_I2C_Slave_init:
   224     0072                     ??_port_init:	
   225                           ; 1 bytes @ 0x2
   226                           
   227     0072                     I2C_Slave_init@Address:	
   228                           ; 1 bytes @ 0x2
   229                           
   230                           
   231                           ; 1 bytes @ 0x2
   232     0072                     	ds	1
   233     0073                     ??_main:
   234                           
   235                           	psect	maintext
   236     0054                     __pmaintext:	
   237                           ; 1 bytes @ 0x3
   238 ;;
   239 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   240 ;;
   241 ;; *************** function _main *****************
   242 ;; Defined at:
   243 ;;		line 25 in file "main.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : B00/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   257 ;;      Params:         0       0       0       0       0
   258 ;;      Locals:         0       0       0       0       0
   259 ;;      Temps:          0       0       0       0       0
   260 ;;      Totals:         0       0       0       0       0
   261 ;;Total ram usage:        0 bytes
   262 ;; Hardware stack levels required when called: 2
   263 ;; This function calls:
   264 ;;		_I2C_Slave_init
   265 ;;		_port_init
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271     0054                     _main:	
   272                           ;psect for function _main
   273                           
   274     0054                     l620:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   277                           
   278                           
   279                           ;main.c: 26:     port_init();
   280     0054  120A  118A  2063  120A  118A  	fcall	_port_init
   281     0059                     l622:
   282                           
   283                           ;main.c: 27:     I2C_Slave_init(0x40);
   284     0059  3040               	movlw	64
   285     005A  120A  118A  203A  120A  118A  	fcall	_I2C_Slave_init
   286     005F                     l42:	
   287                           ;main.c: 28:     while(1){
   288                           
   289     005F                     l43:	
   290                           ;main.c: 30:     }
   291                           
   292     005F  285F               	goto	l42
   293     0060  120A  118A  280C   	ljmp	start
   294     0063                     __end_of_main:
   295                           
   296                           	psect	text1
   297     0063                     __ptext1:	
   298 ;; *************** function _port_init *****************
   299 ;; Defined at:
   300 ;;		line 19 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		status,2
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; Hardware stack levels required when called: 1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328     0063                     _port_init:	
   329                           ;psect for function _port_init
   330                           
   331     0063                     l602:	
   332                           ;incstack = 0
   333                           ; Regs used in _port_init: [status,2]
   334                           
   335                           
   336                           ;main.c: 20: TRISD&=~0xFF;
   337     0063  1683               	bsf	3,5	;RP0=1, select bank1
   338     0064  1303               	bcf	3,6	;RP1=0, select bank1
   339     0065  0188               	clrf	8	;volatile
   340                           
   341                           ;main.c: 21: PORTD=0;
   342     0066  1283               	bcf	3,5	;RP0=0, select bank0
   343     0067  1303               	bcf	3,6	;RP1=0, select bank0
   344     0068  0188               	clrf	8	;volatile
   345     0069                     l37:
   346     0069  0008               	return
   347     006A                     __end_of_port_init:
   348                           
   349                           	psect	text2
   350     003A                     __ptext2:	
   351 ;; *************** function _I2C_Slave_init *****************
   352 ;; Defined at:
   353 ;;		line 34 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;  Address         1    wreg     unsigned char 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  Address         1    2[COMMON] unsigned char 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0, btemp+1
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         1       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0
   370 ;;      Totals:         1       0       0       0       0
   371 ;;Total ram usage:        1 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; Hardware stack levels required when called: 1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381     003A                     _I2C_Slave_init:	
   382                           ;psect for function _I2C_Slave_init
   383                           
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _I2C_Slave_init: [wreg+status,2+status,0+btemp+1]
   387                           ;I2C_Slave_init@Address stored from wreg
   388     003A  00F2               	movwf	I2C_Slave_init@Address
   389     003B                     l604:
   390                           
   391                           ;main.c: 35: TRISC|=0x18;
   392     003B  3018               	movlw	24
   393     003C  00FF               	movwf	btemp+1
   394     003D  087F               	movf	btemp+1,w
   395     003E  1683               	bsf	3,5	;RP0=1, select bank1
   396     003F  1303               	bcf	3,6	;RP1=0, select bank1
   397     0040  0487               	iorwf	7,f	;volatile
   398                           
   399                           ;main.c: 36: SSPCON|=0x36;
   400     0041  3036               	movlw	54
   401     0042  00FF               	movwf	btemp+1
   402     0043  087F               	movf	btemp+1,w
   403     0044  1283               	bcf	3,5	;RP0=0, select bank0
   404     0045  1303               	bcf	3,6	;RP1=0, select bank0
   405     0046  0494               	iorwf	20,f	;volatile
   406     0047                     l606:
   407                           
   408                           ;main.c: 38: SSPADD=Address;
   409     0047  0872               	movf	I2C_Slave_init@Address,w
   410     0048  1683               	bsf	3,5	;RP0=1, select bank1
   411     0049  1303               	bcf	3,6	;RP1=0, select bank1
   412     004A  0093               	movwf	19	;volatile
   413     004B                     l608:
   414                           
   415                           ;main.c: 39: SMP=1;
   416     004B  1794               	bsf	20,7	;volatile
   417     004C                     l610:
   418                           
   419                           ;main.c: 40: SEN=1;
   420     004C  1411               	bsf	17,0	;volatile
   421     004D                     l612:
   422                           
   423                           ;main.c: 42: SSPIE=1;
   424     004D  158C               	bsf	12,3	;volatile
   425     004E                     l614:
   426                           
   427                           ;main.c: 43: PEIE=1;
   428     004E  170B               	bsf	11,6	;volatile
   429     004F                     l616:
   430                           
   431                           ;main.c: 44: GIE=1;
   432     004F  178B               	bsf	11,7	;volatile
   433     0050                     l618:
   434                           
   435                           ;main.c: 45: SSPIF=0;
   436     0050  1283               	bcf	3,5	;RP0=0, select bank0
   437     0051  1303               	bcf	3,6	;RP1=0, select bank0
   438     0052  118C               	bcf	12,3	;volatile
   439     0053                     l48:
   440     0053  0008               	return
   441     0054                     __end_of_I2C_Slave_init:
   442                           
   443                           	psect	text3
   444     0014                     __ptext3:	
   445 ;; *************** function _ISR *****************
   446 ;; Defined at:
   447 ;;		line 48 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  Dummy           1    0        unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0
   463 ;;      Temps:          2       0       0       0       0
   464 ;;      Totals:         2       0       0       0       0
   465 ;;Total ram usage:        2 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		Interrupt level 1
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474     0014                     _ISR:	
   475                           ;psect for function _ISR
   476                           
   477     0014                     i1l624:
   478                           
   479                           ;main.c: 49:     if(SSPIF){
   480     0014  1283               	bcf	3,5	;RP0=0, select bank0
   481     0015  1303               	bcf	3,6	;RP1=0, select bank0
   482     0016  1D8C               	btfss	12,3	;volatile
   483     0017  2819               	goto	u1_21
   484     0018  281A               	goto	u1_20
   485     0019                     u1_21:
   486     0019  2833               	goto	i1l58
   487     001A                     u1_20:
   488     001A                     i1l626:
   489                           
   490                           ;main.c: 50:         if(!R_nW){
   491     001A  1683               	bsf	3,5	;RP0=1, select bank1
   492     001B  1303               	bcf	3,6	;RP1=0, select bank1
   493     001C  1914               	btfsc	20,2	;volatile
   494     001D  281F               	goto	u2_21
   495     001E  2820               	goto	u2_20
   496     001F                     u2_21:
   497     001F  2830               	goto	i1l634
   498     0020                     u2_20:
   499     0020                     i1l628:
   500     0020  1283               	bcf	3,5	;RP0=0, select bank0
   501     0021  1303               	bcf	3,6	;RP1=0, select bank0
   502     0022  0813               	movf	19,w	;volatile
   503     0023                     i1l630:
   504                           
   505                           ;main.c: 52:         CKP = 1;
   506     0023  1614               	bsf	20,4	;volatile
   507     0024                     i1l55:	
   508                           ;main.c: 53:         while(!BF);
   509                           
   510     0024  1683               	bsf	3,5	;RP0=1, select bank1
   511     0025  1303               	bcf	3,6	;RP1=0, select bank1
   512     0026  1C14               	btfss	20,0	;volatile
   513     0027  2829               	goto	u3_21
   514     0028  282A               	goto	u3_20
   515     0029                     u3_21:
   516     0029  2824               	goto	i1l55
   517     002A                     u3_20:
   518     002A                     i1l632:
   519                           
   520                           ;main.c: 54:         RX_Data=SSPBUF;
   521     002A  1283               	bcf	3,5	;RP0=0, select bank0
   522     002B  1303               	bcf	3,6	;RP1=0, select bank0
   523     002C  0813               	movf	19,w	;volatile
   524     002D  00F3               	movwf	_RX_Data
   525                           
   526                           ;main.c: 55:         PORTD = RX_Data;
   527     002E  0873               	movf	_RX_Data,w
   528     002F  0088               	movwf	8	;volatile
   529     0030                     i1l634:
   530                           
   531                           ;main.c: 57:     CKP = 1;
   532     0030  1283               	bcf	3,5	;RP0=0, select bank0
   533     0031  1614               	bsf	20,4	;volatile
   534     0032                     i1l636:
   535                           
   536                           ;main.c: 58:     SSPIF=0;
   537     0032  118C               	bcf	12,3	;volatile
   538     0033                     i1l58:
   539     0033  0871               	movf	??_ISR+1,w
   540     0034  008A               	movwf	10
   541     0035  0E70               	swapf	??_ISR,w
   542     0036  0083               	movwf	3
   543     0037  0EFE               	swapf	btemp,f
   544     0038  0E7E               	swapf	btemp,w
   545     0039  0009               	retfie
   546     003A                     __end_of_ISR:
   547     007E                     btemp	set	126	;btemp
   548     007E                     wtemp0	set	126
   549                           
   550                           	psect	intentry
   551     0004                     __pintentry:	
   552                           ;incstack = 0
   553                           ; Regs used in _ISR: [wreg]
   554                           
   555     0004                     interrupt_function:
   556     007E                     saved_w	set	btemp
   557     0004  00FE               	movwf	btemp
   558     0005  0E03               	swapf	3,w
   559     0006  00F0               	movwf	??_ISR
   560     0007  080A               	movf	10,w
   561     0008  00F1               	movwf	??_ISR+1
   562     0009  120A  118A  2814   	ljmp	_ISR
   563                           
   564                           	psect	config
   565                           
   566                           ;Config register CONFIG @ 0x2007
   567                           ;	Oscillator Selection bits
   568                           ;	FOSC = XT, XT oscillator
   569                           ;	Watchdog Timer Enable bit
   570                           ;	WDTE = OFF, WDT disabled
   571                           ;	Power-up Timer Enable bit
   572                           ;	PWRTE = ON, PWRT enabled
   573                           ;	Brown-out Reset Enable bit
   574                           ;	BOREN = ON, BOR enabled
   575                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   576                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   577                           ;	Data EEPROM Memory Code Protection bit
   578                           ;	CPD = OFF, Data EEPROM code protection off
   579                           ;	Flash Program Memory Write Enable bits
   580                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   581                           ;	In-Circuit Debugger Mode bit
   582                           ;	DEBUG = 0x1, unprogrammed default
   583                           ;	Flash Program Memory Code Protection bit
   584                           ;	CP = OFF, Code protection off
   585     2007                     	org	8199
   586     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Slave_init

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_init
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_init                                       1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_init
   _port_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jun 01 18:48:42 2024

                     _BF 04A0                       l42 005F                       l43 005F  
                     l37 0069                       l48 0053                      l610 004C  
                    l602 0063                      l612 004D                      l604 003B  
                    l620 0054                      l614 004E                      l606 0047  
                    l622 0059                      l616 004F                      l608 004B  
                    l618 0050                      _CKP 00A4                      _GIE 005F  
                    _ISR 0014                      _SEN 0488                      _SMP 04A7  
                   ?_ISR 0070                     _PEIE 005E                     i1l55 0024  
                   i1l58 0033                     u1_20 001A                     u1_21 0019  
                   u2_20 0020                     u2_21 001F                     u3_20 002A  
                   u3_21 0029                     _R_nW 04A2                     _main 0054  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l630 0023                    i1l632 002A  
                  i1l624 0014                    i1l634 0030                    i1l626 001A  
                  i1l636 0032                    i1l628 0020                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0063  
                 ??_main 0073                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E  __end_of__initialization 0010  
         __pcstackCOMMON 0070               __pmaintext 0054               __pintentry 0004  
  I2C_Slave_init@Address 0072                  _RX_Data 0073                  __ptext1 0063  
                __ptext2 003A                  __ptext3 0014     end_of_initialization 0010  
      __end_of_port_init 006A           _I2C_Slave_init 003A   __end_of_I2C_Slave_init 0054  
    start_initialization 000F              __end_of_ISR 003A          ?_I2C_Slave_init 0070  
            __pbssCOMMON 0073                ___latbits 0002        interrupt_function 0004  
              _port_init 0063               ?_port_init 0070         ??_I2C_Slave_init 0072  
               intlevel1 0000              ??_port_init 0072  
