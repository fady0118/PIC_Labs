

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 25 21:18:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172                           
   173                           	psect	idataBANK0
   174     077B                     __pidataBANK0:
   175                           
   176                           ;initializer for main@F1009
   177     077B  343F               	retlw	63
   178     077C  3406               	retlw	6
   179     077D  345B               	retlw	91
   180     077E  344F               	retlw	79
   181     077F  3466               	retlw	102
   182     0780  346D               	retlw	109
   183     0781  347D               	retlw	125
   184     0782  3407               	retlw	7
   185     0783  347F               	retlw	127
   186     0784  344F               	retlw	79
   187     000E                     _TMR1	set	14
   188     0010                     _T1CON	set	16
   189     0006                     _PORTB	set	6
   190     0085                     _T1CKPS1	set	133
   191     0084                     _T1CKPS0	set	132
   192     0086                     _TRISB	set	134
   193                           
   194                           	psect	strings
   195     0004                     __pstrings:
   196     0004                     stringtab:
   197     0004                     __stringtab:
   198     0004                     stringcode:	
   199                           ;	String table - string pointers are 1 byte each
   200                           
   201     0004                     stringdir:
   202     0004  3000               	movlw	high stringdir
   203     0005  008A               	movwf	10
   204     0006  0804               	movf	4,w
   205     0007  0A84               	incf	4,f
   206     0008  0782               	addwf	2,f
   207     0009                     __stringbase:
   208     0009  3400               	retlw	0
   209     000A                     __end_of__stringtab:
   210     000A                     STR_1:
   211     000A  3425               	retlw	37	;'%'
   212     000B  3469               	retlw	105	;'i'
   213     000C  3420               	retlw	32	;' '
   214     000D  3400               	retlw	0
   215                           
   216                           	psect	cinit
   217     07EE                     start_initialization:	
   218                           ; #config settings
   219                           
   220     07EE                     __initialization:
   221                           
   222                           ; Initialize objects allocated to BANK0
   223     07EE  1383               	bcf	3,7	;select IRP bank0
   224     07EF  302A               	movlw	low (__pdataBANK0+10)
   225     07F0  00FD               	movwf	btemp+-1
   226     07F1  3007               	movlw	high __pidataBANK0
   227     07F2  00FE               	movwf	btemp
   228     07F3  307B               	movlw	low __pidataBANK0
   229     07F4  00FF               	movwf	btemp+1
   230     07F5  3020               	movlw	low __pdataBANK0
   231     07F6  0084               	movwf	4
   232     07F7  120A  118A  27B0  120A  118A  	fcall	init_ram0
   233     07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236     07FC                     __end_of__initialization:
   237     07FC  0183               	clrf	3
   238     07FD  120A  118A  2FBF   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	dataBANK0
   241     0020                     __pdataBANK0:
   242     0020                     main@F1009:
   243     0020                     	ds	10
   244                           
   245                           	psect	inittext
   246     07AC                     init_fetch0:	
   247                           ;	Called with low address in FSR and high address in W
   248                           
   249     07AC  087E               	movf	btemp,w
   250     07AD  008A               	movwf	10
   251     07AE  087F               	movf	btemp+1,w
   252     07AF  0082               	movwf	2
   253     07B0                     init_ram0:	
   254                           ;Called with:
   255                           ;	high address of idata address in btemp 
   256                           ;	low address of idata address in btemp+1 
   257                           ;	low address of data in FSR
   258                           ;	high address + 1 of data in btemp-1
   259                           
   260     07B0  120A  118A  27AC  120A  118A  	fcall	init_fetch0
   261     07B5  0080               	movwf	0
   262     07B6  0A84               	incf	4,f
   263     07B7  0804               	movf	4,w
   264     07B8  067D               	xorwf	btemp+-1,w
   265     07B9  1903               	btfsc	3,2
   266     07BA  3400               	retlw	0
   267     07BB  0AFF               	incf	btemp+1,f
   268     07BC  1903               	btfsc	3,2
   269     07BD  0AFE               	incf	btemp,f
   270     07BE  2FB0               	goto	init_ram0
   271                           
   272                           	psect	cstackCOMMON
   273     0070                     __pcstackCOMMON:
   274     0070                     ??_vfprintf:
   275     0070                     ?_Port_Init:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     ??_Port_Init:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ?_Timer1_init:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ??_Timer1_init:	
   285                           ; 1 bytes @ 0x0
   286                           
   287     0070                     ?_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290     0070                     ?_printf:	
   291                           ; 1 bytes @ 0x0
   292                           
   293     0070                     ?_vfprintf:	
   294                           ; 2 bytes @ 0x0
   295                           
   296     0070                     _vfprintf$0:	
   297                           ; 2 bytes @ 0x0
   298                           
   299     0070                     _vfprintf$1:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304     0070                     	ds	1
   305     0071                     _vfprintf$2:
   306                           
   307                           ; 1 bytes @ 0x1
   308     0071                     	ds	1
   309     0072                     ??_printf:
   310     0072                     printf@ap:	
   311                           ; 1 bytes @ 0x2
   312                           
   313                           
   314                           ; 1 bytes @ 0x2
   315     0072                     	ds	1
   316     0073                     printf@fmt:
   317                           
   318                           ; 1 bytes @ 0x3
   319     0073                     	ds	1
   320     0074                     ??_main:
   321                           
   322                           ; 1 bytes @ 0x4
   323     0074                     	ds	4
   324                           
   325                           	psect	cstackBANK0
   326     002A                     __pcstackBANK0:
   327     002A                     main@segments_code:
   328                           
   329                           ; 10 bytes @ 0x0
   330     002A                     	ds	10
   331                           
   332                           	psect	maintext
   333     07BF                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 34 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  segments_cod   10    0[BANK0 ] unsigned char [10]
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0      10       0       0       0
   355 ;;      Temps:          4       0       0       0       0
   356 ;;      Totals:         4      10       0       0       0
   357 ;;Total ram usage:       14 bytes
   358 ;; Hardware stack levels required when called: 2
   359 ;; This function calls:
   360 ;;		_Port_Init
   361 ;;		_Timer1_init
   362 ;;		_printf
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368     07BF                     _main:	
   369                           ;psect for function _main
   370                           
   371     07BF                     l627:	
   372                           ;incstack = 0
   373                           ; Regs used in _main: [allreg]
   374                           
   375                           
   376                           ;main.c: 35:     Port_Init();
   377     07BF  120A  118A  2791  120A  118A  	fcall	_Port_Init
   378                           
   379                           ;main.c: 36:     Timer1_init();
   380     07C4  120A  118A  2785  120A  118A  	fcall	_Timer1_init
   381     07C9                     l629:
   382                           
   383                           ;main.c: 37:     unsigned char segments_code[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x0
      +                          7,0x7F,0x4F};
   384     07C9  302A               	movlw	main@segments_code& (0+255)
   385     07CA  0084               	movwf	4
   386     07CB  3020               	movlw	low main@F1009
   387     07CC  00F4               	movwf	??_main
   388     07CD  0804               	movf	4,w
   389     07CE  00F5               	movwf	??_main+1
   390     07CF  300A               	movlw	10
   391     07D0  00F6               	movwf	??_main+2
   392     07D1                     u20:
   393     07D1  0874               	movf	??_main,w
   394     07D2  0084               	movwf	4
   395     07D3  1383               	bcf	3,7	;select IRP bank0
   396     07D4  0800               	movf	0,w
   397     07D5  00F7               	movwf	??_main+3
   398     07D6  0AF4               	incf	??_main,f
   399     07D7  0875               	movf	??_main+1,w
   400     07D8  0084               	movwf	4
   401     07D9  0877               	movf	??_main+3,w
   402     07DA  0080               	movwf	0
   403     07DB  0AF5               	incf	??_main+1,f
   404     07DC  0BF6               	decfsz	??_main+2,f
   405     07DD  2FD1               	goto	u20
   406     07DE                     l631:
   407                           
   408                           ;main.c: 39:         printf("%i ",TMR1);
   409     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   410     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   411     07E0  080F               	movf	15,w	;volatile
   412     07E1  00F1               	movwf	?_printf+1
   413     07E2  080E               	movf	14,w	;volatile
   414     07E3  00F0               	movwf	?_printf
   415     07E4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   416     07E5  120A  118A  279E  120A  118A  	fcall	_printf
   417     07EA  2FDE               	goto	l631
   418     07EB  120A  118A  2800   	ljmp	start
   419     07EE                     __end_of_main:
   420                           
   421                           	psect	text1
   422     079E                     __ptext1:	
   423 ;; *************** function _printf *****************
   424 ;; Defined at:
   425 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;  fmt             1    wreg     PTR const unsigned char 
   428 ;;		 -> STR_1(4), 
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  fmt             1    3[COMMON] PTR const unsigned char 
   431 ;;		 -> STR_1(4), 
   432 ;;  ret             2    0        int 
   433 ;;  ap              1    2[COMMON] PTR void [1]
   434 ;;		 -> ?_printf(2), 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  2    0[COMMON] int 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         2       0       0       0       0
   445 ;;      Locals:         2       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         4       0       0       0       0
   448 ;;Total ram usage:        4 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 1
   451 ;; This function calls:
   452 ;;		_vfprintf
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458     079E                     _printf:	
   459                           ;psect for function _printf
   460                           
   461                           
   462                           ;incstack = 0
   463                           ; Regs used in _printf: [allreg]
   464                           ;printf@fmt stored from wreg
   465     079E  00F3               	movwf	printf@fmt
   466     079F                     l621:
   467     079F  3070               	movlw	(low (?_printf| 0))& (0+255)
   468     07A0  00F2               	movwf	printf@ap
   469     07A1                     l623:
   470     07A1  0873               	movf	printf@fmt,w
   471     07A2  00F0               	movwf	_vfprintf$1
   472     07A3  3072               	movlw	(low (printf@ap| 0))& (0+255)
   473     07A4  00F1               	movwf	_vfprintf$2
   474     07A5  3000               	movlw	0
   475     07A6  120A  118A  2000  120A  118A  	fcall	_vfprintf
   476     07AB                     l579:
   477     07AB  0008               	return
   478     07AC                     __end_of_printf:
   479                           
   480                           	psect	text2
   481     0785                     __ptext2:	
   482 ;; *************** function _Timer1_init *****************
   483 ;; Defined at:
   484 ;;		line 24 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, btemp+1
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511     0785                     _Timer1_init:	
   512                           ;psect for function _Timer1_init
   513                           
   514     0785                     l609:	
   515                           ;incstack = 0
   516                           ; Regs used in _Timer1_init: [wreg+status,2+status,0+btemp+1]
   517                           
   518                           
   519                           ;main.c: 25: T1CON|=0x02;
   520     0785  1283               	bcf	3,5	;RP0=0, select bank0
   521     0786  1303               	bcf	3,6	;RP1=0, select bank0
   522     0787  1490               	bsf	16,1	;volatile
   523     0788                     l611:
   524                           
   525                           ;main.c: 26: T1CON&=~0x04;
   526     0788  30FB               	movlw	251
   527     0789  00FF               	movwf	btemp+1
   528     078A  087F               	movf	btemp+1,w
   529     078B  0590               	andwf	16,f	;volatile
   530     078C                     l613:
   531                           
   532                           ;main.c: 27: T1CON|=0x08;
   533     078C  1590               	bsf	16,3	;volatile
   534     078D                     l615:
   535                           
   536                           ;main.c: 28: T1CKPS0=0;
   537     078D  1210               	bcf	16,4	;volatile
   538     078E                     l617:
   539                           
   540                           ;main.c: 29: T1CKPS1=0;
   541     078E  1290               	bcf	16,5	;volatile
   542     078F                     l619:
   543                           
   544                           ;main.c: 30: T1CON|=0x01;
   545     078F  1410               	bsf	16,0	;volatile
   546     0790                     l20:
   547     0790  0008               	return
   548     0791                     __end_of_Timer1_init:
   549                           
   550                           	psect	text3
   551     0791                     __ptext3:	
   552 ;; *************** function _Port_Init *****************
   553 ;; Defined at:
   554 ;;		line 16 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, btemp+1
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581     0791                     _Port_Init:	
   582                           ;psect for function _Port_Init
   583                           
   584     0791                     l607:	
   585                           ;incstack = 0
   586                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   587                           
   588                           
   589                           ;main.c: 17:     TRISB&=~0x7F;
   590     0791  3080               	movlw	128
   591     0792  00FF               	movwf	btemp+1
   592     0793  087F               	movf	btemp+1,w
   593     0794  1683               	bsf	3,5	;RP0=1, select bank1
   594     0795  1303               	bcf	3,6	;RP1=0, select bank1
   595     0796  0586               	andwf	6,f	;volatile
   596                           
   597                           ;main.c: 18:     PORTB&=~0x7F;
   598     0797  3080               	movlw	128
   599     0798  00FF               	movwf	btemp+1
   600     0799  087F               	movf	btemp+1,w
   601     079A  1283               	bcf	3,5	;RP0=0, select bank0
   602     079B  1303               	bcf	3,6	;RP1=0, select bank0
   603     079C  0586               	andwf	6,f	;volatile
   604     079D                     l17:
   605     079D  0008               	return
   606     079E                     __end_of_Port_Init:
   607     007E                     btemp	set	126	;btemp
   608     007E                     wtemp0	set	126
   609                           
   610                           	psect	config
   611                           
   612                           ;Config register CONFIG @ 0x2007
   613                           ;	Oscillator Selection bits
   614                           ;	FOSC = XT, XT oscillator
   615                           ;	Watchdog Timer Enable bit
   616                           ;	WDTE = OFF, WDT disabled
   617                           ;	Power-up Timer Enable bit
   618                           ;	PWRTE = ON, PWRT enabled
   619                           ;	Brown-out Reset Enable bit
   620                           ;	BOREN = ON, BOR enabled
   621                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   622                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   623                           ;	Data EEPROM Memory Code Protection bit
   624                           ;	CPD = OFF, Data EEPROM code protection off
   625                           ;	Flash Program Memory Write Enable bits
   626                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   627                           ;	In-Circuit Debugger Mode bit
   628                           ;	DEBUG = 0x1, unprogrammed default
   629                           ;	Flash Program Memory Code Protection bit
   630                           ;	CP = OFF, Code protection off
   631     2007                     	org	8199
   632     2007  3F71               	dw	16241

Data Sizes:
    Strings     4
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     10      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_printf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     119
                                              4 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _Port_Init
                        _Timer1_init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2     118
                                              0 COMMON     4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             3     0      3      33
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _Timer1_init
   _printf
     _vfprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 25 21:18:34 2024

                      pc 0002                       l20 0790                       l17 079D  
                     u20 07D1                       fsr 0004                      l611 0788  
                    l613 078C                      l621 079F                      l607 0791  
                    l615 078D                      l623 07A1                      l631 07DE  
                    l617 078E                      l609 0785                      l619 078F  
                    l627 07BF                      l629 07C9                      l579 07AB  
                    fsr0 0004                      indf 0000                     STR_1 000A  
                   _TMR1 000E                     _main 07BF                     btemp 007E  
                   start 0000                    ?_main 0070                    _T1CON 0010  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0074            ??_Timer1_init 0070  
                 _printf 079E  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 077B      __end_of_Timer1_init 0791        __end_of_Port_Init 079E  
             __pmaintext 07BF                  ?_printf 0070                  _T1CKPS0 0084  
                _T1CKPS1 0085        main@segments_code 002A               __stringtab 0004  
            _Timer1_init 0785                ?_vfprintf 0070                  __ptext1 079E  
                __ptext2 0785                  __ptext3 0791     end_of_initialization 07FC  
             ??_vfprintf 0070               _vfprintf$0 0070               _vfprintf$1 0070  
             _vfprintf$2 0071           __end_of_printf 07AC      start_initialization 07EE  
             init_fetch0 07AC                _Port_Init 0791              __pdataBANK0 0020  
               ??_printf 0072                ___latbits 0002            __pcstackBANK0 002A  
           ?_Timer1_init 0070               ?_Port_Init 0070                __pstrings 0004  
              main@F1009 0020              __stringbase 0009              ??_Port_Init 0070  
     __end_of__stringtab 000A                 _vfprintf 0000                printf@fmt 0073  
               init_ram0 07B0                stringcode 0004                 printf@ap 0072  
               stringdir 0004                 stringtab 0004  
