

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 21 00:11:46 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     001E                     _ADRESH	set	30
   170     001F                     _ADCON0	set	31
   171     0006                     _PORTB	set	6
   172     005F                     _GIE	set	95
   173     005E                     _PEIE	set	94
   174     0066                     _ADIF	set	102
   175     009E                     _ADRESL	set	158
   176     009F                     _ADCON1	set	159
   177     0086                     _TRISB	set	134
   178     0466                     _ADIE	set	1126
   179                           
   180                           	psect	cinit
   181     000F                     start_initialization:	
   182                           ; #config settings
   183                           
   184     000F                     __initialization:
   185                           
   186                           ; Clear objects allocated to COMMON
   187     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   188     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   189     0011                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     0011                     __end_of__initialization:
   193     0011  0183               	clrf	3
   194     0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197     0078                     __pbssCOMMON:
   198     0078                     _result:
   199     0078                     	ds	2
   200                           
   201                           	psect	cstackCOMMON
   202     0070                     __pcstackCOMMON:
   203     0070                     ?_ADC_Init:
   204     0070                     ?_ADC_Read:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_main:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_ISR:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ??_ISR:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	2
   219     0072                     ??_ADC_Init:
   220     0072                     ??_ADC_Read:	
   221                           ; 1 bytes @ 0x2
   222                           
   223                           
   224                           ; 1 bytes @ 0x2
   225     0072                     	ds	1
   226     0073                     ADC_Read@AN:
   227                           
   228                           ; 1 bytes @ 0x3
   229     0073                     	ds	1
   230     0074                     ??_main:
   231                           
   232                           ; 1 bytes @ 0x4
   233     0074                     	ds	2
   234     0076                     main@AN_RES:
   235                           
   236                           ; 2 bytes @ 0x6
   237     0076                     	ds	2
   238                           
   239                           	psect	maintext
   240     0015                     __pmaintext:	
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 20 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;  AN_RES          2    6[COMMON] unsigned short 
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : B00/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   260 ;;      Params:         0       0       0       0       0
   261 ;;      Locals:         2       0       0       0       0
   262 ;;      Temps:          2       0       0       0       0
   263 ;;      Totals:         4       0       0       0       0
   264 ;;Total ram usage:        4 bytes
   265 ;; Hardware stack levels required when called: 2
   266 ;; This function calls:
   267 ;;		_ADC_Init
   268 ;;		_ADC_Read
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     0015                     _main:	
   275                           ;psect for function _main
   276                           
   277     0015                     l614:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   280                           
   281                           
   282                           ;main.c: 21:     ADC_Init();
   283     0015  120A  118A  207D  120A  118A  	fcall	_ADC_Init
   284     001A                     l616:
   285                           
   286                           ;main.c: 22:     TRISB = 0x00;
   287     001A  1683               	bsf	3,5	;RP0=1, select bank1
   288     001B  1303               	bcf	3,6	;RP1=0, select bank1
   289     001C  0186               	clrf	6	;volatile
   290     001D                     l618:
   291                           
   292                           ;main.c: 23:     PORTB = 0x00;
   293     001D  1283               	bcf	3,5	;RP0=0, select bank0
   294     001E  1303               	bcf	3,6	;RP1=0, select bank0
   295     001F  0186               	clrf	6	;volatile
   296     0020                     l620:
   297                           
   298                           ;main.c: 27:     ADC_Read(3);
   299     0020  3003               	movlw	3
   300     0021  120A  118A  2043  120A  118A  	fcall	_ADC_Read
   301     0026                     l622:
   302                           
   303                           ;main.c: 28:     AN_RES = result>>2;
   304     0026  0879               	movf	_result+1,w
   305     0027  00F5               	movwf	??_main+1
   306     0028  0878               	movf	_result,w
   307     0029  00F4               	movwf	??_main
   308     002A  1003               	clrc
   309     002B  0CF5               	rrf	??_main+1,f
   310     002C  0CF4               	rrf	??_main,f
   311     002D  1003               	clrc
   312     002E  0CF5               	rrf	??_main+1,f
   313     002F  0CF4               	rrf	??_main,f
   314     0030  0874               	movf	??_main,w
   315     0031  00F6               	movwf	main@AN_RES
   316     0032  0875               	movf	??_main+1,w
   317     0033  00F7               	movwf	main@AN_RES+1
   318     0034                     l624:
   319                           
   320                           ;main.c: 29:     PORTB = AN_RES;
   321     0034  0876               	movf	main@AN_RES,w
   322     0035  1283               	bcf	3,5	;RP0=0, select bank0
   323     0036  1303               	bcf	3,6	;RP1=0, select bank0
   324     0037  0086               	movwf	6	;volatile
   325     0038                     l626:
   326                           
   327                           ;main.c: 30:     _delay((unsigned long)((1)*(4000000/4000.0)));
   328     0038  30C7               	movlw	199
   329     0039  00F4               	movwf	??_main
   330     003A                     u47:
   331     003A  283B               	nop2
   332     003B  0BF4               	decfsz	??_main,f
   333     003C  283A               	goto	u47
   334     003D  283E               	nop2
   335     003E  283F               	nop2
   336     003F  2820               	goto	l620
   337     0040  120A  118A  280C   	ljmp	start
   338     0043                     __end_of_main:
   339                           
   340                           	psect	text1
   341     0043                     __ptext1:	
   342 ;; *************** function _ADC_Read *****************
   343 ;; Defined at:
   344 ;;		line 47 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  AN              1    wreg     unsigned char 
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  AN              1    3[COMMON] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0, btemp+1
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   358 ;;      Params:         0       0       0       0       0
   359 ;;      Locals:         1       0       0       0       0
   360 ;;      Temps:          1       0       0       0       0
   361 ;;      Totals:         2       0       0       0       0
   362 ;;Total ram usage:        2 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372     0043                     _ADC_Read:	
   373                           ;psect for function _ADC_Read
   374                           
   375                           
   376                           ;incstack = 0
   377                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
   378                           ;ADC_Read@AN stored from wreg
   379     0043  00F3               	movwf	ADC_Read@AN
   380     0044                     l604:
   381                           
   382                           ;main.c: 48:     if(AN>=0 && AN<=7){
   383     0044  3008               	movlw	8
   384     0045  0273               	subwf	ADC_Read@AN,w
   385     0046  1803               	skipnc
   386     0047  2849               	goto	u11
   387     0048  284A               	goto	u10
   388     0049                     u11:
   389     0049  2866               	goto	l612
   390     004A                     u10:
   391     004A                     l606:
   392                           
   393                           ;main.c: 49:     ADCON0&=~0x38;
   394     004A  30C7               	movlw	199
   395     004B  00FF               	movwf	btemp+1
   396     004C  087F               	movf	btemp+1,w
   397     004D  1283               	bcf	3,5	;RP0=0, select bank0
   398     004E  1303               	bcf	3,6	;RP1=0, select bank0
   399     004F  059F               	andwf	31,f	;volatile
   400                           
   401                           ;main.c: 50:     ADCON0|=AN<<3;
   402     0050  0873               	movf	ADC_Read@AN,w	;volatile
   403     0051  00F2               	movwf	??_ADC_Read
   404     0052  3002               	movlw	2
   405     0053                     u25:
   406     0053  1003               	clrc
   407     0054  0DF2               	rlf	??_ADC_Read,f
   408     0055  3EFF               	addlw	-1
   409     0056  1D03               	skipz
   410     0057  2853               	goto	u25
   411     0058  1003               	clrc
   412     0059  0D72               	rlf	??_ADC_Read,w
   413     005A  00FF               	movwf	btemp+1
   414     005B  087F               	movf	btemp+1,w
   415     005C  049F               	iorwf	31,f	;volatile
   416     005D                     l608:
   417                           
   418                           ;main.c: 51:     _delay((unsigned long)((30)*(4000000/4000000.0)));
   419     005D  3009               	movlw	9
   420     005E  00F2               	movwf	??_ADC_Read
   421     005F                     u57:
   422     005F  0BF2               	decfsz	??_ADC_Read,f
   423     0060  285F               	goto	u57
   424     0061  2862               	nop2
   425     0062                     l610:
   426                           
   427                           ;main.c: 52:     ADCON0|=0x04;
   428     0062  1283               	bcf	3,5	;RP0=0, select bank0
   429     0063  1303               	bcf	3,6	;RP1=0, select bank0
   430     0064  151F               	bsf	31,2	;volatile
   431                           
   432                           ;main.c: 53:     }
   433     0065  2868               	goto	l44
   434     0066                     l612:
   435     0066  01F8               	clrf	_result
   436     0067  01F9               	clrf	_result+1
   437     0068                     l44:
   438     0068  0008               	return
   439     0069                     __end_of_ADC_Read:
   440                           
   441                           	psect	text2
   442     007D                     __ptext2:	
   443 ;; *************** function _ADC_Init *****************
   444 ;; Defined at:
   445 ;;		line 35 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; Hardware stack levels required when called: 1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473     007D                     _ADC_Init:	
   474                           ;psect for function _ADC_Init
   475                           
   476     007D                     l594:	
   477                           ;incstack = 0
   478                           ; Regs used in _ADC_Init: [wreg]
   479                           
   480                           
   481                           ;main.c: 36:     ADCON0 = 0x41;
   482     007D  3041               	movlw	65
   483     007E  1283               	bcf	3,5	;RP0=0, select bank0
   484     007F  1303               	bcf	3,6	;RP1=0, select bank0
   485     0080  009F               	movwf	31	;volatile
   486                           
   487                           ;main.c: 37:     ADCON1 = 0x80;
   488     0081  3080               	movlw	128
   489     0082  1683               	bsf	3,5	;RP0=1, select bank1
   490     0083  1303               	bcf	3,6	;RP1=0, select bank1
   491     0084  009F               	movwf	31	;volatile
   492     0085                     l596:
   493                           
   494                           ;main.c: 40:     ADIF=0;
   495     0085  1283               	bcf	3,5	;RP0=0, select bank0
   496     0086  1303               	bcf	3,6	;RP1=0, select bank0
   497     0087  130C               	bcf	12,6	;volatile
   498     0088                     l598:
   499                           
   500                           ;main.c: 41:     ADIE=1;
   501     0088  1683               	bsf	3,5	;RP0=1, select bank1
   502     0089  1303               	bcf	3,6	;RP1=0, select bank1
   503     008A  170C               	bsf	12,6	;volatile
   504     008B                     l600:
   505                           
   506                           ;main.c: 42:     PEIE=1;
   507     008B  170B               	bsf	11,6	;volatile
   508     008C                     l602:
   509                           
   510                           ;main.c: 43:     GIE=1;
   511     008C  178B               	bsf	11,7	;volatile
   512     008D                     l39:
   513     008D  0008               	return
   514     008E                     __end_of_ADC_Init:
   515                           
   516                           	psect	text3
   517     0069                     __ptext3:	
   518 ;; *************** function _ISR *****************
   519 ;; Defined at:
   520 ;;		line 57 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          2       0       0       0       0
   537 ;;      Totals:         2       0       0       0       0
   538 ;;Total ram usage:        2 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		Interrupt level 1
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547     0069                     _ISR:	
   548                           ;psect for function _ISR
   549                           
   550     0069                     i1l628:
   551                           
   552                           ;main.c: 58:     if(ADIF){
   553     0069  1283               	bcf	3,5	;RP0=0, select bank0
   554     006A  1303               	bcf	3,6	;RP1=0, select bank0
   555     006B  1F0C               	btfss	12,6	;volatile
   556     006C  286E               	goto	u3_21
   557     006D  286F               	goto	u3_20
   558     006E                     u3_21:
   559     006E  2876               	goto	i1l50
   560     006F                     u3_20:
   561     006F                     i1l630:
   562                           
   563                           ;main.c: 59:     ADIF=0;
   564     006F  130C               	bcf	12,6	;volatile
   565     0070                     i1l632:
   566                           
   567                           ;main.c: 60:     result=(ADRESH<<8)+ADRESL;
   568     0070  081E               	movf	30,w	;volatile
   569     0071  00F9               	movwf	_result+1
   570     0072  1683               	bsf	3,5	;RP0=1, select bank1
   571     0073  1303               	bcf	3,6	;RP1=0, select bank1
   572     0074  081E               	movf	30,w	;volatile
   573     0075  00F8               	movwf	_result
   574     0076                     i1l50:
   575     0076  0871               	movf	??_ISR+1,w
   576     0077  008A               	movwf	10
   577     0078  0E70               	swapf	??_ISR,w
   578     0079  0083               	movwf	3
   579     007A  0EFE               	swapf	btemp,f
   580     007B  0E7E               	swapf	btemp,w
   581     007C  0009               	retfie
   582     007D                     __end_of_ISR:
   583     007E                     btemp	set	126	;btemp
   584     007E                     wtemp0	set	126
   585                           
   586                           	psect	intentry
   587     0004                     __pintentry:	
   588                           ;incstack = 0
   589                           ; Regs used in _ISR: [wreg]
   590                           
   591     0004                     interrupt_function:
   592     007E                     saved_w	set	btemp
   593     0004  00FE               	movwf	btemp
   594     0005  0E03               	swapf	3,w
   595     0006  00F0               	movwf	??_ISR
   596     0007  080A               	movf	10,w
   597     0008  00F1               	movwf	??_ISR+1
   598     0009  120A  118A  2869   	ljmp	_ISR
   599                           
   600                           	psect	config
   601                           
   602                           ;Config register CONFIG @ 0x2007
   603                           ;	Oscillator Selection bits
   604                           ;	FOSC = XT, XT oscillator
   605                           ;	Watchdog Timer Enable bit
   606                           ;	WDTE = OFF, WDT disabled
   607                           ;	Power-up Timer Enable bit
   608                           ;	PWRTE = ON, PWRT enabled
   609                           ;	Brown-out Reset Enable bit
   610                           ;	BOREN = ON, BOR enabled
   611                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   612                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   613                           ;	Data EEPROM Memory Code Protection bit
   614                           ;	CPD = OFF, Data EEPROM code protection off
   615                           ;	Flash Program Memory Write Enable bits
   616                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   617                           ;	In-Circuit Debugger Mode bit
   618                           ;	DEBUG = 0x1, unprogrammed default
   619                           ;	Flash Program Memory Code Protection bit
   620                           ;	CP = OFF, Code protection off
   621     2007                     	org	8199
   622     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              4 COMMON     4     4      0
                           _ADC_Init
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             2     2      0      30
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 21 00:11:46 2024

                     l44 0068                       l39 008D                       u10 004A  
                     u11 0049                       u25 0053                       u47 003A  
                     u57 005F                      l600 008B                      l602 008C  
                    l610 0062                      l612 0066                      l604 0044  
                    l620 0020                      l606 004A                      l622 0026  
                    l614 0015                      l608 005D                      l624 0034  
                    l616 001A                      l626 0038                      l618 001D  
                    l594 007D                      l596 0085                      l598 0088  
                    _GIE 005F                      _ISR 0069                     ?_ISR 0070  
                   _ADIE 0466                     _ADIF 0066                     _PEIE 005E  
                   i1l50 0076                     u3_20 006F                     u3_21 006E  
                   _main 0015                     btemp 007E         __end_of_ADC_Init 008E  
       __end_of_ADC_Read 0069                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l630 006F                    i1l632 0070  
                  i1l628 0069                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0043                   ??_main 0074  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   _result 0078                ?_ADC_Init 0070  
              ?_ADC_Read 0070                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070               ??_ADC_Init 0072               ??_ADC_Read 0072  
             __pmaintext 0015               __pintentry 0004               ADC_Read@AN 0073  
                __ptext1 0043                  __ptext2 007D                  __ptext3 0069  
   end_of_initialization 0011               main@AN_RES 0076      start_initialization 000F  
            __end_of_ISR 007D              __pbssCOMMON 0078                ___latbits 0002  
               _ADC_Init 007D                 _ADC_Read 0043        interrupt_function 0004  
               intlevel1 0000  
