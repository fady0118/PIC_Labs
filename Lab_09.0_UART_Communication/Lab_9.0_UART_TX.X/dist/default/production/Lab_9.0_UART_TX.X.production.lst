

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 14 20:38:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0019                     _TXREG	set	25
   168     0008                     _PORTD	set	8
   169     0006                     _PORTB	set	6
   170     00C7                     _SPEN	set	199
   171     0032                     _RB2	set	50
   172     0031                     _RB1	set	49
   173     0030                     _RB0	set	48
   174     0099                     _SPBRG	set	153
   175     0088                     _TRISD	set	136
   176     0086                     _TRISB	set	134
   177     04C1                     _TRMT	set	1217
   178     04C5                     _TXEN	set	1221
   179     043F                     _TRISC7	set	1087
   180     043E                     _TRISC6	set	1086
   181     04C4                     _SYNC	set	1220
   182     04C2                     _BRGH	set	1218
   183                           
   184                           	psect	cinit
   185     07FC                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FC                     __initialization:
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_UART_TX_Init:
   199     0070                     ??_UART_TX_Init:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_UART_Write:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_UART_Write:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_Port_Init:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ??_Port_Init:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     UART_Write@data:	
   218                           ; 1 bytes @ 0x0
   219                           
   220                           
   221                           ; 1 bytes @ 0x0
   222     0070                     	ds	1
   223     0071                     ??_main:
   224                           
   225                           ; 1 bytes @ 0x1
   226     0071                     	ds	3
   227     0074                     main@Data:
   228                           
   229                           ; 1 bytes @ 0x4
   230     0074                     	ds	1
   231                           
   232                           	psect	maintext
   233     07A4                     __pmaintext:	
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 37 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  Data            1    4[COMMON] unsigned char 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : B00/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   253 ;;      Params:         0       0       0       0       0
   254 ;;      Locals:         1       0       0       0       0
   255 ;;      Temps:          3       0       0       0       0
   256 ;;      Totals:         4       0       0       0       0
   257 ;;Total ram usage:        4 bytes
   258 ;; Hardware stack levels required when called: 1
   259 ;; This function calls:
   260 ;;		_Port_Init
   261 ;;		_UART_TX_Init
   262 ;;		_UART_Write
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268     07A4                     _main:	
   269                           ;psect for function _main
   270                           
   271     07A4                     l627:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   274                           
   275                           
   276                           ;main.c: 38:     Port_Init();
   277     07A4  120A  118A  278E  120A  118A  	fcall	_Port_Init
   278     07A9                     l629:
   279                           
   280                           ;main.c: 39:     UART_TX_Init();
   281     07A9  120A  118A  277F  120A  118A  	fcall	_UART_TX_Init
   282     07AE                     l631:
   283                           
   284                           ;main.c: 40:     uint8_t Data = 0;
   285     07AE  01F4               	clrf	main@Data
   286     07AF                     l633:
   287                           
   288                           ;main.c: 42:         if(RB0){
   289     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   290     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   291     07B1  1C06               	btfss	6,0	;volatile
   292     07B2  2FB4               	goto	u21
   293     07B3  2FB5               	goto	u20
   294     07B4                     u21:
   295     07B4  2FC6               	goto	l639
   296     07B5                     u20:
   297     07B5                     l635:
   298                           
   299                           ;main.c: 43:         Data++;
   300     07B5  3001               	movlw	1
   301     07B6  00FF               	movwf	btemp+1
   302     07B7  087F               	movf	btemp+1,w
   303     07B8  07F4               	addwf	main@Data,f
   304     07B9                     l637:
   305                           
   306                           ;main.c: 44:         _delay((unsigned long)((350)*(4000000/4000.0)));
   307     07B9  3002               	movlw	2
   308     07BA  00F3               	movwf	??_main+2
   309     07BB  30C7               	movlw	199
   310     07BC  00F2               	movwf	??_main+1
   311     07BD  3088               	movlw	136
   312     07BE  00F1               	movwf	??_main
   313     07BF                     u57:
   314     07BF  0BF1               	decfsz	??_main,f
   315     07C0  2FBF               	goto	u57
   316     07C1  0BF2               	decfsz	??_main+1,f
   317     07C2  2FBF               	goto	u57
   318     07C3  0BF3               	decfsz	??_main+2,f
   319     07C4  2FBF               	goto	u57
   320     07C5  0000               	nop
   321     07C6                     l639:
   322                           
   323                           ;main.c: 46:         if(RB1){
   324     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   325     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   326     07C8  1C86               	btfss	6,1	;volatile
   327     07C9  2FCB               	goto	u31
   328     07CA  2FCC               	goto	u30
   329     07CB                     u31:
   330     07CB  2FDB               	goto	l645
   331     07CC                     u30:
   332     07CC                     l641:
   333                           
   334                           ;main.c: 47:         Data--;
   335     07CC  3001               	movlw	1
   336     07CD  02F4               	subwf	main@Data,f
   337     07CE                     l643:
   338                           
   339                           ;main.c: 48:         _delay((unsigned long)((350)*(4000000/4000.0)));
   340     07CE  3002               	movlw	2
   341     07CF  00F3               	movwf	??_main+2
   342     07D0  30C7               	movlw	199
   343     07D1  00F2               	movwf	??_main+1
   344     07D2  3088               	movlw	136
   345     07D3  00F1               	movwf	??_main
   346     07D4                     u67:
   347     07D4  0BF1               	decfsz	??_main,f
   348     07D5  2FD4               	goto	u67
   349     07D6  0BF2               	decfsz	??_main+1,f
   350     07D7  2FD4               	goto	u67
   351     07D8  0BF3               	decfsz	??_main+2,f
   352     07D9  2FD4               	goto	u67
   353     07DA  0000               	nop
   354     07DB                     l645:
   355                           
   356                           ;main.c: 50:         if(RB2){
   357     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   358     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   359     07DD  1D06               	btfss	6,2	;volatile
   360     07DE  2FE0               	goto	u41
   361     07DF  2FE1               	goto	u40
   362     07E0                     u41:
   363     07E0  2FF4               	goto	l651
   364     07E1                     u40:
   365     07E1                     l647:
   366                           
   367                           ;main.c: 51:         UART_Write(Data);
   368     07E1  0874               	movf	main@Data,w
   369     07E2  120A  118A  2773  120A  118A  	fcall	_UART_Write
   370     07E7                     l649:
   371                           
   372                           ;main.c: 52:         _delay((unsigned long)((350)*(4000000/4000.0)));
   373     07E7  3002               	movlw	2
   374     07E8  00F3               	movwf	??_main+2
   375     07E9  30C7               	movlw	199
   376     07EA  00F2               	movwf	??_main+1
   377     07EB  3088               	movlw	136
   378     07EC  00F1               	movwf	??_main
   379     07ED                     u77:
   380     07ED  0BF1               	decfsz	??_main,f
   381     07EE  2FED               	goto	u77
   382     07EF  0BF2               	decfsz	??_main+1,f
   383     07F0  2FED               	goto	u77
   384     07F1  0BF3               	decfsz	??_main+2,f
   385     07F2  2FED               	goto	u77
   386     07F3  0000               	nop
   387     07F4                     l651:
   388                           
   389                           ;main.c: 54:         PORTD = Data;
   390     07F4  0874               	movf	main@Data,w
   391     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   392     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   393     07F7  0088               	movwf	8	;volatile
   394     07F8  2FAF               	goto	l633
   395     07F9  120A  118A  2800   	ljmp	start
   396     07FC                     __end_of_main:
   397                           
   398                           	psect	text1
   399     0773                     __ptext1:	
   400 ;; *************** function _UART_Write *****************
   401 ;; Defined at:
   402 ;;		line 74 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;  data            1    wreg     unsigned char 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  data            1    0[COMMON] unsigned char 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         1       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0
   419 ;;      Totals:         1       0       0       0       0
   420 ;;Total ram usage:        1 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429     0773                     _UART_Write:	
   430                           ;psect for function _UART_Write
   431                           
   432                           
   433                           ;incstack = 0
   434                           ; Regs used in _UART_Write: [wreg]
   435                           ;UART_Write@data stored from wreg
   436     0773  00F0               	movwf	UART_Write@data
   437     0774                     l623:
   438     0774                     l58:	
   439                           ;main.c: 74: void UART_Write(uint8_t data);main.c: 75: {;main.c: 76:   while(!TRMT);
   440                           
   441     0774  1683               	bsf	3,5	;RP0=1, select bank1
   442     0775  1303               	bcf	3,6	;RP1=0, select bank1
   443     0776  1C98               	btfss	24,1	;volatile
   444     0777  2F79               	goto	u11
   445     0778  2F7A               	goto	u10
   446     0779                     u11:
   447     0779  2F74               	goto	l58
   448     077A                     u10:
   449     077A                     l625:
   450                           
   451                           ;main.c: 77:   TXREG = data;
   452     077A  0870               	movf	UART_Write@data,w
   453     077B  1283               	bcf	3,5	;RP0=0, select bank0
   454     077C  1303               	bcf	3,6	;RP1=0, select bank0
   455     077D  0099               	movwf	25	;volatile
   456     077E                     l61:
   457     077E  0008               	return
   458     077F                     __end_of_UART_Write:
   459                           
   460                           	psect	text2
   461     077F                     __ptext2:	
   462 ;; *************** function _UART_TX_Init *****************
   463 ;; Defined at:
   464 ;;		line 59 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491     077F                     _UART_TX_Init:	
   492                           ;psect for function _UART_TX_Init
   493                           
   494     077F                     l609:	
   495                           ;incstack = 0
   496                           ; Regs used in _UART_TX_Init: [wreg]
   497                           
   498                           
   499                           ;main.c: 61:     BRGH = 1;
   500     077F  1683               	bsf	3,5	;RP0=1, select bank1
   501     0780  1303               	bcf	3,6	;RP1=0, select bank1
   502     0781  1518               	bsf	24,2	;volatile
   503     0782                     l611:
   504                           
   505                           ;main.c: 62:     SPBRG = 25;
   506     0782  3019               	movlw	25
   507     0783  0099               	movwf	25	;volatile
   508     0784                     l613:
   509                           
   510                           ;main.c: 65:     SYNC = 0;
   511     0784  1218               	bcf	24,4	;volatile
   512     0785                     l615:
   513                           
   514                           ;main.c: 66:     SPEN = 1;
   515     0785  1283               	bcf	3,5	;RP0=0, select bank0
   516     0786  1303               	bcf	3,6	;RP1=0, select bank0
   517     0787  1798               	bsf	24,7	;volatile
   518     0788                     l617:
   519                           
   520                           ;main.c: 69:     TRISC6 = 1;
   521     0788  1683               	bsf	3,5	;RP0=1, select bank1
   522     0789  1303               	bcf	3,6	;RP1=0, select bank1
   523     078A  1707               	bsf	7,6	;volatile
   524     078B                     l619:
   525                           
   526                           ;main.c: 70:     TRISC7 = 1;
   527     078B  1787               	bsf	7,7	;volatile
   528     078C                     l621:
   529                           
   530                           ;main.c: 71:     TXEN = 1;
   531     078C  1698               	bsf	24,5	;volatile
   532     078D                     l55:
   533     078D  0008               	return
   534     078E                     __end_of_UART_TX_Init:
   535                           
   536                           	psect	text3
   537     078E                     __ptext3:	
   538 ;; *************** function _Port_Init *****************
   539 ;; Defined at:
   540 ;;		line 30 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, btemp+1
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567     078E                     _Port_Init:	
   568                           ;psect for function _Port_Init
   569                           
   570     078E                     l605:	
   571                           ;incstack = 0
   572                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   573                           
   574                           
   575                           ;main.c: 31:    TRISB|=0x07;
   576     078E  3007               	movlw	7
   577     078F  00FF               	movwf	btemp+1
   578     0790  087F               	movf	btemp+1,w
   579     0791  1683               	bsf	3,5	;RP0=1, select bank1
   580     0792  1303               	bcf	3,6	;RP1=0, select bank1
   581     0793  0486               	iorwf	6,f	;volatile
   582                           
   583                           ;main.c: 32:    PORTB&=~0x07;
   584     0794  30F8               	movlw	248
   585     0795  00FF               	movwf	btemp+1
   586     0796  087F               	movf	btemp+1,w
   587     0797  1283               	bcf	3,5	;RP0=0, select bank0
   588     0798  1303               	bcf	3,6	;RP1=0, select bank0
   589     0799  0586               	andwf	6,f	;volatile
   590                           
   591                           ;main.c: 33:    TRISD&=~0x0F;
   592     079A  30F0               	movlw	240
   593     079B  00FF               	movwf	btemp+1
   594     079C  087F               	movf	btemp+1,w
   595     079D  1683               	bsf	3,5	;RP0=1, select bank1
   596     079E  1303               	bcf	3,6	;RP1=0, select bank1
   597     079F  0588               	andwf	8,f	;volatile
   598     07A0                     l607:
   599                           
   600                           ;main.c: 34:    PORTD = 0x00;
   601     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   602     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   603     07A2  0188               	clrf	8	;volatile
   604     07A3                     l41:
   605     07A3  0008               	return
   606     07A4                     __end_of_Port_Init:
   607     007E                     btemp	set	126	;btemp
   608     007E                     wtemp0	set	126
   609                           
   610                           	psect	config
   611                           
   612                           ;Config register CONFIG @ 0x2007
   613                           ;	Oscillator Selection bits
   614                           ;	FOSC = XT, XT oscillator
   615                           ;	Watchdog Timer Enable bit
   616                           ;	WDTE = OFF, WDT disabled
   617                           ;	Power-up Timer Enable bit
   618                           ;	PWRTE = ON, PWRT enabled
   619                           ;	Brown-out Reset Enable bit
   620                           ;	BOREN = ON, BOR enabled
   621                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   622                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   623                           ;	Data EEPROM Memory Code Protection bit
   624                           ;	CPD = OFF, Data EEPROM code protection off
   625                           ;	Flash Program Memory Write Enable bits
   626                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   627                           ;	In-Circuit Debugger Mode bit
   628                           ;	DEBUG = 0x1, unprogrammed default
   629                           ;	Flash Program Memory Code Protection bit
   630                           ;	CP = OFF, Code protection off
   631     2007                     	org	8199
   632     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                          _Port_Init
                       _UART_TX_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _UART_TX_Init
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 14 20:38:56 2024

                     l41 07A3                       l61 077E                       l55 078D  
                     l58 0774                       u10 077A                       u11 0779  
                     u20 07B5                       u21 07B4                       u30 07CC  
                     u31 07CB                       u40 07E1                       u41 07E0  
                     u57 07BF                       u67 07D4                       u77 07ED  
                    l611 0782                      l605 078E                      l621 078C  
                    l613 0784                      l607 07A0                      l615 0785  
                    l623 0774                      l631 07AE                      l617 0788  
                    l609 077F                      l625 077A                      l641 07CC  
                    l633 07AF                      l619 078B                      l651 07F4  
                    l643 07CE                      l635 07B5                      l627 07A4  
                    l645 07DB                      l637 07B9                      l629 07A9  
                    l647 07E1                      l639 07C6                      l649 07E7  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                   _BRGH 04C2                     _SPEN 00C7                     _TRMT 04C1  
                   _TXEN 04C5                     _SYNC 04C4                     _main 07A4  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
            ?_UART_Write 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0071  
                 _TRISC6 043E                   _TRISC7 043F  __end_of__initialization 07FC  
         __pcstackCOMMON 0070        __end_of_Port_Init 07A4               __pmaintext 07A4  
           ??_UART_Write 0070            ?_UART_TX_Init 0070       __end_of_UART_Write 077F  
                __ptext1 0773                  __ptext2 077F                  __ptext3 078E  
         ??_UART_TX_Init 0070     end_of_initialization 07FC           UART_Write@data 0070  
    start_initialization 07FC                _Port_Init 078E     __end_of_UART_TX_Init 078E  
              ___latbits 0002               ?_Port_Init 0070              ??_Port_Init 0070  
           _UART_TX_Init 077F                 main@Data 0074               _UART_Write 0773  
