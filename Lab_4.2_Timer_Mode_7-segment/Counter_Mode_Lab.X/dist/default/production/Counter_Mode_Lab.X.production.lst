

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 25 23:58:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171     0793                     __pidataBANK0:
   172                           
   173                           ;initializer for main@F1009
   174     0793  343F               	retlw	63
   175     0794  3406               	retlw	6
   176     0795  345B               	retlw	91
   177     0796  344F               	retlw	79
   178     0797  3466               	retlw	102
   179     0798  346D               	retlw	109
   180     0799  347D               	retlw	125
   181     079A  3407               	retlw	7
   182     079B  347F               	retlw	127
   183     079C  346F               	retlw	111
   184     000E                     _TMR1	set	14
   185     0006                     _PORTB	set	6
   186     0080                     _TMR1ON	set	128
   187     0082                     _T1SYNC	set	130
   188     0085                     _T1CKPS1	set	133
   189     0084                     _T1CKPS0	set	132
   190     0083                     _T1OSCEN	set	131
   191     0081                     _TMR1CS	set	129
   192     0086                     _TRISB	set	134
   193                           
   194                           	psect	cinit
   195     07EE                     start_initialization:	
   196                           ; #config settings
   197                           
   198     07EE                     __initialization:
   199                           
   200                           ; Initialize objects allocated to BANK0
   201     07EE  1383               	bcf	3,7	;select IRP bank0
   202     07EF  302A               	movlw	low (__pdataBANK0+10)
   203     07F0  00FD               	movwf	btemp+-1
   204     07F1  3007               	movlw	high __pidataBANK0
   205     07F2  00FE               	movwf	btemp
   206     07F3  3093               	movlw	low __pidataBANK0
   207     07F4  00FF               	movwf	btemp+1
   208     07F5  3020               	movlw	low __pdataBANK0
   209     07F6  0084               	movwf	4
   210     07F7  120A  118A  27AC  120A  118A  	fcall	init_ram0
   211     07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FC                     __end_of__initialization:
   215     07FC  0183               	clrf	3
   216     07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	dataBANK0
   219     0020                     __pdataBANK0:
   220     0020                     main@F1009:
   221     0020                     	ds	10
   222                           
   223                           	psect	inittext
   224     07A8                     init_fetch0:	
   225                           ;	Called with low address in FSR and high address in W
   226                           
   227     07A8  087E               	movf	btemp,w
   228     07A9  008A               	movwf	10
   229     07AA  087F               	movf	btemp+1,w
   230     07AB  0082               	movwf	2
   231     07AC                     init_ram0:	
   232                           ;Called with:
   233                           ;	high address of idata address in btemp 
   234                           ;	low address of idata address in btemp+1 
   235                           ;	low address of data in FSR
   236                           ;	high address + 1 of data in btemp-1
   237                           
   238     07AC  120A  118A  27A8  120A  118A  	fcall	init_fetch0
   239     07B1  0080               	movwf	0
   240     07B2  0A84               	incf	4,f
   241     07B3  0804               	movf	4,w
   242     07B4  067D               	xorwf	btemp+-1,w
   243     07B5  1903               	btfsc	3,2
   244     07B6  3400               	retlw	0
   245     07B7  0AFF               	incf	btemp+1,f
   246     07B8  1903               	btfsc	3,2
   247     07B9  0AFE               	incf	btemp,f
   248     07BA  2FAC               	goto	init_ram0
   249                           
   250                           	psect	cstackCOMMON
   251     0070                     __pcstackCOMMON:
   252     0070                     ?_Port_Init:
   253     0070                     ??_Port_Init:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     ?_Timer1_init:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0070                     ??_Timer1_init:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     ?_main:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0070                     ??_main:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270     0070                     	ds	4
   271     0074                     main@segments_code:
   272                           
   273                           ; 10 bytes @ 0x4
   274     0074                     	ds	10
   275                           
   276                           	psect	maintext
   277     07BB                     __pmaintext:	
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 36 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;  segments_cod   10    4[COMMON] unsigned char [10]
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:        10       0       0       0       0
   299 ;;      Temps:          4       0       0       0       0
   300 ;;      Totals:        14       0       0       0       0
   301 ;;Total ram usage:       14 bytes
   302 ;; Hardware stack levels required when called: 1
   303 ;; This function calls:
   304 ;;		_Port_Init
   305 ;;		_Timer1_init
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311     07BB                     _main:	
   312                           ;psect for function _main
   313                           
   314     07BB                     l621:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   317                           
   318                           
   319                           ;main.c: 37:     Port_Init();
   320     07BB  120A  118A  278C  120A  118A  	fcall	_Port_Init
   321                           
   322                           ;main.c: 38:     Timer1_init();
   323     07C0  120A  118A  279D  120A  118A  	fcall	_Timer1_init
   324     07C5                     l623:
   325                           
   326                           ;main.c: 39:     unsigned char segments_code[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x0
      +                          7,0x7F,0x6F};
   327     07C5  3074               	movlw	main@segments_code& (0+255)
   328     07C6  0084               	movwf	4
   329     07C7  3020               	movlw	low main@F1009
   330     07C8  00F0               	movwf	??_main
   331     07C9  0804               	movf	4,w
   332     07CA  00F1               	movwf	??_main+1
   333     07CB  300A               	movlw	10
   334     07CC  00F2               	movwf	??_main+2
   335     07CD                     u30:
   336     07CD  0870               	movf	??_main,w
   337     07CE  0084               	movwf	4
   338     07CF  1383               	bcf	3,7	;select IRP bank0
   339     07D0  0800               	movf	0,w
   340     07D1  00F3               	movwf	??_main+3
   341     07D2  0AF0               	incf	??_main,f
   342     07D3  0871               	movf	??_main+1,w
   343     07D4  0084               	movwf	4
   344     07D5  0873               	movf	??_main+3,w
   345     07D6  0080               	movwf	0
   346     07D7  0AF1               	incf	??_main+1,f
   347     07D8  0BF2               	decfsz	??_main+2,f
   348     07D9  2FCD               	goto	u30
   349     07DA                     l625:
   350                           
   351                           ;main.c: 42:         PORTB=segments_code[TMR1];
   352     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   353     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   354     07DC  080E               	movf	14,w	;volatile
   355     07DD  3E74               	addlw	(low (main@segments_code| 0))& (0+255)
   356     07DE  0084               	movwf	4
   357     07DF  0800               	movf	0,w
   358     07E0  0086               	movwf	6	;volatile
   359     07E1                     l627:
   360                           
   361                           ;main.c: 43:         if(TMR1==10){TMR1=0;}
   362     07E1  300A               	movlw	10
   363     07E2  060E               	xorwf	14,w	;volatile
   364     07E3  040F               	iorwf	15,w	;volatile
   365     07E4  1D03               	btfss	3,2
   366     07E5  2FE7               	goto	u41
   367     07E6  2FE8               	goto	u40
   368     07E7                     u41:
   369     07E7  2FDA               	goto	l625
   370     07E8                     u40:
   371     07E8                     l629:
   372     07E8  018E               	clrf	14	;volatile
   373     07E9  018F               	clrf	15	;volatile
   374     07EA  2FDA               	goto	l625
   375     07EB  120A  118A  2800   	ljmp	start
   376     07EE                     __end_of_main:
   377                           
   378                           	psect	text1
   379     079D                     __ptext1:	
   380 ;; *************** function _Timer1_init *****************
   381 ;; Defined at:
   382 ;;		line 24 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		status,2
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0
   399 ;;      Totals:         0       0       0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409     079D                     _Timer1_init:	
   410                           ;psect for function _Timer1_init
   411                           
   412     079D                     l607:	
   413                           ;incstack = 0
   414                           ; Regs used in _Timer1_init: [status,2]
   415                           
   416                           
   417                           ;main.c: 25: TMR1=0x00;
   418     079D  1283               	bcf	3,5	;RP0=0, select bank0
   419     079E  1303               	bcf	3,6	;RP1=0, select bank0
   420     079F  018E               	clrf	14	;volatile
   421     07A0  018F               	clrf	15	;volatile
   422     07A1                     l609:
   423                           
   424                           ;main.c: 26: TMR1CS=1;
   425     07A1  1490               	bsf	16,1	;volatile
   426     07A2                     l611:
   427                           
   428                           ;main.c: 27: T1OSCEN=1;
   429     07A2  1590               	bsf	16,3	;volatile
   430     07A3                     l613:
   431                           
   432                           ;main.c: 29: T1CKPS0=0;
   433     07A3  1210               	bcf	16,4	;volatile
   434     07A4                     l615:
   435                           
   436                           ;main.c: 30: T1CKPS1=0;
   437     07A4  1290               	bcf	16,5	;volatile
   438     07A5                     l617:
   439                           
   440                           ;main.c: 31: T1SYNC=0;
   441     07A5  1110               	bcf	16,2	;volatile
   442     07A6                     l619:
   443                           
   444                           ;main.c: 32: TMR1ON=1;
   445     07A6  1410               	bsf	16,0	;volatile
   446     07A7                     l24:
   447     07A7  0008               	return
   448     07A8                     __end_of_Timer1_init:
   449                           
   450                           	psect	text2
   451     078C                     __ptext2:	
   452 ;; *************** function _Port_Init *****************
   453 ;; Defined at:
   454 ;;		line 16 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		status,2
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481     078C                     _Port_Init:	
   482                           ;psect for function _Port_Init
   483                           
   484     078C                     l605:	
   485                           ;incstack = 0
   486                           ; Regs used in _Port_Init: [status,2]
   487                           
   488                           
   489                           ;main.c: 17:     TRISB&=~0xFF;
   490     078C  1683               	bsf	3,5	;RP0=1, select bank1
   491     078D  1303               	bcf	3,6	;RP1=0, select bank1
   492     078E  0186               	clrf	6	;volatile
   493                           
   494                           ;main.c: 18:     PORTB&=~0xFF;
   495     078F  1283               	bcf	3,5	;RP0=0, select bank0
   496     0790  1303               	bcf	3,6	;RP1=0, select bank0
   497     0791  0186               	clrf	6	;volatile
   498     0792                     l21:
   499     0792  0008               	return
   500     0793                     __end_of_Port_Init:
   501     007E                     btemp	set	126	;btemp
   502     007E                     wtemp0	set	126
   503                           
   504                           	psect	config
   505                           
   506                           ;Config register CONFIG @ 0x2007
   507                           ;	Oscillator Selection bits
   508                           ;	FOSC = XT, XT oscillator
   509                           ;	Watchdog Timer Enable bit
   510                           ;	WDTE = OFF, WDT disabled
   511                           ;	Power-up Timer Enable bit
   512                           ;	PWRTE = ON, PWRT enabled
   513                           ;	Brown-out Reset Enable bit
   514                           ;	BOREN = ON, BOR enabled
   515                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   516                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   517                           ;	Data EEPROM Memory Code Protection bit
   518                           ;	CPD = OFF, Data EEPROM code protection off
   519                           ;	Flash Program Memory Write Enable bits
   520                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   521                           ;	In-Circuit Debugger Mode bit
   522                           ;	DEBUG = 0x1, unprogrammed default
   523                           ;	Flash Program Memory Code Protection bit
   524                           ;	CP = OFF, Code protection off
   525     2007                     	org	8199
   526     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0      24
                                              0 COMMON    14    14      0
                          _Port_Init
                        _Timer1_init
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _Timer1_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 25 23:58:11 2024

                      pc 0002                       l21 0792                       l24 07A7  
                     u30 07CD                       u40 07E8                       u41 07E7  
                     fsr 0004                      l611 07A2                      l605 078C  
                    l613 07A3                      l621 07BB                      l615 07A4  
                    l607 079D                      l623 07C5                      l617 07A5  
                    l609 07A1                      l625 07DA                      l619 07A6  
                    l627 07E1                      l629 07E8                      fsr0 0004  
                    indf 0000                     _TMR1 000E                     _main 07BB  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070                   _T1SYNC 0082  
                 _TMR1CS 0081                   _TMR1ON 0080            ??_Timer1_init 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0793  
    __end_of_Timer1_init 07A8        __end_of_Port_Init 0793               __pmaintext 07BB  
                _T1CKPS0 0084                  _T1CKPS1 0085                  _T1OSCEN 0083  
      main@segments_code 0074              _Timer1_init 079D                  __ptext1 079D  
                __ptext2 078C     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 07A8                _Port_Init 078C              __pdataBANK0 0020  
              ___latbits 0002             ?_Timer1_init 0070               ?_Port_Init 0070  
              main@F1009 0020              ??_Port_Init 0070                 init_ram0 07AC  
