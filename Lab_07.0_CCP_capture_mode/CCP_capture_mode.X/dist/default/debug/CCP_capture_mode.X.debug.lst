

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 26 18:18:52 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0015                     _CCPR1	set	21
   170     000E                     _TMR1	set	14
   171     0017                     _CCP1CON	set	23
   172     0008                     _PORTD	set	8
   173     0006                     _PORTB	set	6
   174     0062                     _CCP1IF	set	98
   175     005F                     _GIE	set	95
   176     005E                     _PEIE	set	94
   177     0080                     _TMR1ON	set	128
   178     0082                     _T1SYNC	set	130
   179     0085                     _T1CKPS1	set	133
   180     0084                     _T1CKPS0	set	132
   181     0083                     _T1OSCEN	set	131
   182     0081                     _TMR1CS	set	129
   183     0087                     _TRISC	set	135
   184     0088                     _TRISD	set	136
   185     0086                     _TRISB	set	134
   186     0462                     _CCP1IE	set	1122
   187                           
   188                           	psect	cinit
   189     000F                     start_initialization:	
   190                           ; #config settings
   191                           
   192     000F                     __initialization:
   193     000F                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     000F                     __end_of__initialization:
   197     000F  0183               	clrf	3
   198     0010  120A  118A  282C   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201     0070                     __pcstackCOMMON:
   202     0070                     ?_Port_Init:
   203     0070                     ?_Timer1_init:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_CCP_capture:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_ISR:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ??_ISR:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 1 bytes @ 0x0
   220     0070                     	ds	2
   221     0072                     ??_Port_Init:
   222     0072                     ??_Timer1_init:	
   223                           ; 1 bytes @ 0x2
   224                           
   225     0072                     ??_CCP_capture:	
   226                           ; 1 bytes @ 0x2
   227                           
   228     0072                     ??_main:	
   229                           ; 1 bytes @ 0x2
   230                           
   231                           
   232                           	psect	maintext
   233     002C                     __pmaintext:	
   234                           ; 1 bytes @ 0x2
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 49 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : B00/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0
   257 ;;      Totals:         0       0       0       0       0
   258 ;;Total ram usage:        0 bytes
   259 ;; Hardware stack levels required when called: 2
   260 ;; This function calls:
   261 ;;		_CCP_capture
   262 ;;		_Port_Init
   263 ;;		_Timer1_init
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269     002C                     _main:	
   270                           ;psect for function _main
   271                           
   272     002C                     l631:	
   273                           ;incstack = 0
   274                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   275                           
   276                           
   277                           ;main.c: 50:     Port_Init();
   278     002C  120A  118A  2013  120A  118A  	fcall	_Port_Init
   279     0031                     l633:
   280                           
   281                           ;main.c: 51:     Timer1_init();
   282     0031  120A  118A  2064  120A  118A  	fcall	_Timer1_init
   283     0036                     l635:
   284                           
   285                           ;main.c: 52:     CCP_capture();
   286     0036  120A  118A  2043  120A  118A  	fcall	_CCP_capture
   287     003B                     l637:
   288                           
   289                           ;main.c: 54:     PORTB=TMR1;
   290     003B  1283               	bcf	3,5	;RP0=0, select bank0
   291     003C  1303               	bcf	3,6	;RP1=0, select bank0
   292     003D  080E               	movf	14,w	;volatile
   293     003E  0086               	movwf	6	;volatile
   294     003F  283B               	goto	l637
   295     0040  120A  118A  280C   	ljmp	start
   296     0043                     __end_of_main:
   297                           
   298                           	psect	text1
   299     0064                     __ptext1:	
   300 ;; *************** function _Timer1_init *****************
   301 ;; Defined at:
   302 ;;		line 28 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		status,2
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels used: 1
   322 ;; Hardware stack levels required when called: 1
   323 ;; This function calls:
   324 ;;		Nothing
   325 ;; This function is called by:
   326 ;;		_main
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330     0064                     _Timer1_init:	
   331                           ;psect for function _Timer1_init
   332                           
   333     0064                     l605:	
   334                           ;incstack = 0
   335                           ; Regs used in _Timer1_init: [status,2]
   336                           
   337                           
   338                           ;main.c: 29: TMR1=0x00;
   339     0064  1283               	bcf	3,5	;RP0=0, select bank0
   340     0065  1303               	bcf	3,6	;RP1=0, select bank0
   341     0066  018E               	clrf	14	;volatile
   342     0067  018F               	clrf	15	;volatile
   343     0068                     l607:
   344                           
   345                           ;main.c: 30: TMR1CS=1;
   346     0068  1490               	bsf	16,1	;volatile
   347     0069                     l609:
   348                           
   349                           ;main.c: 31: T1OSCEN=1;
   350     0069  1590               	bsf	16,3	;volatile
   351     006A                     l611:
   352                           
   353                           ;main.c: 34: T1CKPS0=0;
   354     006A  1210               	bcf	16,4	;volatile
   355     006B                     l613:
   356                           
   357                           ;main.c: 35: T1CKPS1=0;
   358     006B  1290               	bcf	16,5	;volatile
   359     006C                     l615:
   360                           
   361                           ;main.c: 36: T1SYNC=0;
   362     006C  1110               	bcf	16,2	;volatile
   363     006D                     l617:
   364                           
   365                           ;main.c: 37: TMR1ON=1;
   366     006D  1410               	bsf	16,0	;volatile
   367     006E                     l42:
   368     006E  0008               	return
   369     006F                     __end_of_Timer1_init:
   370                           
   371                           	psect	text2
   372     0013                     __ptext2:	
   373 ;; *************** function _Port_Init *****************
   374 ;; Defined at:
   375 ;;		line 20 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, btemp+1
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used: 1
   395 ;; Hardware stack levels required when called: 1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403     0013                     _Port_Init:	
   404                           ;psect for function _Port_Init
   405                           
   406     0013                     l603:	
   407                           ;incstack = 0
   408                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   409                           
   410                           
   411                           ;main.c: 21:     TRISB&=~0x0F;
   412     0013  30F0               	movlw	240
   413     0014  00FF               	movwf	btemp+1
   414     0015  087F               	movf	btemp+1,w
   415     0016  1683               	bsf	3,5	;RP0=1, select bank1
   416     0017  1303               	bcf	3,6	;RP1=0, select bank1
   417     0018  0586               	andwf	6,f	;volatile
   418                           
   419                           ;main.c: 22:     PORTB&=~0x0F;
   420     0019  30F0               	movlw	240
   421     001A  00FF               	movwf	btemp+1
   422     001B  087F               	movf	btemp+1,w
   423     001C  1283               	bcf	3,5	;RP0=0, select bank0
   424     001D  1303               	bcf	3,6	;RP1=0, select bank0
   425     001E  0586               	andwf	6,f	;volatile
   426                           
   427                           ;main.c: 23:     TRISD&=~0x0F;
   428     001F  30F0               	movlw	240
   429     0020  00FF               	movwf	btemp+1
   430     0021  087F               	movf	btemp+1,w
   431     0022  1683               	bsf	3,5	;RP0=1, select bank1
   432     0023  1303               	bcf	3,6	;RP1=0, select bank1
   433     0024  0588               	andwf	8,f	;volatile
   434                           
   435                           ;main.c: 24:     PORTD&=~0x0F;
   436     0025  30F0               	movlw	240
   437     0026  00FF               	movwf	btemp+1
   438     0027  087F               	movf	btemp+1,w
   439     0028  1283               	bcf	3,5	;RP0=0, select bank0
   440     0029  1303               	bcf	3,6	;RP1=0, select bank0
   441     002A  0588               	andwf	8,f	;volatile
   442     002B                     l39:
   443     002B  0008               	return
   444     002C                     __end_of_Port_Init:
   445                           
   446                           	psect	text3
   447     0043                     __ptext3:	
   448 ;; *************** function _CCP_capture *****************
   449 ;; Defined at:
   450 ;;		line 40 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0, btemp+1
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478     0043                     _CCP_capture:	
   479                           ;psect for function _CCP_capture
   480                           
   481     0043                     l619:	
   482                           ;incstack = 0
   483                           ; Regs used in _CCP_capture: [wreg+status,2+status,0+btemp+1]
   484                           
   485                           
   486                           ;main.c: 41: CCP1CON|=0x05;
   487     0043  3005               	movlw	5
   488     0044  00FF               	movwf	btemp+1
   489     0045  087F               	movf	btemp+1,w
   490     0046  1283               	bcf	3,5	;RP0=0, select bank0
   491     0047  1303               	bcf	3,6	;RP1=0, select bank0
   492     0048  0497               	iorwf	23,f	;volatile
   493     0049                     l621:
   494                           
   495                           ;main.c: 42: TRISC|=0x04;
   496     0049  1683               	bsf	3,5	;RP0=1, select bank1
   497     004A  1303               	bcf	3,6	;RP1=0, select bank1
   498     004B  1507               	bsf	7,2	;volatile
   499     004C                     l623:
   500                           
   501                           ;main.c: 43: PEIE=1;
   502     004C  170B               	bsf	11,6	;volatile
   503     004D                     l625:
   504                           
   505                           ;main.c: 44: GIE=1;
   506     004D  178B               	bsf	11,7	;volatile
   507     004E                     l627:
   508                           
   509                           ;main.c: 45: CCP1IE=1;
   510     004E  150C               	bsf	12,2	;volatile
   511     004F                     l629:
   512                           
   513                           ;main.c: 46: CCPR1=0x00;
   514     004F  1283               	bcf	3,5	;RP0=0, select bank0
   515     0050  1303               	bcf	3,6	;RP1=0, select bank0
   516     0051  0195               	clrf	21	;volatile
   517     0052  0196               	clrf	22	;volatile
   518     0053                     l45:
   519     0053  0008               	return
   520     0054                     __end_of_CCP_capture:
   521                           
   522                           	psect	text4
   523     0054                     __ptext4:	
   524 ;; *************** function _ISR *****************
   525 ;; Defined at:
   526 ;;		line 58 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          2       0       0       0       0
   543 ;;      Totals:         2       0       0       0       0
   544 ;;Total ram usage:        2 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		Interrupt level 1
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     0054                     _ISR:	
   554                           ;psect for function _ISR
   555                           
   556     0054                     i1l639:
   557                           
   558                           ;main.c: 59:     if(CCP1IF){
   559     0054  1283               	bcf	3,5	;RP0=0, select bank0
   560     0055  1303               	bcf	3,6	;RP1=0, select bank0
   561     0056  1D0C               	btfss	12,2	;volatile
   562     0057  2859               	goto	u1_21
   563     0058  285A               	goto	u1_20
   564     0059                     u1_21:
   565     0059  285D               	goto	i1l59
   566     005A                     u1_20:
   567     005A                     i1l641:
   568                           
   569                           ;main.c: 60:     PORTD=CCPR1;
   570     005A  0815               	movf	21,w	;volatile
   571     005B  0088               	movwf	8	;volatile
   572     005C                     i1l643:
   573                           
   574                           ;main.c: 61:     CCP1IF=0;
   575     005C  110C               	bcf	12,2	;volatile
   576     005D                     i1l59:
   577     005D  0871               	movf	??_ISR+1,w
   578     005E  008A               	movwf	10
   579     005F  0E70               	swapf	??_ISR,w
   580     0060  0083               	movwf	3
   581     0061  0EFE               	swapf	btemp,f
   582     0062  0E7E               	swapf	btemp,w
   583     0063  0009               	retfie
   584     0064                     __end_of_ISR:
   585     007E                     btemp	set	126	;btemp
   586     007E                     wtemp0	set	126
   587                           
   588                           	psect	intentry
   589     0004                     __pintentry:	
   590                           ;incstack = 0
   591                           ; Regs used in _ISR: [wreg]
   592                           
   593     0004                     interrupt_function:
   594     007E                     saved_w	set	btemp
   595     0004  00FE               	movwf	btemp
   596     0005  0E03               	swapf	3,w
   597     0006  00F0               	movwf	??_ISR
   598     0007  080A               	movf	10,w
   599     0008  00F1               	movwf	??_ISR+1
   600     0009  120A  118A  2854   	ljmp	_ISR
   601                           
   602                           	psect	config
   603                           
   604                           ;Config register CONFIG @ 0x2007
   605                           ;	Oscillator Selection bits
   606                           ;	FOSC = XT, XT oscillator
   607                           ;	Watchdog Timer Enable bit
   608                           ;	WDTE = ON, WDT enabled
   609                           ;	Power-up Timer Enable bit
   610                           ;	PWRTE = ON, PWRT enabled
   611                           ;	Brown-out Reset Enable bit
   612                           ;	BOREN = ON, BOR enabled
   613                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   614                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   615                           ;	Data EEPROM Memory Code Protection bit
   616                           ;	CPD = OFF, Data EEPROM code protection off
   617                           ;	Flash Program Memory Write Enable bits
   618                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   619                           ;	In-Circuit Debugger Mode bit
   620                           ;	DEBUG = 0x1, unprogrammed default
   621                           ;	Flash Program Memory Code Protection bit
   622                           ;	CP = OFF, Code protection off
   623     2007                     	org	8199
   624     2007  3F75               	dw	16245

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _CCP_capture
                          _Port_Init
                        _Timer1_init
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP_capture                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP_capture
   _Port_Init
   _Timer1_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 26 18:18:52 2024

                     l42 006E                       l45 0053                       l39 002B  
                    l603 0013                      l611 006A                      l621 0049  
                    l613 006B                      l605 0064                      l623 004C  
                    l615 006C                      l607 0068                      l631 002C  
                    l625 004D                      l617 006D                      l609 0069  
                    l633 0031                      l627 004E                      l619 0043  
                    l635 0036                      l629 004F                      l637 003B  
                    _GIE 005F                      _ISR 0054                     ?_ISR 0070  
                   _PEIE 005E                     i1l59 005D                     _TMR1 000E  
                   u1_20 005A                     u1_21 0059                     _main 002C  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _CCPR1 0015                    i1l641 005A  
                  i1l643 005C                    i1l639 0054                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0043  
                 ??_main 0072                   _CCP1IE 0462                   _CCP1IF 0062  
                 _T1SYNC 0082                   _TMR1CS 0081                   _TMR1ON 0080  
          ??_Timer1_init 0072                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070      __end_of_Timer1_init 006F        __end_of_Port_Init 002C  
             __pmaintext 002C               __pintentry 0004                  _CCP1CON 0017  
                _T1CKPS0 0084                  _T1CKPS1 0085                  _T1OSCEN 0083  
            _Timer1_init 0064                  __ptext1 0064                  __ptext2 0013  
                __ptext3 0043                  __ptext4 0054     end_of_initialization 000F  
          ??_CCP_capture 0072      __end_of_CCP_capture 0054      start_initialization 000F  
            __end_of_ISR 0064                _Port_Init 0013                ___latbits 0002  
           ?_Timer1_init 0070              _CCP_capture 0043               ?_Port_Init 0070  
      interrupt_function 0004              ??_Port_Init 0072                 intlevel1 0000  
           ?_CCP_capture 0070  
