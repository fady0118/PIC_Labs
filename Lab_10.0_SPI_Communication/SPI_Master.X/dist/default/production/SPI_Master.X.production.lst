

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 14 20:31:04 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0013                     _SSPBUF	set	19
   169     0008                     _PORTD	set	8
   170     0006                     _PORTB	set	6
   171     00A4                     _CKP	set	164
   172     00A5                     _SSPEN	set	165
   173     00A0                     _SSPM0	set	160
   174     00A1                     _SSPM1	set	161
   175     00A2                     _SSPM2	set	162
   176     00A3                     _SSPM3	set	163
   177     0032                     _RB2	set	50
   178     0031                     _RB1	set	49
   179     0030                     _RB0	set	48
   180     0088                     _TRISD	set	136
   181     0086                     _TRISB	set	134
   182     043D                     _TRISC5	set	1085
   183     043C                     _TRISC4	set	1084
   184     043B                     _TRISC3	set	1083
   185     04A7                     _SMP	set	1191
   186     04A6                     _CKE	set	1190
   187                           
   188                           	psect	cinit
   189     07FB                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07FB                     __initialization:
   193                           
   194                           ; Clear objects allocated to COMMON
   195     07FB  01F4               	clrf	__pbssCOMMON& (0+127)
   196     07FC                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199     07FC                     __end_of__initialization:
   200     07FC  0183               	clrf	3
   201     07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMMON
   204     0074                     __pbssCOMMON:
   205     0074                     _data:
   206     0074                     	ds	1
   207                           
   208                           	psect	cstackCOMMON
   209     0070                     __pcstackCOMMON:
   210     0070                     ?_SPI_Master_init:
   211     0070                     ??_SPI_Master_init:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_Write_data:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ??_Write_data:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ?_port_init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ??_port_init:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ?_main:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     Write_data@data:	
   230                           ; 1 bytes @ 0x0
   231                           
   232                           
   233                           ; 1 bytes @ 0x0
   234     0070                     	ds	1
   235     0071                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x1
   238     0071                     	ds	3
   239                           
   240                           	psect	maintext
   241     07A4                     __pmaintext:	
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 36 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : B00/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   261 ;;      Params:         0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0
   263 ;;      Temps:          3       0       0       0       0
   264 ;;      Totals:         3       0       0       0       0
   265 ;;Total ram usage:        3 bytes
   266 ;; Hardware stack levels required when called: 1
   267 ;; This function calls:
   268 ;;		_SPI_Master_init
   269 ;;		_Write_data
   270 ;;		_port_init
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276     07A4                     _main:	
   277                           ;psect for function _main
   278                           
   279     07A4                     l620:	
   280                           ;incstack = 0
   281                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   282                           
   283                           
   284                           ;main.c: 37: SPI_Master_init();
   285     07A4  120A  118A  2781  120A  118A  	fcall	_SPI_Master_init
   286     07A9                     l622:
   287                           
   288                           ;main.c: 38: port_init();
   289     07A9  120A  118A  2791  120A  118A  	fcall	_port_init
   290     07AE                     l624:
   291                           
   292                           ;main.c: 40: if(RB0){
   293     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   294     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   295     07B0  1C06               	btfss	6,0	;volatile
   296     07B1  2FB3               	goto	u11
   297     07B2  2FB4               	goto	u10
   298     07B3                     u11:
   299     07B3  2FC5               	goto	l630
   300     07B4                     u10:
   301     07B4                     l626:
   302                           
   303                           ;main.c: 41: data++;
   304     07B4  3001               	movlw	1
   305     07B5  00FF               	movwf	btemp+1
   306     07B6  087F               	movf	btemp+1,w
   307     07B7  07F4               	addwf	_data,f
   308     07B8                     l628:
   309                           
   310                           ;main.c: 42:   _delay((unsigned long)((350)*(4000000/4000.0)));
   311     07B8  3002               	movlw	2
   312     07B9  00F3               	movwf	??_main+2
   313     07BA  30C7               	movlw	199
   314     07BB  00F2               	movwf	??_main+1
   315     07BC  3088               	movlw	136
   316     07BD  00F1               	movwf	??_main
   317     07BE                     u47:
   318     07BE  0BF1               	decfsz	??_main,f
   319     07BF  2FBE               	goto	u47
   320     07C0  0BF2               	decfsz	??_main+1,f
   321     07C1  2FBE               	goto	u47
   322     07C2  0BF3               	decfsz	??_main+2,f
   323     07C3  2FBE               	goto	u47
   324     07C4  0000               	nop
   325     07C5                     l630:
   326                           
   327                           ;main.c: 44: if(RB1){
   328     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   329     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   330     07C7  1C86               	btfss	6,1	;volatile
   331     07C8  2FCA               	goto	u21
   332     07C9  2FCB               	goto	u20
   333     07CA                     u21:
   334     07CA  2FDA               	goto	l636
   335     07CB                     u20:
   336     07CB                     l632:
   337                           
   338                           ;main.c: 45: data--;
   339     07CB  3001               	movlw	1
   340     07CC  02F4               	subwf	_data,f
   341     07CD                     l634:
   342                           
   343                           ;main.c: 46:   _delay((unsigned long)((350)*(4000000/4000.0)));
   344     07CD  3002               	movlw	2
   345     07CE  00F3               	movwf	??_main+2
   346     07CF  30C7               	movlw	199
   347     07D0  00F2               	movwf	??_main+1
   348     07D1  3088               	movlw	136
   349     07D2  00F1               	movwf	??_main
   350     07D3                     u57:
   351     07D3  0BF1               	decfsz	??_main,f
   352     07D4  2FD3               	goto	u57
   353     07D5  0BF2               	decfsz	??_main+1,f
   354     07D6  2FD3               	goto	u57
   355     07D7  0BF3               	decfsz	??_main+2,f
   356     07D8  2FD3               	goto	u57
   357     07D9  0000               	nop
   358     07DA                     l636:
   359                           
   360                           ;main.c: 48: if(RB2){
   361     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   362     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   363     07DC  1D06               	btfss	6,2	;volatile
   364     07DD  2FDF               	goto	u31
   365     07DE  2FE0               	goto	u30
   366     07DF                     u31:
   367     07DF  2FF3               	goto	l642
   368     07E0                     u30:
   369     07E0                     l638:
   370                           
   371                           ;main.c: 49: Write_data(data);
   372     07E0  0874               	movf	_data,w
   373     07E1  120A  118A  277B  120A  118A  	fcall	_Write_data
   374     07E6                     l640:
   375                           
   376                           ;main.c: 50:   _delay((unsigned long)((350)*(4000000/4000.0)));
   377     07E6  3002               	movlw	2
   378     07E7  00F3               	movwf	??_main+2
   379     07E8  30C7               	movlw	199
   380     07E9  00F2               	movwf	??_main+1
   381     07EA  3088               	movlw	136
   382     07EB  00F1               	movwf	??_main
   383     07EC                     u67:
   384     07EC  0BF1               	decfsz	??_main,f
   385     07ED  2FEC               	goto	u67
   386     07EE  0BF2               	decfsz	??_main+1,f
   387     07EF  2FEC               	goto	u67
   388     07F0  0BF3               	decfsz	??_main+2,f
   389     07F1  2FEC               	goto	u67
   390     07F2  0000               	nop
   391     07F3                     l642:
   392                           
   393                           ;main.c: 52: PORTD=data;
   394     07F3  0874               	movf	_data,w
   395     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   396     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   397     07F6  0088               	movwf	8	;volatile
   398     07F7  2FAE               	goto	l624
   399     07F8  120A  118A  2800   	ljmp	start
   400     07FB                     __end_of_main:
   401                           
   402                           	psect	text1
   403     0791                     __ptext1:	
   404 ;; *************** function _port_init *****************
   405 ;; Defined at:
   406 ;;		line 28 in file "main.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, btemp+1
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433     0791                     _port_init:	
   434                           ;psect for function _port_init
   435                           
   436     0791                     l610:	
   437                           ;incstack = 0
   438                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   439                           
   440                           
   441                           ;main.c: 29: TRISB|=0x07;
   442     0791  3007               	movlw	7
   443     0792  00FF               	movwf	btemp+1
   444     0793  087F               	movf	btemp+1,w
   445     0794  1683               	bsf	3,5	;RP0=1, select bank1
   446     0795  1303               	bcf	3,6	;RP1=0, select bank1
   447     0796  0486               	iorwf	6,f	;volatile
   448     0797                     l612:
   449                           
   450                           ;main.c: 30: PORTB=0;
   451     0797  1283               	bcf	3,5	;RP0=0, select bank0
   452     0798  1303               	bcf	3,6	;RP1=0, select bank0
   453     0799  0186               	clrf	6	;volatile
   454     079A                     l614:
   455                           
   456                           ;main.c: 31: TRISD&=~0x0F;
   457     079A  30F0               	movlw	240
   458     079B  00FF               	movwf	btemp+1
   459     079C  087F               	movf	btemp+1,w
   460     079D  1683               	bsf	3,5	;RP0=1, select bank1
   461     079E  1303               	bcf	3,6	;RP1=0, select bank1
   462     079F  0588               	andwf	8,f	;volatile
   463                           
   464                           ;main.c: 32: PORTD=0;
   465     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   466     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   467     07A2  0188               	clrf	8	;volatile
   468     07A3                     l49:
   469     07A3  0008               	return
   470     07A4                     __end_of_port_init:
   471                           
   472                           	psect	text2
   473     077B                     __ptext2:	
   474 ;; *************** function _Write_data *****************
   475 ;; Defined at:
   476 ;;		line 84 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  data            1    wreg     unsigned char 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  data            1    0[COMMON] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         1       0       0       0       0
   494 ;;Total ram usage:        1 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503     077B                     _Write_data:	
   504                           ;psect for function _Write_data
   505                           
   506                           
   507                           ;incstack = 0
   508                           ; Regs used in _Write_data: [wreg]
   509                           ;Write_data@data stored from wreg
   510     077B  00F0               	movwf	Write_data@data
   511     077C                     l618:
   512                           
   513                           ;main.c: 85: SSPBUF=data;
   514     077C  0870               	movf	Write_data@data,w
   515     077D  1283               	bcf	3,5	;RP0=0, select bank0
   516     077E  1303               	bcf	3,6	;RP1=0, select bank0
   517     077F  0093               	movwf	19	;volatile
   518     0780                     l66:
   519     0780  0008               	return
   520     0781                     __end_of_Write_data:
   521                           
   522                           	psect	text3
   523     0781                     __ptext3:	
   524 ;; *************** function _SPI_Master_init *****************
   525 ;; Defined at:
   526 ;;		line 59 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		None
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     0781                     _SPI_Master_init:	
   554                           ;psect for function _SPI_Master_init
   555                           
   556     0781                     l616:	
   557                           ;incstack = 0
   558                           ; Regs used in _SPI_Master_init: []
   559                           
   560                           
   561                           ;main.c: 61: SSPM3=0;
   562     0781  1283               	bcf	3,5	;RP0=0, select bank0
   563     0782  1303               	bcf	3,6	;RP1=0, select bank0
   564     0783  1194               	bcf	20,3	;volatile
   565                           
   566                           ;main.c: 62: SSPM2=0;
   567     0784  1114               	bcf	20,2	;volatile
   568                           
   569                           ;main.c: 63: SSPM1=0;
   570     0785  1094               	bcf	20,1	;volatile
   571                           
   572                           ;main.c: 64: SSPM0=0;
   573     0786  1014               	bcf	20,0	;volatile
   574                           
   575                           ;main.c: 67: SSPEN=1;
   576     0787  1694               	bsf	20,5	;volatile
   577                           
   578                           ;main.c: 70: CKP=0;
   579     0788  1214               	bcf	20,4	;volatile
   580                           
   581                           ;main.c: 71: CKE=0;
   582     0789  1683               	bsf	3,5	;RP0=1, select bank1
   583     078A  1303               	bcf	3,6	;RP1=0, select bank1
   584     078B  1314               	bcf	20,6	;volatile
   585                           
   586                           ;main.c: 74: SMP=0;
   587     078C  1394               	bcf	20,7	;volatile
   588                           
   589                           ;main.c: 77: TRISC3=0;
   590     078D  1187               	bcf	7,3	;volatile
   591                           
   592                           ;main.c: 78: TRISC4=1;
   593     078E  1607               	bsf	7,4	;volatile
   594                           
   595                           ;main.c: 79: TRISC5=0;
   596     078F  1287               	bcf	7,5	;volatile
   597     0790                     l63:
   598     0790  0008               	return
   599     0791                     __end_of_SPI_Master_init:
   600     007E                     btemp	set	126	;btemp
   601     007E                     wtemp0	set	126
   602                           
   603                           	psect	config
   604                           
   605                           ;Config register CONFIG @ 0x2007
   606                           ;	Oscillator Selection bits
   607                           ;	FOSC = XT, XT oscillator
   608                           ;	Watchdog Timer Enable bit
   609                           ;	WDTE = OFF, WDT disabled
   610                           ;	Power-up Timer Enable bit
   611                           ;	PWRTE = ON, PWRT enabled
   612                           ;	Brown-out Reset Enable bit
   613                           ;	BOREN = ON, BOR enabled
   614                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   615                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   616                           ;	Data EEPROM Memory Code Protection bit
   617                           ;	CPD = OFF, Data EEPROM code protection off
   618                           ;	Flash Program Memory Write Enable bits
   619                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   620                           ;	In-Circuit Debugger Mode bit
   621                           ;	DEBUG = 0x1, unprogrammed default
   622                           ;	Flash Program Memory Code Protection bit
   623                           ;	CP = OFF, Code protection off
   624     2007                     	org	8199
   625     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Write_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                    _SPI_Master_init
                         _Write_data
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_data                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_init
   _Write_data
   _port_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 14 20:31:04 2024

        _SPI_Master_init 0781                       l63 0790                       l49 07A3  
                     l66 0780                       u10 07B4                       u11 07B3  
                     u20 07CB                       u21 07CA                       u30 07E0  
                     u31 07DF                       u47 07BE                       u57 07D3  
                     u67 07EC                      l610 0791                      l612 0797  
                    l620 07A4                      l614 079A                      l630 07C5  
                    l622 07A9                      l616 0781                      l640 07E6  
                    l632 07CB                      l624 07AE                      l618 077C  
                    l642 07F3                      l634 07CD                      l626 07B4  
                    l636 07DA                      l628 07B8                      l638 07E0  
                    _CKE 04A6                      _CKP 00A4                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _SMP 04A7  
                   _data 0074                     _main 07A4                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTD 0008                    _SSPM0 00A0                    _SSPM1 00A1  
                  _SSPM2 00A2                    _SSPM3 00A3                    _TRISB 0086  
                  _TRISD 0088                    _SSPEN 00A5                    status 0003  
                  wtemp0 007E  __end_of_SPI_Master_init 0791          __initialization 07FB  
           __end_of_main 07FB                   ??_main 0071                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _SSPBUF 0013  
__end_of__initialization 07FC         ?_SPI_Master_init 0070           __pcstackCOMMON 0070  
             _Write_data 077B               __pmaintext 07A4           Write_data@data 0070  
            ?_Write_data 0070                  __ptext1 0791                  __ptext2 077B  
                __ptext3 0781     end_of_initialization 07FC        __end_of_port_init 07A4  
    start_initialization 07FB              __pbssCOMMON 0074                ___latbits 0002  
           ??_Write_data 0070       __end_of_Write_data 0781                _port_init 0791  
      ??_SPI_Master_init 0070               ?_port_init 0070              ??_port_init 0070  
