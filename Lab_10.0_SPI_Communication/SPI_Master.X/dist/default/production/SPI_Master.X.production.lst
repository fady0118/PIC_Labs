

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 14 15:44:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0013                     _SSPBUF	set	19
   169     0008                     _PORTD	set	8
   170     0006                     _PORTB	set	6
   171     005F                     _GIE	set	95
   172     005E                     _PEIE	set	94
   173     00A4                     _CKP	set	164
   174     00A5                     _SSPEN	set	165
   175     00A0                     _SSPM0	set	160
   176     00A1                     _SSPM1	set	161
   177     00A2                     _SSPM2	set	162
   178     00A3                     _SSPM3	set	163
   179     0032                     _RB2	set	50
   180     0031                     _RB1	set	49
   181     0030                     _RB0	set	48
   182     0088                     _TRISD	set	136
   183     0086                     _TRISB	set	134
   184     0463                     _SSPIE	set	1123
   185     043D                     _TRISC5	set	1085
   186     043C                     _TRISC4	set	1084
   187     043B                     _TRISC3	set	1083
   188     04A7                     _SMP	set	1191
   189     04A6                     _CKE	set	1190
   190                           
   191                           	psect	cinit
   192     07FB                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07FB                     __initialization:
   196                           
   197                           ; Clear objects allocated to COMMON
   198     07FB  01F0               	clrf	__pbssCOMMON& (0+127)
   199     07FC                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202     07FC                     __end_of__initialization:
   203     07FC  0183               	clrf	3
   204     07FD  120A  118A  2FCF   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMMON
   207     0070                     __pbssCOMMON:
   208     0070                     _data:
   209     0070                     	ds	1
   210                           
   211                           	psect	cstackCOMMON
   212     0071                     __pcstackCOMMON:
   213     0071                     ?_SPI_Master_init:
   214     0071                     ??_SPI_Master_init:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0071                     ?_Write_data:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0071                     ??_Write_data:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0071                     ?_port_init:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0071                     ??_port_init:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0071                     ?_main:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0071                     Write_data@data:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237     0071                     	ds	1
   238     0072                     ??_main:
   239                           
   240                           	psect	maintext
   241     07CF                     __pmaintext:	
   242                           ; 1 bytes @ 0x1
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 36 in file "main.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : B00/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   262 ;;      Params:         0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0
   265 ;;      Totals:         0       0       0       0       0
   266 ;;Total ram usage:        0 bytes
   267 ;; Hardware stack levels required when called: 1
   268 ;; This function calls:
   269 ;;		_SPI_Master_init
   270 ;;		_Write_data
   271 ;;		_port_init
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277     07CF                     _main:	
   278                           ;psect for function _main
   279                           
   280     07CF                     l624:	
   281                           ;incstack = 0
   282                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   283                           
   284                           
   285                           ;main.c: 37: SPI_Master_init();
   286     07CF  120A  118A  27A9  120A  118A  	fcall	_SPI_Master_init
   287     07D4                     l626:
   288                           
   289                           ;main.c: 38: port_init();
   290     07D4  120A  118A  27BC  120A  118A  	fcall	_port_init
   291     07D9                     l628:
   292                           
   293                           ;main.c: 40: if(RB0){
   294     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   295     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   296     07DB  1C06               	btfss	6,0	;volatile
   297     07DC  2FDE               	goto	u11
   298     07DD  2FDF               	goto	u10
   299     07DE                     u11:
   300     07DE  2FE3               	goto	l632
   301     07DF                     u10:
   302     07DF                     l630:
   303                           
   304                           ;main.c: 41: data++;
   305     07DF  3001               	movlw	1
   306     07E0  00FF               	movwf	btemp+1
   307     07E1  087F               	movf	btemp+1,w
   308     07E2  07F0               	addwf	_data,f
   309     07E3                     l632:
   310                           
   311                           ;main.c: 43: if(RB1){
   312     07E3  1C86               	btfss	6,1	;volatile
   313     07E4  2FE6               	goto	u21
   314     07E5  2FE7               	goto	u20
   315     07E6                     u21:
   316     07E6  2FE9               	goto	l636
   317     07E7                     u20:
   318     07E7                     l634:
   319                           
   320                           ;main.c: 44: data--;
   321     07E7  3001               	movlw	1
   322     07E8  02F0               	subwf	_data,f
   323     07E9                     l636:
   324                           
   325                           ;main.c: 46: if(RB2){
   326     07E9  1D06               	btfss	6,2	;volatile
   327     07EA  2FEC               	goto	u31
   328     07EB  2FED               	goto	u30
   329     07EC                     u31:
   330     07EC  2FF3               	goto	l640
   331     07ED                     u30:
   332     07ED                     l638:
   333                           
   334                           ;main.c: 47: Write_data(data);
   335     07ED  0870               	movf	_data,w
   336     07EE  120A  118A  27A3  120A  118A  	fcall	_Write_data
   337     07F3                     l640:
   338                           
   339                           ;main.c: 49: PORTD=data;
   340     07F3  0870               	movf	_data,w
   341     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   342     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   343     07F6  0088               	movwf	8	;volatile
   344     07F7  2FD9               	goto	l628
   345     07F8  120A  118A  2800   	ljmp	start
   346     07FB                     __end_of_main:
   347                           
   348                           	psect	text1
   349     07BC                     __ptext1:	
   350 ;; *************** function _port_init *****************
   351 ;; Defined at:
   352 ;;		line 28 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, btemp+1
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379     07BC                     _port_init:	
   380                           ;psect for function _port_init
   381                           
   382     07BC                     l614:	
   383                           ;incstack = 0
   384                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   385                           
   386                           
   387                           ;main.c: 29: TRISB|=0x07;
   388     07BC  3007               	movlw	7
   389     07BD  00FF               	movwf	btemp+1
   390     07BE  087F               	movf	btemp+1,w
   391     07BF  1683               	bsf	3,5	;RP0=1, select bank1
   392     07C0  1303               	bcf	3,6	;RP1=0, select bank1
   393     07C1  0486               	iorwf	6,f	;volatile
   394     07C2                     l616:
   395                           
   396                           ;main.c: 30: PORTB=0;
   397     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   398     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   399     07C4  0186               	clrf	6	;volatile
   400     07C5                     l618:
   401                           
   402                           ;main.c: 31: TRISD&=~0x0F;
   403     07C5  30F0               	movlw	240
   404     07C6  00FF               	movwf	btemp+1
   405     07C7  087F               	movf	btemp+1,w
   406     07C8  1683               	bsf	3,5	;RP0=1, select bank1
   407     07C9  1303               	bcf	3,6	;RP1=0, select bank1
   408     07CA  0588               	andwf	8,f	;volatile
   409                           
   410                           ;main.c: 32: PORTD=0;
   411     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   412     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   413     07CD  0188               	clrf	8	;volatile
   414     07CE                     l53:
   415     07CE  0008               	return
   416     07CF                     __end_of_port_init:
   417                           
   418                           	psect	text2
   419     07A3                     __ptext2:	
   420 ;; *************** function _Write_data *****************
   421 ;; Defined at:
   422 ;;		line 85 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  data            1    wreg     unsigned char 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  data            1    0[COMMON] unsigned char 
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         1       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0
   439 ;;      Totals:         1       0       0       0       0
   440 ;;Total ram usage:        1 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449     07A3                     _Write_data:	
   450                           ;psect for function _Write_data
   451                           
   452                           
   453                           ;incstack = 0
   454                           ; Regs used in _Write_data: [wreg]
   455                           ;Write_data@data stored from wreg
   456     07A3  00F1               	movwf	Write_data@data
   457     07A4                     l622:
   458                           
   459                           ;main.c: 86: SSPBUF=data;
   460     07A4  0871               	movf	Write_data@data,w
   461     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   462     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   463     07A7  0093               	movwf	19	;volatile
   464     07A8                     l70:
   465     07A8  0008               	return
   466     07A9                     __end_of_Write_data:
   467                           
   468                           	psect	text3
   469     07A9                     __ptext3:	
   470 ;; *************** function _SPI_Master_init *****************
   471 ;; Defined at:
   472 ;;		line 56 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		None
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0
   489 ;;      Totals:         0       0       0       0       0
   490 ;;Total ram usage:        0 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     07A9                     _SPI_Master_init:	
   500                           ;psect for function _SPI_Master_init
   501                           
   502     07A9                     l620:	
   503                           ;incstack = 0
   504                           ; Regs used in _SPI_Master_init: []
   505                           
   506                           
   507                           ;main.c: 58: SSPM3=0;
   508     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   509     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   510     07AB  1194               	bcf	20,3	;volatile
   511                           
   512                           ;main.c: 59: SSPM2=0;
   513     07AC  1114               	bcf	20,2	;volatile
   514                           
   515                           ;main.c: 60: SSPM1=0;
   516     07AD  1094               	bcf	20,1	;volatile
   517                           
   518                           ;main.c: 61: SSPM0=0;
   519     07AE  1014               	bcf	20,0	;volatile
   520                           
   521                           ;main.c: 64: SSPEN=1;
   522     07AF  1694               	bsf	20,5	;volatile
   523                           
   524                           ;main.c: 67: CKP=0;
   525     07B0  1214               	bcf	20,4	;volatile
   526                           
   527                           ;main.c: 68: CKE=0;
   528     07B1  1683               	bsf	3,5	;RP0=1, select bank1
   529     07B2  1303               	bcf	3,6	;RP1=0, select bank1
   530     07B3  1314               	bcf	20,6	;volatile
   531                           
   532                           ;main.c: 71: SMP=0;
   533     07B4  1394               	bcf	20,7	;volatile
   534                           
   535                           ;main.c: 74: TRISC3=0;
   536     07B5  1187               	bcf	7,3	;volatile
   537                           
   538                           ;main.c: 75: TRISC4=1;
   539     07B6  1607               	bsf	7,4	;volatile
   540                           
   541                           ;main.c: 76: TRISC5=0;
   542     07B7  1287               	bcf	7,5	;volatile
   543                           
   544                           ;main.c: 79: SSPIE=1;
   545     07B8  158C               	bsf	12,3	;volatile
   546                           
   547                           ;main.c: 80: PEIE=1;
   548     07B9  170B               	bsf	11,6	;volatile
   549                           
   550                           ;main.c: 81: GIE=1;
   551     07BA  178B               	bsf	11,7	;volatile
   552     07BB                     l67:
   553     07BB  0008               	return
   554     07BC                     __end_of_SPI_Master_init:
   555     007E                     btemp	set	126	;btemp
   556     007E                     wtemp0	set	126
   557                           
   558                           	psect	config
   559                           
   560                           ;Config register CONFIG @ 0x2007
   561                           ;	Oscillator Selection bits
   562                           ;	FOSC = XT, XT oscillator
   563                           ;	Watchdog Timer Enable bit
   564                           ;	WDTE = OFF, WDT disabled
   565                           ;	Power-up Timer Enable bit
   566                           ;	PWRTE = ON, PWRT enabled
   567                           ;	Brown-out Reset Enable bit
   568                           ;	BOREN = ON, BOR enabled
   569                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   570                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   571                           ;	Data EEPROM Memory Code Protection bit
   572                           ;	CPD = OFF, Data EEPROM code protection off
   573                           ;	Flash Program Memory Write Enable bits
   574                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   575                           ;	In-Circuit Debugger Mode bit
   576                           ;	DEBUG = 0x1, unprogrammed default
   577                           ;	Flash Program Memory Code Protection bit
   578                           ;	CP = OFF, Code protection off
   579     2007                     	org	8199
   580     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Write_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                    _SPI_Master_init
                         _Write_data
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_data                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_init
   _Write_data
   _port_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       2      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 14 15:44:11 2024

        _SPI_Master_init 07A9                       l53 07CE                       l70 07A8  
                     l67 07BB                       u10 07DF                       u11 07DE  
                     u20 07E7                       u21 07E6                       u30 07ED  
                     u31 07EC                      l620 07A9                      l622 07A4  
                    l614 07BC                      l630 07DF                      l616 07C2  
                    l640 07F3                      l632 07E3                      l624 07CF  
                    l618 07C5                      l634 07E7                      l626 07D4  
                    l636 07E9                      l628 07D9                      l638 07ED  
                    _CKE 04A6                      _CKP 00A4                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _SMP 04A7                     _PEIE 005E                     _data 0070  
                   _main 07CF                     btemp 007E                     start 0000  
                  ?_main 0071                    _PORTB 0006                    _PORTD 0008  
                  _SSPM0 00A0                    _SSPM1 00A1                    _SSPM2 00A2  
                  _SSPM3 00A3                    _TRISB 0086                    _TRISD 0088  
                  _SSPIE 0463                    _SSPEN 00A5                    status 0003  
                  wtemp0 007E  __end_of_SPI_Master_init 07BC          __initialization 07FB  
           __end_of_main 07FB                   ??_main 0072                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _SSPBUF 0013  
__end_of__initialization 07FC         ?_SPI_Master_init 0071           __pcstackCOMMON 0071  
             _Write_data 07A3               __pmaintext 07CF           Write_data@data 0071  
            ?_Write_data 0071                  __ptext1 07BC                  __ptext2 07A3  
                __ptext3 07A9     end_of_initialization 07FC        __end_of_port_init 07CF  
    start_initialization 07FB              __pbssCOMMON 0070                ___latbits 0002  
           ??_Write_data 0071       __end_of_Write_data 07A9                _port_init 07BC  
      ??_SPI_Master_init 0071               ?_port_init 0071              ??_port_init 0071  
