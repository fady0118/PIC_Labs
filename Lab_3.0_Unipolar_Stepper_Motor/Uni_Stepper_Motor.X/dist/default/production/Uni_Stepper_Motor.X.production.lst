

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 22 22:35:22 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0007                     _PORTC	set	7
   166     0087                     _TRISC	set	135
   167                           
   168                           	psect	cinit
   169     07FC                     start_initialization:	
   170                           ; #config settings
   171                           
   172     07FC                     __initialization:
   173     07FC                     end_of_initialization:	
   174                           ;End of C runtime variable initialization code
   175                           
   176     07FC                     __end_of__initialization:
   177     07FC  0183               	clrf	3
   178     07FD  120A  118A  2F7C   	ljmp	_main	;jump to C main() function
   179                           
   180                           	psect	cstackCOMMON
   181     0070                     __pcstackCOMMON:
   182     0070                     ?_Port_Init:
   183     0070                     ??_Port_Init:	
   184                           ; 1 bytes @ 0x0
   185                           
   186     0070                     ?_main:	
   187                           ; 1 bytes @ 0x0
   188                           
   189     0070                     ??_main:	
   190                           ; 1 bytes @ 0x0
   191                           
   192                           
   193                           ; 1 bytes @ 0x0
   194     0070                     	ds	3
   195     0073                     main@j:
   196                           
   197                           ; 1 bytes @ 0x3
   198     0073                     	ds	1
   199     0074                     main@i:
   200                           
   201                           ; 1 bytes @ 0x4
   202     0074                     	ds	1
   203                           
   204                           	psect	maintext
   205     077C                     __pmaintext:	
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 20 in file "main.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;  i               1    4[COMMON] unsigned char 
   216 ;;  j               1    3[COMMON] unsigned char 
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   221 ;; Tracked objects:
   222 ;;		On entry : B00/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   226 ;;      Params:         0       0       0       0       0
   227 ;;      Locals:         2       0       0       0       0
   228 ;;      Temps:          3       0       0       0       0
   229 ;;      Totals:         5       0       0       0       0
   230 ;;Total ram usage:        5 bytes
   231 ;; Hardware stack levels required when called: 1
   232 ;; This function calls:
   233 ;;		_Port_Init
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239     077C                     _main:	
   240                           ;psect for function _main
   241                           
   242     077C                     l569:	
   243                           ;incstack = 0
   244                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   245                           
   246                           
   247                           ;main.c: 21:     Port_Init();
   248     077C  120A  118A  276F  120A  118A  	fcall	_Port_Init
   249     0781                     l571:
   250                           
   251                           ;main.c: 23:     unsigned char i=0;
   252     0781  01F4               	clrf	main@i
   253     0782                     l573:
   254                           
   255                           ;main.c: 24:     unsigned char j=0;
   256     0782  01F3               	clrf	main@j
   257                           
   258                           ;main.c: 26:         while(j<48){
   259     0783  2FA2               	goto	l581
   260     0784                     l575:
   261                           
   262                           ;main.c: 27:             PORTC=(1<<i);
   263     0784  3001               	movlw	1
   264     0785  00F0               	movwf	??_main
   265     0786  0A74               	incf	main@i,w
   266     0787  2F8A               	goto	u14
   267     0788                     u15:
   268     0788  1003               	clrc
   269     0789  0DF0               	rlf	??_main,f
   270     078A                     u14:
   271     078A  3EFF               	addlw	-1
   272     078B  1D03               	skipz
   273     078C  2F88               	goto	u15
   274     078D  0870               	movf	??_main,w
   275     078E  1283               	bcf	3,5	;RP0=0, select bank0
   276     078F  1303               	bcf	3,6	;RP1=0, select bank0
   277     0790  0087               	movwf	7	;volatile
   278                           
   279                           ;main.c: 28:             i=(i+1)%4;
   280     0791  0874               	movf	main@i,w
   281     0792  3E01               	addlw	1
   282     0793  3903               	andlw	3
   283     0794  00F4               	movwf	main@i
   284     0795                     l577:
   285                           
   286                           ;main.c: 29:             j++;
   287     0795  3001               	movlw	1
   288     0796  00FF               	movwf	btemp+1
   289     0797  087F               	movf	btemp+1,w
   290     0798  07F3               	addwf	main@j,f
   291     0799                     l579:
   292                           
   293                           ;main.c: 30:             _delay((unsigned long)((50)*(4000000/4000.0)));
   294     0799  3041               	movlw	65
   295     079A  00F1               	movwf	??_main+1
   296     079B  30EE               	movlw	238
   297     079C  00F0               	movwf	??_main
   298     079D                     u57:
   299     079D  0BF0               	decfsz	??_main,f
   300     079E  2F9D               	goto	u57
   301     079F  0BF1               	decfsz	??_main+1,f
   302     07A0  2F9D               	goto	u57
   303     07A1  0000               	nop
   304     07A2                     l581:
   305                           
   306                           ;main.c: 26:         while(j<48){
   307     07A2  3030               	movlw	48
   308     07A3  0273               	subwf	main@j,w
   309     07A4  1C03               	skipc
   310     07A5  2FA7               	goto	u21
   311     07A6  2FA8               	goto	u20
   312     07A7                     u21:
   313     07A7  2F84               	goto	l575
   314     07A8                     u20:
   315     07A8                     l583:
   316                           
   317                           ;main.c: 33:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   318     07A8  3006               	movlw	6
   319     07A9  00F2               	movwf	??_main+2
   320     07AA  3013               	movlw	19
   321     07AB  00F1               	movwf	??_main+1
   322     07AC  30AD               	movlw	173
   323     07AD  00F0               	movwf	??_main
   324     07AE                     u67:
   325     07AE  0BF0               	decfsz	??_main,f
   326     07AF  2FAE               	goto	u67
   327     07B0  0BF1               	decfsz	??_main+1,f
   328     07B1  2FAE               	goto	u67
   329     07B2  0BF2               	decfsz	??_main+2,f
   330     07B3  2FAE               	goto	u67
   331     07B4  2FB5               	nop2
   332     07B5                     l585:
   333                           
   334                           ;main.c: 34:         PORTC&=0xF0;
   335     07B5  30F0               	movlw	240
   336     07B6  00FF               	movwf	btemp+1
   337     07B7  087F               	movf	btemp+1,w
   338     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   339     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   340     07BA  0587               	andwf	7,f	;volatile
   341     07BB                     l587:
   342                           
   343                           ;main.c: 36:     i=0;
   344     07BB  01F4               	clrf	main@i
   345     07BC                     l589:
   346                           
   347                           ;main.c: 37:     j=0;
   348     07BC  01F3               	clrf	main@j
   349                           
   350                           ;main.c: 38:         while(j<48){
   351     07BD  2FDF               	goto	l599
   352     07BE                     l591:
   353                           
   354                           ;main.c: 39:             PORTC=(8>>i);
   355     07BE  0A74               	incf	main@i,w
   356     07BF  00FF               	movwf	btemp+1
   357     07C0  3008               	movlw	8
   358     07C1  00F0               	movwf	??_main
   359     07C2  3000               	movlw	0
   360     07C3  00F1               	movwf	??_main+1
   361     07C4  2FC8               	goto	u34
   362     07C5                     u35:
   363     07C5  0D71               	rlf	??_main+1,w
   364     07C6  0CF1               	rrf	??_main+1,f
   365     07C7  0CF0               	rrf	??_main,f
   366     07C8                     u34:
   367     07C8  0BFF               	decfsz	btemp+1,f
   368     07C9  2FC5               	goto	u35
   369     07CA  0870               	movf	??_main,w
   370     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   371     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   372     07CD  0087               	movwf	7	;volatile
   373     07CE                     l593:
   374                           
   375                           ;main.c: 40:             i=(i+1)%4;
   376     07CE  0874               	movf	main@i,w
   377     07CF  3E01               	addlw	1
   378     07D0  3903               	andlw	3
   379     07D1  00F4               	movwf	main@i
   380     07D2                     l595:
   381                           
   382                           ;main.c: 41:             j++;
   383     07D2  3001               	movlw	1
   384     07D3  00FF               	movwf	btemp+1
   385     07D4  087F               	movf	btemp+1,w
   386     07D5  07F3               	addwf	main@j,f
   387     07D6                     l597:
   388                           
   389                           ;main.c: 42:             _delay((unsigned long)((50)*(4000000/4000.0)));
   390     07D6  3041               	movlw	65
   391     07D7  00F1               	movwf	??_main+1
   392     07D8  30EE               	movlw	238
   393     07D9  00F0               	movwf	??_main
   394     07DA                     u77:
   395     07DA  0BF0               	decfsz	??_main,f
   396     07DB  2FDA               	goto	u77
   397     07DC  0BF1               	decfsz	??_main+1,f
   398     07DD  2FDA               	goto	u77
   399     07DE  0000               	nop
   400     07DF                     l599:
   401                           
   402                           ;main.c: 38:         while(j<48){
   403     07DF  3030               	movlw	48
   404     07E0  0273               	subwf	main@j,w
   405     07E1  1C03               	skipc
   406     07E2  2FE4               	goto	u41
   407     07E3  2FE5               	goto	u40
   408     07E4                     u41:
   409     07E4  2FBE               	goto	l591
   410     07E5                     u40:
   411     07E5                     l601:
   412                           
   413                           ;main.c: 45:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   414     07E5  3006               	movlw	6
   415     07E6  00F2               	movwf	??_main+2
   416     07E7  3013               	movlw	19
   417     07E8  00F1               	movwf	??_main+1
   418     07E9  30AD               	movlw	173
   419     07EA  00F0               	movwf	??_main
   420     07EB                     u87:
   421     07EB  0BF0               	decfsz	??_main,f
   422     07EC  2FEB               	goto	u87
   423     07ED  0BF1               	decfsz	??_main+1,f
   424     07EE  2FEB               	goto	u87
   425     07EF  0BF2               	decfsz	??_main+2,f
   426     07F0  2FEB               	goto	u87
   427     07F1  2FF2               	nop2
   428     07F2                     l603:
   429                           
   430                           ;main.c: 46:         PORTC&=0xF0;
   431     07F2  30F0               	movlw	240
   432     07F3  00FF               	movwf	btemp+1
   433     07F4  087F               	movf	btemp+1,w
   434     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   435     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   436     07F7  0587               	andwf	7,f	;volatile
   437     07F8  2F81               	goto	l571
   438     07F9  120A  118A  2800   	ljmp	start
   439     07FC                     __end_of_main:
   440                           
   441                           	psect	text1
   442     076F                     __ptext1:	
   443 ;; *************** function _Port_Init *****************
   444 ;; Defined at:
   445 ;;		line 15 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, btemp+1
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472     076F                     _Port_Init:	
   473                           ;psect for function _Port_Init
   474                           
   475     076F                     l567:	
   476                           ;incstack = 0
   477                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   478                           
   479                           
   480                           ;main.c: 16:     TRISC&=~0x0F;
   481     076F  30F0               	movlw	240
   482     0770  00FF               	movwf	btemp+1
   483     0771  087F               	movf	btemp+1,w
   484     0772  1683               	bsf	3,5	;RP0=1, select bank1
   485     0773  1303               	bcf	3,6	;RP1=0, select bank1
   486     0774  0587               	andwf	7,f	;volatile
   487                           
   488                           ;main.c: 17:     PORTC&=0xF0;
   489     0775  30F0               	movlw	240
   490     0776  00FF               	movwf	btemp+1
   491     0777  087F               	movf	btemp+1,w
   492     0778  1283               	bcf	3,5	;RP0=0, select bank0
   493     0779  1303               	bcf	3,6	;RP1=0, select bank0
   494     077A  0587               	andwf	7,f	;volatile
   495     077B                     l9:
   496     077B  0008               	return
   497     077C                     __end_of_Port_Init:
   498     007E                     btemp	set	126	;btemp
   499     007E                     wtemp0	set	126
   500                           
   501                           	psect	config
   502                           
   503                           ;Config register CONFIG @ 0x2007
   504                           ;	Oscillator Selection bits
   505                           ;	FOSC = XT, XT oscillator
   506                           ;	Watchdog Timer Enable bit
   507                           ;	WDTE = OFF, WDT disabled
   508                           ;	Power-up Timer Enable bit
   509                           ;	PWRTE = ON, PWRT enabled
   510                           ;	Brown-out Reset Enable bit
   511                           ;	BOREN = ON, BOR enabled
   512                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   513                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   514                           ;	Data EEPROM Memory Code Protection bit
   515                           ;	CPD = OFF, Data EEPROM code protection off
   516                           ;	Flash Program Memory Write Enable bits
   517                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   518                           ;	In-Circuit Debugger Mode bit
   519                           ;	DEBUG = 0x1, unprogrammed default
   520                           ;	Flash Program Memory Code Protection bit
   521                           ;	CP = OFF, Code protection off
   522     2007                     	org	8199
   523     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      90
                                              0 COMMON     5     5      0
                          _Port_Init
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 22 22:35:22 2024

                      l9 077B                       u20 07A8                       u21 07A7  
                     u14 078A                       u15 0788                       u40 07E5  
                     u41 07E4                       u34 07C8                       u35 07C5  
                     u57 079D                       u67 07AE                       u77 07DA  
                     u87 07EB                      l601 07E5                      l603 07F2  
                    l571 0781                      l581 07A2                      l573 0782  
                    l567 076F                      l591 07BE                      l583 07A8  
                    l575 0784                      l593 07CE                      l585 07B5  
                    l577 0795                      l569 077C                      l595 07D2  
                    l587 07BB                      l579 0799                      l597 07D6  
                    l589 07BC                      l599 07DF                     _main 077C  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTC 0007                    _TRISC 0087                    main@i 0074  
                  main@j 0073                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070        __end_of_Port_Init 077C  
             __pmaintext 077C                  __ptext1 076F     end_of_initialization 07FC  
    start_initialization 07FC                _Port_Init 076F                ___latbits 0002  
             ?_Port_Init 0070              ??_Port_Init 0070  
