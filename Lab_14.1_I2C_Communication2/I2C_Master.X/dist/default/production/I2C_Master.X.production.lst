

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 02 00:03:14 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173                           
   174                           	psect	idataCOMMON
   175     0759                     __pidataCOMMON:
   176                           
   177                           ;initializer for _Address
   178     0759  3441               	retlw	65
   179     0013                     _SSPBUF	set	19
   180     0014                     _SSPCON	set	20
   181     0008                     _PORTD	set	8
   182     0006                     _PORTB	set	6
   183     00A5                     _SSPEN	set	165
   184     0031                     _RB1	set	49
   185     0030                     _RB0	set	48
   186     0091                     _SSPCON2	set	145
   187     0094                     _SSPSTAT	set	148
   188     0093                     _SSPADD	set	147
   189     0087                     _TRISC	set	135
   190     0088                     _TRISD	set	136
   191     0086                     _TRISB	set	134
   192     048B                     _RCEN	set	1163
   193     048E                     _ACKSTAT	set	1166
   194     048C                     _ACKEN	set	1164
   195     048D                     _ACKDT	set	1165
   196     0489                     _RSEN	set	1161
   197     048A                     _PEN	set	1162
   198     0488                     _SEN	set	1160
   199                           
   200                           	psect	cinit
   201     07F6                     start_initialization:	
   202                           ; #config settings
   203                           
   204     07F6                     __initialization:
   205                           
   206                           ; Initialize objects allocated to COMMON
   207     07F6  120A  118A  2759  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   208     07FB  00F3               	movwf	__pdataCOMMON& (0+127)
   209     07FC                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212     07FC                     __end_of__initialization:
   213     07FC  0183               	clrf	3
   214     07FD  120A  118A  2FB9   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	dataCOMMON
   217     0073                     __pdataCOMMON:
   218     0073                     _Address:
   219     0073                     	ds	1
   220                           
   221                           	psect	cstackCOMMON
   222     0070                     __pcstackCOMMON:
   223     0070                     ?_I2C_Master_Init:
   224     0070                     ??_I2C_Master_Init:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_I2C_Start:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ??_I2C_Start:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_I2C_Write:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_I2C_Write:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_I2C_Read:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ??_I2C_Read:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?_I2C_Stop:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ??_I2C_Stop:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_port_init:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ??_port_init:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?_I2C_Wait:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ??_I2C_Wait:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     I2C_Write@Data:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     I2C_Read@Data:	
   270                           ; 1 bytes @ 0x0
   271                           
   272                           
   273                           ; 1 bytes @ 0x0
   274     0070                     	ds	1
   275     0071                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x1
   278     0071                     	ds	2
   279                           
   280                           	psect	maintext
   281     07B9                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 38 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0
   303 ;;      Temps:          2       0       0       0       0
   304 ;;      Totals:         2       0       0       0       0
   305 ;;Total ram usage:        2 bytes
   306 ;; Hardware stack levels required when called: 2
   307 ;; This function calls:
   308 ;;		_I2C_Master_Init
   309 ;;		_I2C_Read
   310 ;;		_I2C_Start
   311 ;;		_I2C_Stop
   312 ;;		_I2C_Write
   313 ;;		_port_init
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319     07B9                     _main:	
   320                           ;psect for function _main
   321                           
   322     07B9                     l689:	
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   325                           
   326                           
   327                           ;main.c: 39:     port_init();
   328     07B9  120A  118A  2796  120A  118A  	fcall	_port_init
   329                           
   330                           ;main.c: 40:     I2C_Master_Init();
   331     07BE  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Init
   332     07C3                     l691:
   333                           
   334                           ;main.c: 42:         if(RB0){ Address=0x41;}
   335     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   336     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   337     07C5  1C06               	btfss	6,0	;volatile
   338     07C6  2FC8               	goto	u31
   339     07C7  2FC9               	goto	u30
   340     07C8                     u31:
   341     07C8  2FCB               	goto	l695
   342     07C9                     u30:
   343     07C9                     l693:
   344     07C9  3041               	movlw	65
   345     07CA  00F3               	movwf	_Address
   346     07CB                     l695:
   347                           
   348                           ;main.c: 43:         if(RB1){ Address=0x61;}
   349     07CB  1C86               	btfss	6,1	;volatile
   350     07CC  2FCE               	goto	u41
   351     07CD  2FCF               	goto	u40
   352     07CE                     u41:
   353     07CE  2FD1               	goto	l699
   354     07CF                     u40:
   355     07CF                     l697:
   356     07CF  3061               	movlw	97
   357     07D0  00F3               	movwf	_Address
   358     07D1                     l699:
   359                           
   360                           ;main.c: 44:     I2C_Start();
   361     07D1  120A  118A  275A  120A  118A  	fcall	_I2C_Start
   362     07D6                     l701:
   363                           
   364                           ;main.c: 45:     I2C_Write(Address);
   365     07D6  0873               	movf	_Address,w
   366     07D7  120A  118A  2786  120A  118A  	fcall	_I2C_Write
   367     07DC                     l703:
   368                           
   369                           ;main.c: 46:     PORTD = I2C_Read();
   370     07DC  120A  118A  27A6  120A  118A  	fcall	_I2C_Read
   371     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   372     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   373     07E3  0088               	movwf	8	;volatile
   374     07E4                     l705:
   375                           
   376                           ;main.c: 47:     I2C_Stop();
   377     07E4  120A  118A  2763  120A  118A  	fcall	_I2C_Stop
   378                           
   379                           ;main.c: 48:     _delay((unsigned long)((100)*(4000000/4000.0)));
   380     07E9  3082               	movlw	130
   381     07EA  00F2               	movwf	??_main+1
   382     07EB  30DD               	movlw	221
   383     07EC  00F1               	movwf	??_main
   384     07ED                     u57:
   385     07ED  0BF1               	decfsz	??_main,f
   386     07EE  2FED               	goto	u57
   387     07EF  0BF2               	decfsz	??_main+1,f
   388     07F0  2FED               	goto	u57
   389     07F1  2FF2               	nop2
   390     07F2  2FC3               	goto	l691
   391     07F3  120A  118A  2800   	ljmp	start
   392     07F6                     __end_of_main:
   393                           
   394                           	psect	text1
   395     0796                     __ptext1:	
   396 ;; *************** function _port_init *****************
   397 ;; Defined at:
   398 ;;		line 30 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, btemp+1
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; This function calls:
   419 ;;		Nothing
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425     0796                     _port_init:	
   426                           ;psect for function _port_init
   427                           
   428     0796                     l645:	
   429                           ;incstack = 0
   430                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   431                           
   432                           
   433                           ;main.c: 31:     TRISB|=0x03;
   434     0796  3003               	movlw	3
   435     0797  00FF               	movwf	btemp+1
   436     0798  087F               	movf	btemp+1,w
   437     0799  1683               	bsf	3,5	;RP0=1, select bank1
   438     079A  1303               	bcf	3,6	;RP1=0, select bank1
   439     079B  0486               	iorwf	6,f	;volatile
   440     079C                     l647:
   441                           
   442                           ;main.c: 32:     PORTB=0;
   443     079C  1283               	bcf	3,5	;RP0=0, select bank0
   444     079D  1303               	bcf	3,6	;RP1=0, select bank0
   445     079E  0186               	clrf	6	;volatile
   446     079F                     l649:
   447                           
   448                           ;main.c: 33:     TRISD&=~0xFF;
   449     079F  1683               	bsf	3,5	;RP0=1, select bank1
   450     07A0  1303               	bcf	3,6	;RP1=0, select bank1
   451     07A1  0188               	clrf	8	;volatile
   452     07A2                     l651:
   453                           
   454                           ;main.c: 34:     PORTD=0;
   455     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   456     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   457     07A4  0188               	clrf	8	;volatile
   458     07A5                     l57:
   459     07A5  0008               	return
   460     07A6                     __end_of_port_init:
   461                           
   462                           	psect	text2
   463     0786                     __ptext2:	
   464 ;; *************** function _I2C_Write *****************
   465 ;; Defined at:
   466 ;;		line 89 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  Data            1    wreg     unsigned char 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  Data            1    0[COMMON] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      unsigned char 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, pclath, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         1       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         1       0       0       0       0
   484 ;;Total ram usage:        1 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 1
   487 ;; This function calls:
   488 ;;		_I2C_Wait
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494     0786                     _I2C_Write:	
   495                           ;psect for function _I2C_Write
   496                           
   497                           
   498                           ;incstack = 0
   499                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   500                           ;I2C_Write@Data stored from wreg
   501     0786  00F0               	movwf	I2C_Write@Data
   502     0787                     l665:
   503                           
   504                           ;main.c: 90:     I2C_Wait();
   505     0787  120A  118A  2779  120A  118A  	fcall	_I2C_Wait
   506     078C                     l667:
   507                           
   508                           ;main.c: 91:     SSPBUF=Data;
   509     078C  0870               	movf	I2C_Write@Data,w
   510     078D  1283               	bcf	3,5	;RP0=0, select bank0
   511     078E  1303               	bcf	3,6	;RP1=0, select bank0
   512     078F  0093               	movwf	19	;volatile
   513     0790                     l669:
   514                           
   515                           ;main.c: 92:     I2C_Wait();
   516     0790  120A  118A  2779  120A  118A  	fcall	_I2C_Wait
   517     0795                     l671:
   518     0795                     l94:	
   519                           ;main.c: 93:     return ACKSTAT;;	Return value of _I2C_Write is never used
   520                           
   521     0795  0008               	return
   522     0796                     __end_of_I2C_Write:
   523                           
   524                           	psect	text3
   525     0763                     __ptext3:	
   526 ;; *************** function _I2C_Stop *****************
   527 ;; Defined at:
   528 ;;		line 67 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 1
   549 ;; This function calls:
   550 ;;		_I2C_Wait
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556     0763                     _I2C_Stop:	
   557                           ;psect for function _I2C_Stop
   558                           
   559     0763                     l685:	
   560                           ;incstack = 0
   561                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
   562                           
   563                           
   564                           ;main.c: 69:     I2C_Wait();
   565     0763  120A  118A  2779  120A  118A  	fcall	_I2C_Wait
   566     0768                     l687:
   567                           
   568                           ;main.c: 70:     PEN=1;
   569     0768  1683               	bsf	3,5	;RP0=1, select bank1
   570     0769  1303               	bcf	3,6	;RP1=0, select bank1
   571     076A  1511               	bsf	17,2	;volatile
   572     076B                     l82:
   573     076B  0008               	return
   574     076C                     __end_of_I2C_Stop:
   575                           
   576                           	psect	text4
   577     075A                     __ptext4:	
   578 ;; *************** function _I2C_Start *****************
   579 ;; Defined at:
   580 ;;		line 62 in file "main.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 1
   601 ;; This function calls:
   602 ;;		_I2C_Wait
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     075A                     _I2C_Start:	
   609                           ;psect for function _I2C_Start
   610                           
   611     075A                     l661:	
   612                           ;incstack = 0
   613                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   614                           
   615                           
   616                           ;main.c: 64:     I2C_Wait();
   617     075A  120A  118A  2779  120A  118A  	fcall	_I2C_Wait
   618     075F                     l663:
   619                           
   620                           ;main.c: 65:     SEN=1;
   621     075F  1683               	bsf	3,5	;RP0=1, select bank1
   622     0760  1303               	bcf	3,6	;RP1=0, select bank1
   623     0761  1411               	bsf	17,0	;volatile
   624     0762                     l79:
   625     0762  0008               	return
   626     0763                     __end_of_I2C_Start:
   627                           
   628                           	psect	text5
   629     07A6                     __ptext5:	
   630 ;; *************** function _I2C_Read *****************
   631 ;; Defined at:
   632 ;;		line 95 in file "main.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  Data            1    0[COMMON] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      unsigned char 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         1       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0
   649 ;;      Totals:         1       0       0       0       0
   650 ;;Total ram usage:        1 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 1
   653 ;; This function calls:
   654 ;;		_I2C_Wait
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     07A6                     _I2C_Read:	
   661                           ;psect for function _I2C_Read
   662                           
   663     07A6                     l675:	
   664                           ;incstack = 0
   665                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
   666                           
   667                           
   668                           ;main.c: 96:     unsigned char Data;;main.c: 97:     I2C_Wait();
   669     07A6  120A  118A  2779  120A  118A  	fcall	_I2C_Wait
   670     07AB                     l677:
   671                           
   672                           ;main.c: 98:     RCEN=1;
   673     07AB  1683               	bsf	3,5	;RP0=1, select bank1
   674     07AC  1303               	bcf	3,6	;RP1=0, select bank1
   675     07AD  1591               	bsf	17,3	;volatile
   676                           
   677                           ;main.c: 99:     I2C_Wait();
   678     07AE  120A  118A  2779  120A  118A  	fcall	_I2C_Wait
   679     07B3                     l679:
   680                           
   681                           ;main.c: 100:     Data = SSPBUF;
   682     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   683     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   684     07B5  0813               	movf	19,w	;volatile
   685     07B6  00F0               	movwf	I2C_Read@Data
   686     07B7                     l681:
   687                           
   688                           ;main.c: 102:     return Data;
   689     07B7  0870               	movf	I2C_Read@Data,w
   690     07B8                     l97:
   691     07B8  0008               	return
   692     07B9                     __end_of_I2C_Read:
   693                           
   694                           	psect	text6
   695     0779                     __ptext6:	
   696 ;; *************** function _I2C_Wait *****************
   697 ;; Defined at:
   698 ;;		line 59 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0
   715 ;;      Totals:         0       0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_I2C_Start
   722 ;;		_I2C_Stop
   723 ;;		_I2C_Write
   724 ;;		_I2C_Read
   725 ;;		_I2C_Restart
   726 ;;		_I2C_ACK
   727 ;;		_I2C_NACK
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731     0779                     _I2C_Wait:	
   732                           ;psect for function _I2C_Wait
   733                           
   734     0779                     l641:	
   735                           ;incstack = 0
   736                           ; Regs used in _I2C_Wait: [wreg+status,2]
   737                           
   738     0779                     l73:	
   739                           ;main.c: 60:     while((SSPSTAT&0x04) || (SSPCON2&0x1F));
   740                           
   741     0779  1683               	bsf	3,5	;RP0=1, select bank1
   742     077A  1303               	bcf	3,6	;RP1=0, select bank1
   743     077B  1914               	btfsc	20,2	;volatile
   744     077C  2F7E               	goto	u11
   745     077D  2F7F               	goto	u10
   746     077E                     u11:
   747     077E  2F79               	goto	l73
   748     077F                     u10:
   749     077F                     l643:
   750     077F  0811               	movf	17,w	;volatile
   751     0780  391F               	andlw	31
   752     0781  1D03               	btfss	3,2
   753     0782  2F84               	goto	u21
   754     0783  2F85               	goto	u20
   755     0784                     u21:
   756     0784  2F79               	goto	l73
   757     0785                     u20:
   758     0785                     l76:
   759     0785  0008               	return
   760     0786                     __end_of_I2C_Wait:
   761                           
   762                           	psect	text7
   763     076C                     __ptext7:	
   764 ;; *************** function _I2C_Master_Init *****************
   765 ;; Defined at:
   766 ;;		line 53 in file "main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, btemp+1
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793     076C                     _I2C_Master_Init:	
   794                           ;psect for function _I2C_Master_Init
   795                           
   796     076C                     l653:	
   797                           ;incstack = 0
   798                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1]
   799                           
   800                           
   801                           ;main.c: 54:     TRISC|=0x18;
   802     076C  3018               	movlw	24
   803     076D  00FF               	movwf	btemp+1
   804     076E  087F               	movf	btemp+1,w
   805     076F  1683               	bsf	3,5	;RP0=1, select bank1
   806     0770  1303               	bcf	3,6	;RP1=0, select bank1
   807     0771  0487               	iorwf	7,f	;volatile
   808     0772                     l655:
   809                           
   810                           ;main.c: 55:     SSPADD=(4000000/(4*100000))-1;
   811     0772  3009               	movlw	9
   812     0773  0093               	movwf	19	;volatile
   813     0774                     l657:
   814                           
   815                           ;main.c: 56:     SSPCON|=0x08;
   816     0774  1283               	bcf	3,5	;RP0=0, select bank0
   817     0775  1303               	bcf	3,6	;RP1=0, select bank0
   818     0776  1594               	bsf	20,3	;volatile
   819     0777                     l659:
   820                           
   821                           ;main.c: 57:     SSPEN=1;
   822     0777  1694               	bsf	20,5	;volatile
   823     0778                     l70:
   824     0778  0008               	return
   825     0779                     __end_of_I2C_Master_Init:
   826     007E                     btemp	set	126	;btemp
   827     007E                     wtemp0	set	126
   828                           
   829                           	psect	config
   830                           
   831                           ;Config register CONFIG @ 0x2007
   832                           ;	Oscillator Selection bits
   833                           ;	FOSC = XT, XT oscillator
   834                           ;	Watchdog Timer Enable bit
   835                           ;	WDTE = OFF, WDT disabled
   836                           ;	Power-up Timer Enable bit
   837                           ;	PWRTE = ON, PWRT enabled
   838                           ;	Brown-out Reset Enable bit
   839                           ;	BOREN = ON, BOR enabled
   840                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   841                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   842                           ;	Data EEPROM Memory Code Protection bit
   843                           ;	CPD = OFF, Data EEPROM code protection off
   844                           ;	Flash Program Memory Write Enable bits
   845                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   846                           ;	In-Circuit Debugger Mode bit
   847                           ;	DEBUG = 0x1, unprogrammed default
   848                           ;	Flash Program Memory Code Protection bit
   849                           ;	CP = OFF, Code protection off
   850     2007                     	org	8199
   851     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Read
    _main->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              1 COMMON     2     2      0
                    _I2C_Master_Init
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Read
     _I2C_Wait
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _I2C_Write
     _I2C_Wait
   _port_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       4      12        0.0%
ABS                  0      0       4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 02 00:03:14 2024

                     l70 0778                       l73 0779                       l57 07A5  
                     l82 076B                       l76 0785                       l94 0795  
                     l79 0762                       l97 07B8                       u10 077F  
                     u11 077E                       u20 0785                       u21 0784  
                     u30 07C9                       u31 07C8                       u40 07CF  
                     u41 07CE                       u57 07ED                      l701 07D6  
                    l703 07DC                      l641 0779                      l705 07E4  
                    l643 077F                      l651 07A2                      l653 076C  
                    l661 075A                      l645 0796                      l655 0772  
                    l663 075F                      l671 0795                      l647 079C  
                    l657 0774                      l681 07B7                      l665 0787  
                    l649 079F                      l659 0777                      l675 07A6  
                    l667 078C                      l691 07C3                      l677 07AB  
                    l685 0763                      l669 0790                      l693 07C9  
                    l679 07B3                      l687 0768                      l695 07CB  
                    l697 07CF                      l689 07B9                      l699 07D1  
                    _RB0 0030                      _RB1 0031                      _PEN 048A  
                    _SEN 0488                     _RCEN 048B                     _RSEN 0489  
                   _main 07B9         __end_of_I2C_Read 07B9                     btemp 007E  
       __end_of_I2C_Wait 0786         __end_of_I2C_Stop 076C                     start 0000  
       ?_I2C_Master_Init 0070                    ?_main 0070                    _ACKEN 048C  
                  _ACKDT 048D                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPEN 00A5        __end_of_I2C_Start 0763        __end_of_I2C_Write 0796  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 07F6                   ??_main 0071                   _SSPADD 0093  
                 _SSPCON 0014                   _SSPBUF 0013             __pdataCOMMON 0073  
              ?_I2C_Read 0070                ?_I2C_Wait 0070                ?_I2C_Stop 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_I2C_Read 0070  
             ??_I2C_Wait 0070               ??_I2C_Stop 0070             I2C_Read@Data 0070  
             __pmaintext 07B9                  _ACKSTAT 048E                  _SSPCON2 0091  
                _SSPSTAT 0094                  _Address 0073                _I2C_Start 075A  
              _I2C_Write 0786                  __ptext1 0796                  __ptext2 0786  
                __ptext3 0763                  __ptext4 075A                  __ptext5 07A6  
                __ptext6 0779                  __ptext7 076C     end_of_initialization 07FC  
             ?_I2C_Start 0070               ?_I2C_Write 0070        __end_of_port_init 07A6  
          __pidataCOMMON 0759      start_initialization 07F6        ??_I2C_Master_Init 0070  
            ??_I2C_Start 0070              ??_I2C_Write 0070                ___latbits 0002  
               _I2C_Read 07A6                 _I2C_Wait 0779                 _I2C_Stop 0763  
              _port_init 0796            I2C_Write@Data 0070               ?_port_init 0070  
        _I2C_Master_Init 076C  __end_of_I2C_Master_Init 0779              ??_port_init 0070  
