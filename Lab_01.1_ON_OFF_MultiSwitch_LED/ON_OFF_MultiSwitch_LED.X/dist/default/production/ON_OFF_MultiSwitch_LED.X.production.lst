

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 21 19:37:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0006                     _PORTB	set	6
   168     0086                     _TRISB	set	134
   169                           
   170                           	psect	cinit
   171     07EE                     start_initialization:	
   172                           ; #config settings
   173                           
   174     07EE                     __initialization:
   175                           
   176                           ; Clear objects allocated to COMMON
   177     07EE  01F0               	clrf	__pbssCOMMON& (0+127)
   178     07EF  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   179     07F0  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   180     07F1  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   181     07F2  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   182     07F3  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   183     07F4  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   184     07F5  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   185                           
   186                           ; Clear objects allocated to BANK0
   187     07F6  1283               	bcf	3,5	;RP0=0, select bank0
   188     07F7  1303               	bcf	3,6	;RP1=0, select bank0
   189     07F8  01A0               	clrf	__pbssBANK0& (0+127)
   190     07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   191     07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   192     07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   193     07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FC                     __end_of__initialization:
   197     07FC  0183               	clrf	3
   198     07FD  120A  118A  2F65   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201     0070                     __pbssCOMMON:
   202     0070                     _SW2_previous_state:
   203     0070                     	ds	4
   204     0074                     _SW1_previous_state:
   205     0074                     	ds	4
   206                           
   207                           	psect	bssBANK0
   208     0020                     __pbssBANK0:
   209     0020                     _SW3_previous_state:
   210     0020                     	ds	4
   211                           
   212                           	psect	cstackCOMMON
   213     0078                     __pcstackCOMMON:
   214     0078                     ?_Port_Init:
   215     0078                     ??_Port_Init:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0078                     ?_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0078                     ??_main:	
   222                           ; 1 bytes @ 0x0
   223                           
   224                           
   225                           ; 1 bytes @ 0x0
   226     0078                     	ds	4
   227                           
   228                           	psect	maintext
   229     0765                     __pmaintext:	
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 30 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          4       0       0       0       0
   252 ;;      Totals:         4       0       0       0       0
   253 ;;Total ram usage:        4 bytes
   254 ;; Hardware stack levels required when called: 1
   255 ;; This function calls:
   256 ;;		_Port_Init
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262     0765                     _main:	
   263                           ;psect for function _main
   264                           
   265     0765                     l592:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   268                           
   269                           
   270                           ;main.c: 31:     Port_Init();
   271     0765  120A  118A  2754  120A  118A  	fcall	_Port_Init
   272     076A                     l594:
   273                           
   274                           ;main.c: 33:         if((PORTB&0x01)!=SW1_previous_state){
   275     076A  1283               	bcf	3,5	;RP0=0, select bank0
   276     076B  1303               	bcf	3,6	;RP1=0, select bank0
   277     076C  0806               	movf	6,w	;volatile
   278     076D  3901               	andlw	1
   279     076E  00F8               	movwf	??_main
   280     076F  01F9               	clrf	??_main+1
   281     0770  01FA               	clrf	??_main+2
   282     0771  01FB               	clrf	??_main+3
   283     0772  0877               	movf	_SW1_previous_state+3,w
   284     0773  067B               	xorwf	??_main+3,w
   285     0774  1D03               	skipz
   286     0775  2F80               	goto	u45
   287     0776  0876               	movf	_SW1_previous_state+2,w
   288     0777  067A               	xorwf	??_main+2,w
   289     0778  1D03               	skipz
   290     0779  2F80               	goto	u45
   291     077A  0875               	movf	_SW1_previous_state+1,w
   292     077B  0679               	xorwf	??_main+1,w
   293     077C  1D03               	skipz
   294     077D  2F80               	goto	u45
   295     077E  0874               	movf	_SW1_previous_state,w
   296     077F  0678               	xorwf	??_main,w
   297     0780                     u45:
   298     0780  1903               	skipnz
   299     0781  2F83               	goto	u41
   300     0782  2F84               	goto	u40
   301     0783                     u41:
   302     0783  2F96               	goto	l600
   303     0784                     u40:
   304     0784                     l596:
   305                           
   306                           ;main.c: 34:             PORTB^=0x08;
   307     0784  3008               	movlw	8
   308     0785  00FF               	movwf	btemp+1
   309     0786  087F               	movf	btemp+1,w
   310     0787  0686               	xorwf	6,f	;volatile
   311     0788                     l598:
   312                           
   313                           ;main.c: 35:             SW1_previous_state=(PORTB&0x01);
   314     0788  0806               	movf	6,w	;volatile
   315     0789  3901               	andlw	1
   316     078A  00F8               	movwf	??_main
   317     078B  01F9               	clrf	??_main+1
   318     078C  01FA               	clrf	??_main+2
   319     078D  01FB               	clrf	??_main+3
   320     078E  087B               	movf	??_main+3,w
   321     078F  00F7               	movwf	_SW1_previous_state+3
   322     0790  087A               	movf	??_main+2,w
   323     0791  00F6               	movwf	_SW1_previous_state+2
   324     0792  0879               	movf	??_main+1,w
   325     0793  00F5               	movwf	_SW1_previous_state+1
   326     0794  0878               	movf	??_main,w
   327     0795  00F4               	movwf	_SW1_previous_state
   328     0796                     l600:
   329                           
   330                           ;main.c: 37:         if((PORTB&0x02)!=SW2_previous_state){
   331     0796  0806               	movf	6,w	;volatile
   332     0797  3902               	andlw	2
   333     0798  00F8               	movwf	??_main
   334     0799  01F9               	clrf	??_main+1
   335     079A  01FA               	clrf	??_main+2
   336     079B  01FB               	clrf	??_main+3
   337     079C  0873               	movf	_SW2_previous_state+3,w
   338     079D  067B               	xorwf	??_main+3,w
   339     079E  1D03               	skipz
   340     079F  2FAA               	goto	u55
   341     07A0  0872               	movf	_SW2_previous_state+2,w
   342     07A1  067A               	xorwf	??_main+2,w
   343     07A2  1D03               	skipz
   344     07A3  2FAA               	goto	u55
   345     07A4  0871               	movf	_SW2_previous_state+1,w
   346     07A5  0679               	xorwf	??_main+1,w
   347     07A6  1D03               	skipz
   348     07A7  2FAA               	goto	u55
   349     07A8  0870               	movf	_SW2_previous_state,w
   350     07A9  0678               	xorwf	??_main,w
   351     07AA                     u55:
   352     07AA  1903               	skipnz
   353     07AB  2FAD               	goto	u51
   354     07AC  2FAE               	goto	u50
   355     07AD                     u51:
   356     07AD  2FC0               	goto	l606
   357     07AE                     u50:
   358     07AE                     l602:
   359                           
   360                           ;main.c: 38:             PORTB^=0x08;
   361     07AE  3008               	movlw	8
   362     07AF  00FF               	movwf	btemp+1
   363     07B0  087F               	movf	btemp+1,w
   364     07B1  0686               	xorwf	6,f	;volatile
   365     07B2                     l604:
   366                           
   367                           ;main.c: 39:             SW2_previous_state=(PORTB&0x02);
   368     07B2  0806               	movf	6,w	;volatile
   369     07B3  3902               	andlw	2
   370     07B4  00F8               	movwf	??_main
   371     07B5  01F9               	clrf	??_main+1
   372     07B6  01FA               	clrf	??_main+2
   373     07B7  01FB               	clrf	??_main+3
   374     07B8  087B               	movf	??_main+3,w
   375     07B9  00F3               	movwf	_SW2_previous_state+3
   376     07BA  087A               	movf	??_main+2,w
   377     07BB  00F2               	movwf	_SW2_previous_state+2
   378     07BC  0879               	movf	??_main+1,w
   379     07BD  00F1               	movwf	_SW2_previous_state+1
   380     07BE  0878               	movf	??_main,w
   381     07BF  00F0               	movwf	_SW2_previous_state
   382     07C0                     l606:
   383                           
   384                           ;main.c: 41:         if((PORTB&0x04)!=SW3_previous_state){
   385     07C0  0806               	movf	6,w	;volatile
   386     07C1  3904               	andlw	4
   387     07C2  00F8               	movwf	??_main
   388     07C3  01F9               	clrf	??_main+1
   389     07C4  01FA               	clrf	??_main+2
   390     07C5  01FB               	clrf	??_main+3
   391     07C6  0823               	movf	_SW3_previous_state+3,w
   392     07C7  067B               	xorwf	??_main+3,w
   393     07C8  1D03               	skipz
   394     07C9  2FD4               	goto	u65
   395     07CA  0822               	movf	_SW3_previous_state+2,w
   396     07CB  067A               	xorwf	??_main+2,w
   397     07CC  1D03               	skipz
   398     07CD  2FD4               	goto	u65
   399     07CE  0821               	movf	_SW3_previous_state+1,w
   400     07CF  0679               	xorwf	??_main+1,w
   401     07D0  1D03               	skipz
   402     07D1  2FD4               	goto	u65
   403     07D2  0820               	movf	_SW3_previous_state,w
   404     07D3  0678               	xorwf	??_main,w
   405     07D4                     u65:
   406     07D4  1903               	skipnz
   407     07D5  2FD7               	goto	u61
   408     07D6  2FD8               	goto	u60
   409     07D7                     u61:
   410     07D7  2F6A               	goto	l594
   411     07D8                     u60:
   412     07D8                     l608:
   413                           
   414                           ;main.c: 42:             PORTB^=0x08;
   415     07D8  3008               	movlw	8
   416     07D9  00FF               	movwf	btemp+1
   417     07DA  087F               	movf	btemp+1,w
   418     07DB  0686               	xorwf	6,f	;volatile
   419     07DC                     l610:
   420                           
   421                           ;main.c: 43:             SW3_previous_state=(PORTB&0x04);
   422     07DC  0806               	movf	6,w	;volatile
   423     07DD  3904               	andlw	4
   424     07DE  00F8               	movwf	??_main
   425     07DF  01F9               	clrf	??_main+1
   426     07E0  01FA               	clrf	??_main+2
   427     07E1  01FB               	clrf	??_main+3
   428     07E2  087B               	movf	??_main+3,w
   429     07E3  00A3               	movwf	_SW3_previous_state+3
   430     07E4  087A               	movf	??_main+2,w
   431     07E5  00A2               	movwf	_SW3_previous_state+2
   432     07E6  0879               	movf	??_main+1,w
   433     07E7  00A1               	movwf	_SW3_previous_state+1
   434     07E8  0878               	movf	??_main,w
   435     07E9  00A0               	movwf	_SW3_previous_state
   436     07EA  2F6A               	goto	l594
   437     07EB  120A  118A  2800   	ljmp	start
   438     07EE                     __end_of_main:
   439                           
   440                           	psect	text1
   441     0754                     __ptext1:	
   442 ;; *************** function _Port_Init *****************
   443 ;; Defined at:
   444 ;;		line 19 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, btemp+1
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels used: 1
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471     0754                     _Port_Init:	
   472                           ;psect for function _Port_Init
   473                           
   474     0754                     l590:	
   475                           ;incstack = 0
   476                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   477                           
   478                           
   479                           ;main.c: 21:  TRISB|=0x07;
   480     0754  3007               	movlw	7
   481     0755  00FF               	movwf	btemp+1
   482     0756  087F               	movf	btemp+1,w
   483     0757  1683               	bsf	3,5	;RP0=1, select bank1
   484     0758  1303               	bcf	3,6	;RP1=0, select bank1
   485     0759  0486               	iorwf	6,f	;volatile
   486                           
   487                           ;main.c: 22:  TRISB&=~0x08;
   488     075A  30F7               	movlw	247
   489     075B  00FF               	movwf	btemp+1
   490     075C  087F               	movf	btemp+1,w
   491     075D  0586               	andwf	6,f	;volatile
   492                           
   493                           ;main.c: 24:  PORTB&=~0x0F;
   494     075E  30F0               	movlw	240
   495     075F  00FF               	movwf	btemp+1
   496     0760  087F               	movf	btemp+1,w
   497     0761  1283               	bcf	3,5	;RP0=0, select bank0
   498     0762  1303               	bcf	3,6	;RP1=0, select bank0
   499     0763  0586               	andwf	6,f	;volatile
   500     0764                     l7:
   501     0764  0008               	return
   502     0765                     __end_of_Port_Init:
   503     007E                     btemp	set	126	;btemp
   504     007E                     wtemp0	set	126
   505                           
   506                           	psect	config
   507                           
   508                           ;Config register CONFIG @ 0x2007
   509                           ;	Oscillator Selection bits
   510                           ;	FOSC = XT, XT oscillator
   511                           ;	Watchdog Timer Enable bit
   512                           ;	WDTE = OFF, WDT disabled
   513                           ;	Power-up Timer Enable bit
   514                           ;	PWRTE = ON, PWRT enabled
   515                           ;	Brown-out Reset Enable bit
   516                           ;	BOREN = ON, BOR enabled
   517                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   518                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   519                           ;	Data EEPROM Memory Code Protection bit
   520                           ;	CPD = OFF, Data EEPROM code protection off
   521                           ;	Flash Program Memory Write Enable bits
   522                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   523                           ;	In-Circuit Debugger Mode bit
   524                           ;	DEBUG = 0x1, unprogrammed default
   525                           ;	Flash Program Memory Code Protection bit
   526                           ;	CP = OFF, Code protection off
   527     2007                     	org	8199
   528     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              0 COMMON     4     4      0
                          _Port_Init
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 21 19:37:32 2024

                      l7 0764                       u40 0784                       u41 0783  
                     u50 07AE                       u51 07AD                       u60 07D8  
                     u61 07D7                       u45 0780                       u55 07AA  
                     u65 07D4                      l600 0796                      l610 07DC  
                    l602 07AE                      l604 07B2                      l606 07C0  
                    l608 07D8                      l590 0754                      l592 0765  
                    l594 076A                      l596 0784                      l598 0788  
                   _main 0765                     btemp 007E                     start 0000  
                  ?_main 0078                    _PORTB 0006                    _TRISB 0086  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0078       _SW1_previous_state 0074  
__end_of__initialization 07FC       _SW3_previous_state 0020           __pcstackCOMMON 0078  
             __pbssBANK0 0020        __end_of_Port_Init 0765               __pmaintext 0765  
                __ptext1 0754     end_of_initialization 07FC      start_initialization 07EE  
              _Port_Init 0754              __pbssCOMMON 0070                ___latbits 0002  
             ?_Port_Init 0078       _SW2_previous_state 0070              ??_Port_Init 0078  
