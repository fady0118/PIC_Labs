

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 08 19:51:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0019                     _TXREG	set	25
   172     0006                     _PORTB	set	6
   173     00C7                     _SPEN	set	199
   174     0032                     _RB2	set	50
   175     0030                     _RB0	set	48
   176     0099                     _SPBRG	set	153
   177     0086                     _TRISB	set	134
   178     04C1                     _TRMT	set	1217
   179     04C5                     _TXEN	set	1221
   180     043F                     _TRISC7	set	1087
   181     043E                     _TRISC6	set	1086
   182     04C4                     _SYNC	set	1220
   183     04C2                     _BRGH	set	1218
   184                           
   185                           	psect	strings
   186     0003                     __pstrings:
   187     0003                     stringtab:
   188     0003                     __stringtab:
   189     0003                     stringcode:	
   190                           ;	String table - string pointers are 1 byte each
   191                           
   192     0003                     stringdir:
   193     0003  3000               	movlw	high stringdir
   194     0004  008A               	movwf	10
   195     0005  0804               	movf	4,w
   196     0006  0A84               	incf	4,f
   197     0007  0782               	addwf	2,f
   198     0008                     __stringbase:
   199     0008  3400               	retlw	0
   200     0009                     __end_of__stringtab:
   201     0009                     STR_1:
   202     0009  3457               	retlw	87	;'W'
   203     000A  3445               	retlw	69	;'E'
   204     000B  344C               	retlw	76	;'L'
   205     000C  3443               	retlw	67	;'C'
   206     000D  344F               	retlw	79	;'O'
   207     000E  344D               	retlw	77	;'M'
   208     000F  3445               	retlw	69	;'E'
   209     0010  3400               	retlw	0
   210                           
   211                           	psect	cinit
   212     07FC                     start_initialization:	
   213                           ; #config settings
   214                           
   215     07FC                     __initialization:
   216     07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219     07FC                     __end_of__initialization:
   220     07FC  0183               	clrf	3
   221     07FD  120A  118A  2FBA   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	cstackCOMMON
   224     0070                     __pcstackCOMMON:
   225     0070                     ?_UART_TX_Init:
   226     0070                     ??_UART_TX_Init:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ?_strcpy:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?_UART_Write_String:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_Port_Init:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ??_Port_Init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ?_UART_Write:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ??_UART_Write:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     UART_Write@data:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     strcpy@src:	
   254                           ; 1 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258     0070                     	ds	1
   259     0071                     ??_strcpy:
   260     0071                     ??_UART_Write_String:	
   261                           ; 1 bytes @ 0x1
   262                           
   263     0071                     strcpy@d:	
   264                           ; 1 bytes @ 0x1
   265                           
   266                           
   267                           ; 1 bytes @ 0x1
   268     0071                     	ds	1
   269     0072                     strcpy@dest:
   270     0072                     UART_Write_String@i:	
   271                           ; 1 bytes @ 0x2
   272                           
   273                           
   274                           ; 2 bytes @ 0x2
   275     0072                     	ds	2
   276     0074                     UART_Write_String@text:
   277                           
   278                           ; 1 bytes @ 0x4
   279     0074                     	ds	1
   280     0075                     ??_main:
   281                           
   282                           ; 1 bytes @ 0x5
   283     0075                     	ds	3
   284                           
   285                           	psect	cstackBANK0
   286     0020                     __pcstackBANK0:
   287     0020                     main@string:
   288                           
   289                           ; 25 bytes @ 0x0
   290     0020                     	ds	25
   291                           
   292                           	psect	maintext
   293     07BA                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 27 in file "main_TX.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  string         25    0[BANK0 ] unsigned char [25]
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0      25       0       0       0
   315 ;;      Temps:          3       0       0       0       0
   316 ;;      Totals:         3      25       0       0       0
   317 ;;Total ram usage:       28 bytes
   318 ;; Hardware stack levels required when called: 2
   319 ;; This function calls:
   320 ;;		_Port_Init
   321 ;;		_UART_TX_Init
   322 ;;		_UART_Write_String
   323 ;;		_strcpy
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329     07BA                     _main:	
   330                           ;psect for function _main
   331                           
   332     07BA                     l664:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   335                           
   336                           
   337                           ;main_TX.c: 28:     Port_Init();
   338     07BA  120A  118A  2762  120A  118A  	fcall	_Port_Init
   339     07BF                     l666:
   340                           
   341                           ;main_TX.c: 29:     UART_TX_Init();
   342     07BF  120A  118A  276F  120A  118A  	fcall	_UART_TX_Init
   343     07C4                     l668:
   344                           
   345                           ;main_TX.c: 33:     if (RB0)
   346     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   347     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   348     07C6  1C06               	btfss	6,0	;volatile
   349     07C7  2FC9               	goto	u71
   350     07C8  2FCA               	goto	u70
   351     07C9                     u71:
   352     07C9  2FDF               	goto	l674
   353     07CA                     u70:
   354     07CA                     l670:
   355                           
   356                           ;main_TX.c: 34:     {;main_TX.c: 35:      strcpy(string,"WELCOME");
   357     07CA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   358     07CB  00F0               	movwf	strcpy@src
   359     07CC  3020               	movlw	(low (main@string| 0))& (0+255)
   360     07CD  120A  118A  277E  120A  118A  	fcall	_strcpy
   361     07D2                     l672:
   362                           
   363                           ;main_TX.c: 37:       _delay((unsigned long)((250)*(4000000/4000.0)));
   364     07D2  3002               	movlw	2
   365     07D3  00F7               	movwf	??_main+2
   366     07D4  3045               	movlw	69
   367     07D5  00F6               	movwf	??_main+1
   368     07D6  30A9               	movlw	169
   369     07D7  00F5               	movwf	??_main
   370     07D8                     u97:
   371     07D8  0BF5               	decfsz	??_main,f
   372     07D9  2FD8               	goto	u97
   373     07DA  0BF6               	decfsz	??_main+1,f
   374     07DB  2FD8               	goto	u97
   375     07DC  0BF7               	decfsz	??_main+2,f
   376     07DD  2FD8               	goto	u97
   377     07DE  2FDF               	nop2
   378     07DF                     l674:
   379                           
   380                           ;main_TX.c: 40:     if (RB2)
   381     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   382     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   383     07E1  1D06               	btfss	6,2	;volatile
   384     07E2  2FE4               	goto	u81
   385     07E3  2FE5               	goto	u80
   386     07E4                     u81:
   387     07E4  2FC4               	goto	l668
   388     07E5                     u80:
   389     07E5                     l676:
   390                           
   391                           ;main_TX.c: 41:     {;main_TX.c: 42:       UART_Write_String(string);
   392     07E5  3020               	movlw	(low (main@string| 0))& (0+255)
   393     07E6  120A  118A  2799  120A  118A  	fcall	_UART_Write_String
   394     07EB                     l678:
   395                           
   396                           ;main_TX.c: 43:       _delay((unsigned long)((250)*(4000000/4000.0)));
   397     07EB  3002               	movlw	2
   398     07EC  00F7               	movwf	??_main+2
   399     07ED  3045               	movlw	69
   400     07EE  00F6               	movwf	??_main+1
   401     07EF  30A9               	movlw	169
   402     07F0  00F5               	movwf	??_main
   403     07F1                     u107:
   404     07F1  0BF5               	decfsz	??_main,f
   405     07F2  2FF1               	goto	u107
   406     07F3  0BF6               	decfsz	??_main+1,f
   407     07F4  2FF1               	goto	u107
   408     07F5  0BF7               	decfsz	??_main+2,f
   409     07F6  2FF1               	goto	u107
   410     07F7  2FF8               	nop2
   411     07F8  2FC4               	goto	l668
   412     07F9  120A  118A  2800   	ljmp	start
   413     07FC                     __end_of_main:
   414                           
   415                           	psect	text1
   416     077E                     __ptext1:	
   417 ;; *************** function _strcpy *****************
   418 ;; Defined at:
   419 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  dest            1    wreg     PTR unsigned char 
   422 ;;		 -> main@string(25), 
   423 ;;  src             1    0[COMMON] PTR const unsigned char 
   424 ;;		 -> STR_1(8), 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  dest            1    2[COMMON] PTR unsigned char 
   427 ;;		 -> main@string(25), 
   428 ;;  d               1    1[COMMON] PTR unsigned char 
   429 ;;		 -> main@string(25), 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      PTR unsigned char 
   432 ;; Registers used:
   433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         1       0       0       0       0
   440 ;;      Locals:         2       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0
   442 ;;      Totals:         3       0       0       0       0
   443 ;;Total ram usage:        3 bytes
   444 ;; Hardware stack levels used: 2
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452     077E                     _strcpy:	
   453                           ;psect for function _strcpy
   454                           
   455                           
   456                           ;incstack = 0
   457                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   458                           ;strcpy@dest stored from wreg
   459     077E  00F2               	movwf	strcpy@dest
   460     077F                     l660:
   461     077F  0872               	movf	strcpy@dest,w
   462     0780  00F1               	movwf	strcpy@d
   463     0781                     l662:
   464     0781  3001               	movlw	1
   465     0782  07F0               	addwf	strcpy@src,f
   466     0783  30FF               	movlw	-1
   467     0784  0770               	addwf	strcpy@src,w
   468     0785  0084               	movwf	4
   469     0786  120A  118A  2003  120A  118A  	fcall	stringdir
   470     078B  00FF               	movwf	btemp+1
   471     078C  0871               	movf	strcpy@d,w
   472     078D  0084               	movwf	4
   473     078E  3001               	movlw	1
   474     078F  07F1               	addwf	strcpy@d,f
   475     0790  087F               	movf	btemp+1,w
   476     0791  1383               	bcf	3,7	;select IRP bank0
   477     0792  0080               	movwf	0
   478     0793  0800               	movf	0,w
   479     0794  1D03               	btfss	3,2
   480     0795  2F97               	goto	u61
   481     0796  2F98               	goto	u60
   482     0797                     u61:
   483     0797  2F81               	goto	l662
   484     0798                     u60:
   485     0798                     l610:
   486     0798  0008               	return
   487     0799                     __end_of_strcpy:
   488                           
   489                           	psect	text2
   490     0799                     __ptext2:	
   491 ;; *************** function _UART_Write_String *****************
   492 ;; Defined at:
   493 ;;		line 70 in file "main_TX.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  text            1    wreg     PTR unsigned char 
   496 ;;		 -> main@string(25), 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  text            1    4[COMMON] PTR unsigned char 
   499 ;;		 -> main@string(25), 
   500 ;;  i               2    2[COMMON] unsigned short 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         3       0       0       0       0
   512 ;;      Temps:          1       0       0       0       0
   513 ;;      Totals:         4       0       0       0       0
   514 ;;Total ram usage:        4 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; Hardware stack levels required when called: 1
   517 ;; This function calls:
   518 ;;		_UART_Write
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524     0799                     _UART_Write_String:	
   525                           ;psect for function _UART_Write_String
   526                           
   527                           
   528                           ;incstack = 0
   529                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   530                           ;UART_Write_String@text stored from wreg
   531     0799  00F4               	movwf	UART_Write_String@text
   532     079A                     l636:
   533                           
   534                           ;main_TX.c: 71:   uint16_t i;;main_TX.c: 72:   for(i=0;text[i]!='\0';i++)
   535     079A  01F2               	clrf	UART_Write_String@i
   536     079B  01F3               	clrf	UART_Write_String@i+1
   537     079C  2FAE               	goto	l642
   538     079D                     l638:
   539                           
   540                           ;main_TX.c: 73:     UART_Write(text[i]);
   541     079D  0872               	movf	UART_Write_String@i,w
   542     079E  0774               	addwf	UART_Write_String@text,w
   543     079F  00F1               	movwf	??_UART_Write_String
   544     07A0  0871               	movf	??_UART_Write_String,w
   545     07A1  0084               	movwf	4
   546     07A2  0800               	movf	0,w
   547     07A3  120A  118A  2756  120A  118A  	fcall	_UART_Write
   548     07A8                     l640:
   549     07A8  3001               	movlw	1
   550     07A9  07F2               	addwf	UART_Write_String@i,f
   551     07AA  1803               	skipnc
   552     07AB  0AF3               	incf	UART_Write_String@i+1,f
   553     07AC  3000               	movlw	0
   554     07AD  07F3               	addwf	UART_Write_String@i+1,f
   555     07AE                     l642:
   556     07AE  0872               	movf	UART_Write_String@i,w
   557     07AF  0774               	addwf	UART_Write_String@text,w
   558     07B0  00F1               	movwf	??_UART_Write_String
   559     07B1  0871               	movf	??_UART_Write_String,w
   560     07B2  0084               	movwf	4
   561     07B3  1383               	bcf	3,7	;select IRP bank0
   562     07B4  0800               	movf	0,w
   563     07B5  1D03               	btfss	3,2
   564     07B6  2FB8               	goto	u31
   565     07B7  2FB9               	goto	u30
   566     07B8                     u31:
   567     07B8  2F9D               	goto	l638
   568     07B9                     u30:
   569     07B9                     l62:
   570     07B9  0008               	return
   571     07BA                     __end_of_UART_Write_String:
   572                           
   573                           	psect	text3
   574     0756                     __ptext3:	
   575 ;; *************** function _UART_Write *****************
   576 ;; Defined at:
   577 ;;		line 65 in file "main_TX.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  data            1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  data            1    0[COMMON] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         1       0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_UART_Write_String
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604     0756                     _UART_Write:	
   605                           ;psect for function _UART_Write
   606                           
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _UART_Write: [wreg]
   610                           ;UART_Write@data stored from wreg
   611     0756  00F0               	movwf	UART_Write@data
   612     0757                     l612:
   613     0757                     l53:	
   614                           ;main_TX.c: 65: void UART_Write(uint8_t data);main_TX.c: 66: {;main_TX.c: 67:   while(!T
      +                          RMT);
   615                           
   616     0757  1683               	bsf	3,5	;RP0=1, select bank1
   617     0758  1303               	bcf	3,6	;RP1=0, select bank1
   618     0759  1C98               	btfss	24,1	;volatile
   619     075A  2F5C               	goto	u11
   620     075B  2F5D               	goto	u10
   621     075C                     u11:
   622     075C  2F57               	goto	l53
   623     075D                     u10:
   624     075D                     l614:
   625                           
   626                           ;main_TX.c: 68:   TXREG = data;
   627     075D  0870               	movf	UART_Write@data,w
   628     075E  1283               	bcf	3,5	;RP0=0, select bank0
   629     075F  1303               	bcf	3,6	;RP1=0, select bank0
   630     0760  0099               	movwf	25	;volatile
   631     0761                     l56:
   632     0761  0008               	return
   633     0762                     __end_of_UART_Write:
   634                           
   635                           	psect	text4
   636     076F                     __ptext4:	
   637 ;; *************** function _UART_TX_Init *****************
   638 ;; Defined at:
   639 ;;		line 50 in file "main_TX.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666     076F                     _UART_TX_Init:	
   667                           ;psect for function _UART_TX_Init
   668                           
   669     076F                     l618:	
   670                           ;incstack = 0
   671                           ; Regs used in _UART_TX_Init: [wreg]
   672                           
   673                           
   674                           ;main_TX.c: 52:     BRGH = 1;
   675     076F  1683               	bsf	3,5	;RP0=1, select bank1
   676     0770  1303               	bcf	3,6	;RP1=0, select bank1
   677     0771  1518               	bsf	24,2	;volatile
   678     0772                     l620:
   679                           
   680                           ;main_TX.c: 53:     SPBRG = 25;
   681     0772  3019               	movlw	25
   682     0773  0099               	movwf	25	;volatile
   683     0774                     l622:
   684                           
   685                           ;main_TX.c: 56:     SYNC = 0;
   686     0774  1218               	bcf	24,4	;volatile
   687     0775                     l624:
   688                           
   689                           ;main_TX.c: 57:     SPEN = 1;
   690     0775  1283               	bcf	3,5	;RP0=0, select bank0
   691     0776  1303               	bcf	3,6	;RP1=0, select bank0
   692     0777  1798               	bsf	24,7	;volatile
   693     0778                     l626:
   694                           
   695                           ;main_TX.c: 60:     TRISC6 = 1;
   696     0778  1683               	bsf	3,5	;RP0=1, select bank1
   697     0779  1303               	bcf	3,6	;RP1=0, select bank1
   698     077A  1707               	bsf	7,6	;volatile
   699     077B                     l628:
   700                           
   701                           ;main_TX.c: 61:     TRISC7 = 1;
   702     077B  1787               	bsf	7,7	;volatile
   703     077C                     l630:
   704                           
   705                           ;main_TX.c: 62:     TXEN = 1;
   706     077C  1698               	bsf	24,5	;volatile
   707     077D                     l50:
   708     077D  0008               	return
   709     077E                     __end_of_UART_TX_Init:
   710                           
   711                           	psect	text5
   712     0762                     __ptext5:	
   713 ;; *************** function _Port_Init *****************
   714 ;; Defined at:
   715 ;;		line 22 in file "main_TX.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0, btemp+1
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0
   732 ;;      Totals:         0       0       0       0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     0762                     _Port_Init:	
   743                           ;psect for function _Port_Init
   744                           
   745     0762                     l616:	
   746                           ;incstack = 0
   747                           ; Regs used in _Port_Init: [wreg+status,2+status,0+btemp+1]
   748                           
   749                           
   750                           ;main_TX.c: 23:    TRISB|=0x07;
   751     0762  3007               	movlw	7
   752     0763  00FF               	movwf	btemp+1
   753     0764  087F               	movf	btemp+1,w
   754     0765  1683               	bsf	3,5	;RP0=1, select bank1
   755     0766  1303               	bcf	3,6	;RP1=0, select bank1
   756     0767  0486               	iorwf	6,f	;volatile
   757                           
   758                           ;main_TX.c: 24:    PORTB&=~0x07;
   759     0768  30F8               	movlw	248
   760     0769  00FF               	movwf	btemp+1
   761     076A  087F               	movf	btemp+1,w
   762     076B  1283               	bcf	3,5	;RP0=0, select bank0
   763     076C  1303               	bcf	3,6	;RP1=0, select bank0
   764     076D  0586               	andwf	6,f	;volatile
   765     076E                     l37:
   766     076E  0008               	return
   767     076F                     __end_of_Port_Init:
   768     007E                     btemp	set	126	;btemp
   769     007E                     wtemp0	set	126
   770                           
   771                           	psect	config
   772                           
   773                           ;Config register CONFIG @ 0x2007
   774                           ;	Oscillator Selection bits
   775                           ;	FOSC = XT, XT oscillator
   776                           ;	Watchdog Timer Enable bit
   777                           ;	WDTE = OFF, WDT disabled
   778                           ;	Power-up Timer Enable bit
   779                           ;	PWRTE = ON, PWRT enabled
   780                           ;	Brown-out Reset Enable bit
   781                           ;	BOREN = ON, BOR enabled
   782                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   783                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   784                           ;	Data EEPROM Memory Code Protection bit
   785                           ;	CPD = OFF, Data EEPROM code protection off
   786                           ;	Flash Program Memory Write Enable bits
   787                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   788                           ;	In-Circuit Debugger Mode bit
   789                           ;	DEBUG = 0x1, unprogrammed default
   790                           ;	Flash Program Memory Code Protection bit
   791                           ;	CP = OFF, Code protection off
   792     2007                     	org	8199
   793     2007  3F71               	dw	16241

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     25      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__strcpy	PTR unsigned char  size(1) Largest target is 25
		 -> main@string(BANK0[25]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 25
		 -> main@string(BANK0[25]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 25
		 -> main@string(BANK0[25]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    UART_Write_String@text	PTR unsigned char  size(1) Largest target is 25
		 -> main@string(BANK0[25]), 


Critical Paths under _main in COMMON

    _main->_UART_Write_String
    _UART_Write_String->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0     335
                                              5 COMMON     3     3      0
                                              0 BANK0     25    25      0
                          _Port_Init
                       _UART_TX_Init
                  _UART_Write_String
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               3     2      1     182
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    4     4      0     105
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _UART_TX_Init
   _UART_Write_String
     _UART_Write
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 08 19:51:58 2024

                        pc 0002                         l50 077D                         l37 076E  
                       l53 0757                         l62 07B9                         l56 0761  
                       u10 075D                         u11 075C                         u30 07B9  
                       u31 07B8                         u60 0798                         u61 0797  
                       u70 07CA                         u71 07C9                         u80 07E5  
                       u81 07E4                         u97 07D8                         fsr 0004  
                      l610 0798                        l620 0772                        l612 0757  
                      l630 077C                        l622 0774                        l614 075D  
                      l616 0762                        l624 0775                        l640 07A8  
                      l626 0778                        l618 076F                        l642 07AE  
                      l628 077B                        l636 079A                        l660 077F  
                      l638 079D                        l662 0781                        l670 07CA  
                      l672 07D2                        l664 07BA                        l674 07DF  
                      l666 07BF                        l676 07E5                        l668 07C4  
                      l678 07EB                        _RB0 0030                        _RB2 0032  
                      u107 07F1                        fsr0 0004                        indf 0000  
                     STR_1 0009                       _BRGH 04C2                       _SPEN 00C7  
                     _TRMT 04C1                       _TXEN 04C5                       _SYNC 04C4  
                     _main 07BA                       btemp 007E                       start 0000  
                    ?_main 0070                      _SPBRG 0099                      _PORTB 0006  
                    _TRISB 0086                      _TXREG 0019                ?_UART_Write 0070  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07FC               __end_of_main 07FC                     ??_main 0075  
                   _TRISC6 043E                     _TRISC7 043F                     _strcpy 077E  
  __end_of__initialization 07FC             __pcstackCOMMON 0070          __end_of_Port_Init 076F  
               __pmaintext 07BA                    ?_strcpy 0070               ??_UART_Write 0070  
            ?_UART_TX_Init 0070                 __stringtab 0003         __end_of_UART_Write 0762  
                  __ptext1 077E                    __ptext2 0799                    __ptext3 0756  
                  __ptext4 076F                    __ptext5 0762             ??_UART_TX_Init 0070  
     end_of_initialization 07FC                    strcpy@d 0071             UART_Write@data 0070  
    UART_Write_String@text 0074                 main@string 0020             __end_of_strcpy 0799  
      start_initialization 07FC                  _Port_Init 0762       __end_of_UART_TX_Init 077E  
                 ??_strcpy 0071                  ___latbits 0002              __pcstackBANK0 0020  
               ?_Port_Init 0070                  __pstrings 0003                __stringbase 0008  
              ??_Port_Init 0070         __end_of__stringtab 0009          _UART_Write_String 0799  
       ?_UART_Write_String 0070               _UART_TX_Init 076F                 strcpy@dest 0072  
      ??_UART_Write_String 0071  __end_of_UART_Write_String 07BA                  strcpy@src 0070  
                stringcode 0003         UART_Write_String@i 0072                   stringdir 0003  
                 stringtab 0003                 _UART_Write 0756  
