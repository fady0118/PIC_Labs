

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 25 22:06:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0088                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0093                     	;# 
   167     0094                     	;# 
   168     0098                     	;# 
   169     0099                     	;# 
   170     009C                     	;# 
   171     009D                     	;# 
   172     009E                     	;# 
   173     009F                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180     0000                     	;# 
   181     0001                     	;# 
   182     0002                     	;# 
   183     0003                     	;# 
   184     0004                     	;# 
   185     0005                     	;# 
   186     0006                     	;# 
   187     0007                     	;# 
   188     0008                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     000D                     	;# 
   194     000E                     	;# 
   195     000E                     	;# 
   196     000F                     	;# 
   197     0010                     	;# 
   198     0011                     	;# 
   199     0012                     	;# 
   200     0013                     	;# 
   201     0014                     	;# 
   202     0015                     	;# 
   203     0015                     	;# 
   204     0016                     	;# 
   205     0017                     	;# 
   206     0018                     	;# 
   207     0019                     	;# 
   208     001A                     	;# 
   209     001B                     	;# 
   210     001B                     	;# 
   211     001C                     	;# 
   212     001D                     	;# 
   213     001E                     	;# 
   214     001F                     	;# 
   215     0081                     	;# 
   216     0085                     	;# 
   217     0086                     	;# 
   218     0087                     	;# 
   219     0088                     	;# 
   220     0089                     	;# 
   221     008C                     	;# 
   222     008D                     	;# 
   223     008E                     	;# 
   224     0091                     	;# 
   225     0092                     	;# 
   226     0093                     	;# 
   227     0094                     	;# 
   228     0098                     	;# 
   229     0099                     	;# 
   230     009C                     	;# 
   231     009D                     	;# 
   232     009E                     	;# 
   233     009F                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     010E                     	;# 
   237     010F                     	;# 
   238     018C                     	;# 
   239     018D                     	;# 
   240                           
   241                           	psect	idataCOMMON
   242     0215                     __pidataCOMMON:
   243                           
   244                           ;initializer for _LEN
   245     0215  3409               	retlw	9
   246     0013                     _SSPBUF	set	19
   247     0063                     _SSPIF	set	99
   248     005F                     _GIE	set	95
   249     005E                     _PEIE	set	94
   250     00A4                     _CKP	set	164
   251     00A5                     _SSPEN	set	165
   252     00A3                     _SSPM3	set	163
   253     00A2                     _SSPM2	set	162
   254     00A1                     _SSPM1	set	161
   255     00A0                     _SSPM0	set	160
   256     0038                     _RC0	set	56
   257     0033                     _RB3	set	51
   258     0032                     _RB2	set	50
   259     0031                     _RB1	set	49
   260     0030                     _RB0	set	48
   261     0034                     _RB4	set	52
   262     0035                     _RB5	set	53
   263     0086                     _TRISB	set	134
   264     0463                     _SSPIE	set	1123
   265     042D                     _TRISA5	set	1069
   266     04FB                     _PCFG3	set	1275
   267     04FA                     _PCFG2	set	1274
   268     04F9                     _PCFG1	set	1273
   269     04F8                     _PCFG0	set	1272
   270     043D                     _TRISC5	set	1085
   271     043C                     _TRISC4	set	1084
   272     043B                     _TRISC3	set	1083
   273     04A7                     _SMP	set	1191
   274     04A6                     _CKE	set	1190
   275     0434                     _TRISB4	set	1076
   276     0435                     _TRISB5	set	1077
   277                           
   278                           	psect	cinit
   279     0013                     start_initialization:	
   280                           ; #config settings
   281                           
   282     0013                     __initialization:
   283                           
   284                           ; Initialize objects allocated to COMMON
   285     0013  120A  118A  2215  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   286     0018  00F9               	movwf	__pdataCOMMON& (0+127)
   287                           
   288                           ; Clear objects allocated to BANK0
   289     0019  1383               	bcf	3,7	;select IRP bank0
   290     001A  3020               	movlw	low __pbssBANK0
   291     001B  0084               	movwf	4
   292     001C  3035               	movlw	low (__pbssBANK0+21)
   293     001D  120A  118A  220D  120A  118A  	fcall	clear_ram0
   294                           
   295                           ; Clear objects allocated to COMMON
   296     0022  01F8               	clrf	__pbssCOMMON& (0+127)
   297     0023                     end_of_initialization:	
   298                           ;End of C runtime variable initialization code
   299                           
   300     0023                     __end_of__initialization:
   301     0023  0183               	clrf	3
   302     0024  120A  118A  28DF   	ljmp	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMMON
   305     0078                     __pbssCOMMON:
   306     0078                     _i:
   307     0078                     	ds	1
   308                           
   309                           	psect	dataCOMMON
   310     0079                     __pdataCOMMON:
   311     0079                     _LEN:
   312     0079                     	ds	1
   313                           
   314                           	psect	bssBANK0
   315     0020                     __pbssBANK0:
   316     0020                     _LCD_Flag:
   317     0020                     	ds	1
   318     0021                     _string:
   319     0021                     	ds	20
   320                           
   321                           	psect	clrtext
   322     020D                     clear_ram0:	
   323                           ;	Called with FSR containing the base address, and
   324                           ;	W with the last address+1
   325                           
   326     020D  0064               	clrwdt	;clear the watchdog before getting into this loop
   327     020E                     clrloop0:
   328     020E  0180               	clrf	0	;clear RAM location pointed to by FSR
   329     020F  0A84               	incf	4,f	;increment pointer
   330     0210  0604               	xorwf	4,w	;XOR with final address
   331     0211  1903               	btfsc	3,2	;have we reached the end yet?
   332     0212  3400               	retlw	0	;all done for this memory range, return
   333     0213  0604               	xorwf	4,w	;XOR again to restore value
   334     0214  2A0E               	goto	clrloop0	;do the next byte
   335                           
   336                           	psect	cstackCOMMON
   337     0070                     __pcstackCOMMON:
   338     0070                     ?_LCD_DATA:
   339     0070                     ?_SPI_Slave_Init:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_LCD_Command:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_LCD_Init:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_LCD_Clear:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_LCD_Write_Char:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?_LCD_Write_String:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_ISR:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ??_ISR:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           ; 1 bytes @ 0x0
   368     0070                     	ds	4
   369     0074                     ??_LCD_DATA:
   370     0074                     ??_SPI_Slave_Init:	
   371                           ; 1 bytes @ 0x4
   372                           
   373     0074                     LCD_DATA@Data:	
   374                           ; 1 bytes @ 0x4
   375                           
   376                           
   377                           ; 1 bytes @ 0x4
   378     0074                     	ds	1
   379     0075                     ??_LCD_Command:
   380     0075                     ??_LCD_Write_Char:	
   381                           ; 1 bytes @ 0x5
   382                           
   383                           
   384                           ; 1 bytes @ 0x5
   385     0075                     	ds	1
   386     0076                     ??_LCD_Write_String:
   387     0076                     LCD_Command@CMD:	
   388                           ; 1 bytes @ 0x6
   389                           
   390                           
   391                           ; 1 bytes @ 0x6
   392     0076                     	ds	1
   393     0077                     ??_LCD_Clear:
   394     0077                     ?_LCD_Set_Cursor:	
   395                           ; 1 bytes @ 0x7
   396                           
   397     0077                     LCD_Set_Cursor@c:	
   398                           ; 1 bytes @ 0x7
   399                           
   400                           
   401                           ; 1 bytes @ 0x7
   402     0077                     	ds	1
   403     0078                     ??_main:
   404                           
   405                           	psect	cstackBANK0
   406     0035                     __pcstackBANK0:	
   407                           ; 1 bytes @ 0x8
   408                           
   409     0035                     ??_LCD_Init:
   410     0035                     ??_LCD_Set_Cursor:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0035                     LCD_Write_Char@Low4:	
   414                           ; 1 bytes @ 0x0
   415                           
   416                           
   417                           ; 1 bytes @ 0x0
   418     0035                     	ds	1
   419     0036                     LCD_Set_Cursor@r:
   420     0036                     LCD_Write_Char@High4:	
   421                           ; 1 bytes @ 0x1
   422                           
   423                           
   424                           ; 1 bytes @ 0x1
   425     0036                     	ds	1
   426     0037                     LCD_Set_Cursor@Low4:
   427     0037                     LCD_Write_Char@Data:	
   428                           ; 1 bytes @ 0x2
   429                           
   430                           
   431                           ; 1 bytes @ 0x2
   432     0037                     	ds	1
   433     0038                     LCD_Set_Cursor@High4:
   434     0038                     LCD_Write_String@str:	
   435                           ; 1 bytes @ 0x3
   436                           
   437                           
   438                           ; 1 bytes @ 0x3
   439     0038                     	ds	1
   440     0039                     LCD_Set_Cursor@Temp:
   441     0039                     LCD_Write_String@i:	
   442                           ; 1 bytes @ 0x4
   443                           
   444                           
   445                           ; 2 bytes @ 0x4
   446     0039                     	ds	2
   447                           
   448                           	psect	maintext
   449     00DF                     __pmaintext:	
   450 ;;
   451 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   452 ;;
   453 ;; *************** function _main *****************
   454 ;; Defined at:
   455 ;;		line 23 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : B00/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   469 ;;      Params:         0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels required when called: 4
   475 ;; This function calls:
   476 ;;		_LCD_Clear
   477 ;;		_LCD_Init
   478 ;;		_LCD_Set_Cursor
   479 ;;		_LCD_Write_String
   480 ;;		_SPI_Slave_Init
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486     00DF                     _main:	
   487                           ;psect for function _main
   488                           
   489     00DF                     l1102:	
   490                           ;incstack = 0
   491                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   492                           
   493                           
   494                           ;main.c: 24:     SPI_Slave_Init();
   495     00DF  120A  118A  21D2  120A  118A  	fcall	_SPI_Slave_Init
   496     00E4                     l1104:
   497                           
   498                           ;main.c: 25:     LCD_Init();
   499     00E4  120A  118A  2027  120A  118A  	fcall	_LCD_Init
   500     00E9                     l1106:
   501                           
   502                           ;main.c: 26:     LCD_Clear();
   503     00E9  120A  118A  2200  120A  118A  	fcall	_LCD_Clear
   504     00EE                     l1108:
   505                           
   506                           ;main.c: 27:     LCD_Set_Cursor(1,1);
   507     00EE  01F7               	clrf	LCD_Set_Cursor@c
   508     00EF  0AF7               	incf	LCD_Set_Cursor@c,f
   509     00F0  3001               	movlw	1
   510     00F1  120A  118A  2092  120A  118A  	fcall	_LCD_Set_Cursor
   511     00F6                     l1110:
   512                           
   513                           ;main.c: 29:         if(RC0){
   514     00F6  1283               	bcf	3,5	;RP0=0, select bank0
   515     00F7  1303               	bcf	3,6	;RP1=0, select bank0
   516     00F8  1C07               	btfss	7,0	;volatile
   517     00F9  28FB               	goto	u391
   518     00FA  28FC               	goto	u390
   519     00FB                     u391:
   520     00FB  2909               	goto	l1114
   521     00FC                     u390:
   522     00FC                     l1112:
   523                           
   524                           ;main.c: 30:         LCD_Clear();
   525     00FC  120A  118A  2200  120A  118A  	fcall	_LCD_Clear
   526                           
   527                           ;main.c: 31:         LCD_Set_Cursor(1,1);
   528     0101  01F7               	clrf	LCD_Set_Cursor@c
   529     0102  0AF7               	incf	LCD_Set_Cursor@c,f
   530     0103  3001               	movlw	1
   531     0104  120A  118A  2092  120A  118A  	fcall	_LCD_Set_Cursor
   532     0109                     l1114:
   533                           
   534                           ;main.c: 34:         if(LCD_Flag==1){
   535     0109  1283               	bcf	3,5	;RP0=0, select bank0
   536     010A  1303               	bcf	3,6	;RP1=0, select bank0
   537     010B  0320               	decf	_LCD_Flag,w
   538     010C  1D03               	btfss	3,2
   539     010D  290F               	goto	u401
   540     010E  2910               	goto	u400
   541     010F                     u401:
   542     010F  28F6               	goto	l1110
   543     0110                     u400:
   544     0110                     l1116:
   545                           
   546                           ;main.c: 35:         LCD_Set_Cursor(1,1);
   547     0110  01F7               	clrf	LCD_Set_Cursor@c
   548     0111  0AF7               	incf	LCD_Set_Cursor@c,f
   549     0112  3001               	movlw	1
   550     0113  120A  118A  2092  120A  118A  	fcall	_LCD_Set_Cursor
   551     0118                     l1118:
   552                           
   553                           ;main.c: 36:         LCD_Write_String(string);
   554     0118  3021               	movlw	(low (_string| 0))& (0+255)
   555     0119  120A  118A  2166  120A  118A  	fcall	_LCD_Write_String
   556     011E                     l1120:
   557                           
   558                           ;main.c: 37:         LCD_Flag=0;
   559     011E  1283               	bcf	3,5	;RP0=0, select bank0
   560     011F  1303               	bcf	3,6	;RP1=0, select bank0
   561     0120  01A0               	clrf	_LCD_Flag
   562     0121  28F6               	goto	l1110
   563     0122  120A  118A  2810   	ljmp	start
   564     0125                     __end_of_main:
   565                           
   566                           	psect	text1
   567     01D2                     __ptext1:	
   568 ;; *************** function _SPI_Slave_Init *****************
   569 ;; Defined at:
   570 ;;		line 44 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		None
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0       0       0       0       0
   585 ;;      Locals:         0       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0
   587 ;;      Totals:         0       0       0       0       0
   588 ;;Total ram usage:        0 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; Hardware stack levels required when called: 1
   591 ;; This function calls:
   592 ;;		Nothing
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598     01D2                     _SPI_Slave_Init:	
   599                           ;psect for function _SPI_Slave_Init
   600                           
   601     01D2                     l948:	
   602                           ;incstack = 0
   603                           ; Regs used in _SPI_Slave_Init: []
   604                           
   605                           
   606                           ;main.c: 46:     SSPM0=0;
   607     01D2  1283               	bcf	3,5	;RP0=0, select bank0
   608     01D3  1303               	bcf	3,6	;RP1=0, select bank0
   609     01D4  1014               	bcf	20,0	;volatile
   610                           
   611                           ;main.c: 47:     SSPM1=0;
   612     01D5  1094               	bcf	20,1	;volatile
   613                           
   614                           ;main.c: 48:     SSPM2=1;
   615     01D6  1514               	bsf	20,2	;volatile
   616                           
   617                           ;main.c: 49:     SSPM3=0;
   618     01D7  1194               	bcf	20,3	;volatile
   619                           
   620                           ;main.c: 51:     SSPEN=1;
   621     01D8  1694               	bsf	20,5	;volatile
   622                           
   623                           ;main.c: 52:     CKP=0;
   624     01D9  1214               	bcf	20,4	;volatile
   625                           
   626                           ;main.c: 53:     CKE=0;
   627     01DA  1683               	bsf	3,5	;RP0=1, select bank1
   628     01DB  1303               	bcf	3,6	;RP1=0, select bank1
   629     01DC  1314               	bcf	20,6	;volatile
   630                           
   631                           ;main.c: 55:     SMP=0;
   632     01DD  1394               	bcf	20,7	;volatile
   633                           
   634                           ;main.c: 57:     TRISC3=1;
   635     01DE  1587               	bsf	7,3	;volatile
   636                           
   637                           ;main.c: 58:     TRISC4=1;
   638     01DF  1607               	bsf	7,4	;volatile
   639                           
   640                           ;main.c: 59:     TRISC5=0;
   641     01E0  1287               	bcf	7,5	;volatile
   642                           
   643                           ;main.c: 61:     PCFG0=0;
   644     01E1  101F               	bcf	31,0	;volatile
   645                           
   646                           ;main.c: 62:     PCFG1=0;
   647     01E2  109F               	bcf	31,1	;volatile
   648                           
   649                           ;main.c: 63:     PCFG2=1;
   650     01E3  151F               	bsf	31,2	;volatile
   651                           
   652                           ;main.c: 64:     PCFG3=0;
   653     01E4  119F               	bcf	31,3	;volatile
   654                           
   655                           ;main.c: 65:     TRISA5=1;
   656     01E5  1685               	bsf	5,5	;volatile
   657                           
   658                           ;main.c: 67:     SSPIE=1;
   659     01E6  158C               	bsf	12,3	;volatile
   660                           
   661                           ;main.c: 68:     PEIE=1;
   662     01E7  170B               	bsf	11,6	;volatile
   663                           
   664                           ;main.c: 69:     GIE=1;
   665     01E8  178B               	bsf	11,7	;volatile
   666     01E9                     l137:
   667     01E9  0008               	return
   668     01EA                     __end_of_SPI_Slave_Init:
   669                           
   670                           	psect	text2
   671     0166                     __ptext2:	
   672 ;; *************** function _LCD_Write_String *****************
   673 ;; Defined at:
   674 ;;		line 136 in file "LCD.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  str             1    wreg     PTR unsigned char 
   677 ;;		 -> string(20), 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  str             1    3[BANK0 ] PTR unsigned char 
   680 ;;		 -> string(20), 
   681 ;;  i               2    4[BANK0 ] int 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       0       0       0       0
   692 ;;      Locals:         0       3       0       0       0
   693 ;;      Temps:          1       0       0       0       0
   694 ;;      Totals:         1       3       0       0       0
   695 ;;Total ram usage:        4 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 3
   698 ;; This function calls:
   699 ;;		_LCD_Write_Char
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705     0166                     _LCD_Write_String:	
   706                           ;psect for function _LCD_Write_String
   707                           
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   711                           ;LCD_Write_String@str stored from wreg
   712     0166  1283               	bcf	3,5	;RP0=0, select bank0
   713     0167  1303               	bcf	3,6	;RP1=0, select bank0
   714     0168  00B8               	movwf	LCD_Write_String@str
   715     0169                     l1090:
   716                           
   717                           ;LCD.c: 136: void LCD_Write_String(char *str);LCD.c: 137: {;LCD.c: 138:     int i;;LCD.c
      +                          : 139:     for(i=0;str[i]!='\0';i++)
   718     0169  01B9               	clrf	LCD_Write_String@i
   719     016A  01BA               	clrf	LCD_Write_String@i+1
   720     016B  297F               	goto	l1096
   721     016C                     l1092:
   722                           
   723                           ;LCD.c: 140:        LCD_Write_Char(str[i]);
   724     016C  0839               	movf	LCD_Write_String@i,w
   725     016D  0738               	addwf	LCD_Write_String@str,w
   726     016E  00F6               	movwf	??_LCD_Write_String
   727     016F  0876               	movf	??_LCD_Write_String,w
   728     0170  0084               	movwf	4
   729     0171  0800               	movf	0,w
   730     0172  120A  118A  2125  120A  118A  	fcall	_LCD_Write_Char
   731     0177                     l1094:
   732     0177  3001               	movlw	1
   733     0178  1283               	bcf	3,5	;RP0=0, select bank0
   734     0179  1303               	bcf	3,6	;RP1=0, select bank0
   735     017A  07B9               	addwf	LCD_Write_String@i,f
   736     017B  1803               	skipnc
   737     017C  0ABA               	incf	LCD_Write_String@i+1,f
   738     017D  3000               	movlw	0
   739     017E  07BA               	addwf	LCD_Write_String@i+1,f
   740     017F                     l1096:
   741     017F  0839               	movf	LCD_Write_String@i,w
   742     0180  0738               	addwf	LCD_Write_String@str,w
   743     0181  00F6               	movwf	??_LCD_Write_String
   744     0182  0876               	movf	??_LCD_Write_String,w
   745     0183  0084               	movwf	4
   746     0184  1383               	bcf	3,7	;select IRP bank0
   747     0185  0800               	movf	0,w
   748     0186  1D03               	btfss	3,2
   749     0187  2989               	goto	u381
   750     0188  298A               	goto	u380
   751     0189                     u381:
   752     0189  296C               	goto	l1092
   753     018A                     u380:
   754     018A                     l56:
   755     018A  0008               	return
   756     018B                     __end_of_LCD_Write_String:
   757                           
   758                           	psect	text3
   759     0125                     __ptext3:	
   760 ;; *************** function _LCD_Write_Char *****************
   761 ;; Defined at:
   762 ;;		line 118 in file "LCD.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  Data            1    wreg     unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  Data            1    2[BANK0 ] unsigned char 
   767 ;;  High4           1    1[BANK0 ] unsigned char 
   768 ;;  Low4            1    0[BANK0 ] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       3       0       0       0
   780 ;;      Temps:          1       0       0       0       0
   781 ;;      Totals:         1       3       0       0       0
   782 ;;Total ram usage:        4 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 2
   785 ;; This function calls:
   786 ;;		_LCD_DATA
   787 ;; This function is called by:
   788 ;;		_LCD_Write_String
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792     0125                     _LCD_Write_Char:	
   793                           ;psect for function _LCD_Write_Char
   794                           
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   798                           ;LCD_Write_Char@Data stored from wreg
   799     0125  1283               	bcf	3,5	;RP0=0, select bank0
   800     0126  1303               	bcf	3,6	;RP1=0, select bank0
   801     0127  00B7               	movwf	LCD_Write_Char@Data
   802     0128                     l1008:
   803                           
   804                           ;LCD.c: 118: void LCD_Write_Char(char Data);LCD.c: 119: {;LCD.c: 120:    char Low4,High4
      +                          ;;LCD.c: 121:    Low4 = Data & 0x0F;
   805     0128  0837               	movf	LCD_Write_Char@Data,w
   806     0129  390F               	andlw	15
   807     012A  00B5               	movwf	LCD_Write_Char@Low4
   808                           
   809                           ;LCD.c: 122:    High4 = Data & 0xF0;
   810     012B  0837               	movf	LCD_Write_Char@Data,w
   811     012C  39F0               	andlw	240
   812     012D  00B6               	movwf	LCD_Write_Char@High4
   813     012E                     l1010:
   814                           
   815                           ;LCD.c: 123:    RB5 = 1;
   816     012E  1686               	bsf	6,5	;volatile
   817     012F                     l1012:
   818                           
   819                           ;LCD.c: 124:    LCD_DATA(High4>>4);
   820     012F  0836               	movf	LCD_Write_Char@High4,w
   821     0130  00F5               	movwf	??_LCD_Write_Char
   822     0131  3004               	movlw	4
   823     0132                     u335:
   824     0132  1003               	clrc
   825     0133  0CF5               	rrf	??_LCD_Write_Char,f
   826     0134  3EFF               	addlw	-1
   827     0135  1D03               	skipz
   828     0136  2932               	goto	u335
   829     0137  0875               	movf	??_LCD_Write_Char,w
   830     0138  120A  118A  21B0  120A  118A  	fcall	_LCD_DATA
   831     013D                     l1014:
   832                           
   833                           ;LCD.c: 125:    RB4 = 1;
   834     013D  1283               	bcf	3,5	;RP0=0, select bank0
   835     013E  1303               	bcf	3,6	;RP1=0, select bank0
   836     013F  1606               	bsf	6,4	;volatile
   837     0140                     l1016:
   838                           
   839                           ;LCD.c: 126:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   840     0140  30A6               	movlw	166
   841     0141  00F5               	movwf	??_LCD_Write_Char
   842     0142                     u417:
   843     0142  0BF5               	decfsz	??_LCD_Write_Char,f
   844     0143  2942               	goto	u417
   845     0144  0000               	nop
   846     0145                     l1018:
   847                           
   848                           ;LCD.c: 127:    RB4 = 0;
   849     0145  1283               	bcf	3,5	;RP0=0, select bank0
   850     0146  1303               	bcf	3,6	;RP1=0, select bank0
   851     0147  1206               	bcf	6,4	;volatile
   852     0148                     l1020:
   853                           
   854                           ;LCD.c: 128:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   855     0148  30A6               	movlw	166
   856     0149  00F5               	movwf	??_LCD_Write_Char
   857     014A                     u427:
   858     014A  0BF5               	decfsz	??_LCD_Write_Char,f
   859     014B  294A               	goto	u427
   860     014C  0000               	nop
   861     014D                     l1022:
   862                           
   863                           ;LCD.c: 129:    LCD_DATA(Low4);
   864     014D  1283               	bcf	3,5	;RP0=0, select bank0
   865     014E  1303               	bcf	3,6	;RP1=0, select bank0
   866     014F  0835               	movf	LCD_Write_Char@Low4,w
   867     0150  120A  118A  21B0  120A  118A  	fcall	_LCD_DATA
   868     0155                     l1024:
   869                           
   870                           ;LCD.c: 130:    RB4 = 1;
   871     0155  1283               	bcf	3,5	;RP0=0, select bank0
   872     0156  1303               	bcf	3,6	;RP1=0, select bank0
   873     0157  1606               	bsf	6,4	;volatile
   874     0158                     l1026:
   875                           
   876                           ;LCD.c: 131:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   877     0158  30A6               	movlw	166
   878     0159  00F5               	movwf	??_LCD_Write_Char
   879     015A                     u437:
   880     015A  0BF5               	decfsz	??_LCD_Write_Char,f
   881     015B  295A               	goto	u437
   882     015C  0000               	nop
   883     015D                     l1028:
   884                           
   885                           ;LCD.c: 132:    RB4 = 0;
   886     015D  1283               	bcf	3,5	;RP0=0, select bank0
   887     015E  1303               	bcf	3,6	;RP1=0, select bank0
   888     015F  1206               	bcf	6,4	;volatile
   889     0160                     l1030:
   890                           
   891                           ;LCD.c: 133:    _delay((unsigned long)((500)*(4000000/4000000.0)));
   892     0160  30A6               	movlw	166
   893     0161  00F5               	movwf	??_LCD_Write_Char
   894     0162                     u447:
   895     0162  0BF5               	decfsz	??_LCD_Write_Char,f
   896     0163  2962               	goto	u447
   897     0164  0000               	nop
   898     0165                     l50:
   899     0165  0008               	return
   900     0166                     __end_of_LCD_Write_Char:
   901                           
   902                           	psect	text4
   903     0092                     __ptext4:	
   904 ;; *************** function _LCD_Set_Cursor *****************
   905 ;; Defined at:
   906 ;;		line 98 in file "LCD.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  r               1    wreg     unsigned char 
   909 ;;  c               1    7[COMMON] unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  r               1    1[BANK0 ] unsigned char 
   912 ;;  Temp            1    4[BANK0 ] unsigned char 
   913 ;;  High4           1    3[BANK0 ] unsigned char 
   914 ;;  Low4            1    2[BANK0 ] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, pclath, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         1       0       0       0       0
   925 ;;      Locals:         0       4       0       0       0
   926 ;;      Temps:          0       1       0       0       0
   927 ;;      Totals:         1       5       0       0       0
   928 ;;Total ram usage:        6 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 3
   931 ;; This function calls:
   932 ;;		_LCD_Command
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938     0092                     _LCD_Set_Cursor:	
   939                           ;psect for function _LCD_Set_Cursor
   940                           
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   944                           ;LCD_Set_Cursor@r stored from wreg
   945     0092  1283               	bcf	3,5	;RP0=0, select bank0
   946     0093  1303               	bcf	3,6	;RP1=0, select bank0
   947     0094  00B6               	movwf	LCD_Set_Cursor@r
   948     0095                     l1070:
   949                           
   950                           ;LCD.c: 99:     unsigned char Temp,Low4,High4;;LCD.c: 100:     if(r == 1)
   951     0095  0336               	decf	LCD_Set_Cursor@r,w
   952     0096  1D03               	btfss	3,2
   953     0097  2899               	goto	u341
   954     0098  289A               	goto	u340
   955     0099                     u341:
   956     0099  28B8               	goto	l1080
   957     009A                     u340:
   958     009A                     l1072:
   959                           
   960                           ;LCD.c: 101:     {;LCD.c: 102:       Temp = 0x80 + c - 1;
   961     009A  0877               	movf	LCD_Set_Cursor@c,w
   962     009B  3E7F               	addlw	127
   963     009C  00B9               	movwf	LCD_Set_Cursor@Temp
   964                           
   965                           ;LCD.c: 103:       High4 = Temp >> 4;
   966     009D  0839               	movf	LCD_Set_Cursor@Temp,w
   967     009E  00B5               	movwf	??_LCD_Set_Cursor
   968     009F  3004               	movlw	4
   969     00A0                     u355:
   970     00A0  1003               	clrc
   971     00A1  0CB5               	rrf	??_LCD_Set_Cursor,f
   972     00A2  3EFF               	addlw	-1
   973     00A3  1D03               	skipz
   974     00A4  28A0               	goto	u355
   975     00A5  0835               	movf	??_LCD_Set_Cursor,w
   976     00A6  00B8               	movwf	LCD_Set_Cursor@High4
   977     00A7                     l1074:
   978                           
   979                           ;LCD.c: 104:       Low4 = Temp & 0x0F;
   980     00A7  0839               	movf	LCD_Set_Cursor@Temp,w
   981     00A8  390F               	andlw	15
   982     00A9  00B7               	movwf	LCD_Set_Cursor@Low4
   983     00AA                     l1076:
   984                           
   985                           ;LCD.c: 105:       LCD_Command(High4);
   986     00AA  0838               	movf	LCD_Set_Cursor@High4,w
   987     00AB  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
   988     00B0                     l1078:
   989                           
   990                           ;LCD.c: 106:       LCD_Command(Low4);
   991     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   992     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   993     00B2  0837               	movf	LCD_Set_Cursor@Low4,w
   994     00B3  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
   995     00B8                     l1080:
   996                           
   997                           ;LCD.c: 108:     if(r == 2)
   998     00B8  3002               	movlw	2
   999     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1000     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1001     00BB  0636               	xorwf	LCD_Set_Cursor@r,w
  1002     00BC  1D03               	btfss	3,2
  1003     00BD  28BF               	goto	u361
  1004     00BE  28C0               	goto	u360
  1005     00BF                     u361:
  1006     00BF  28DE               	goto	l47
  1007     00C0                     u360:
  1008     00C0                     l1082:
  1009                           
  1010                           ;LCD.c: 109:     {;LCD.c: 110:       Temp = 0xC0 + c - 1;
  1011     00C0  0877               	movf	LCD_Set_Cursor@c,w
  1012     00C1  3EBF               	addlw	191
  1013     00C2  00B9               	movwf	LCD_Set_Cursor@Temp
  1014                           
  1015                           ;LCD.c: 111:       High4 = Temp >> 4;
  1016     00C3  0839               	movf	LCD_Set_Cursor@Temp,w
  1017     00C4  00B5               	movwf	??_LCD_Set_Cursor
  1018     00C5  3004               	movlw	4
  1019     00C6                     u375:
  1020     00C6  1003               	clrc
  1021     00C7  0CB5               	rrf	??_LCD_Set_Cursor,f
  1022     00C8  3EFF               	addlw	-1
  1023     00C9  1D03               	skipz
  1024     00CA  28C6               	goto	u375
  1025     00CB  0835               	movf	??_LCD_Set_Cursor,w
  1026     00CC  00B8               	movwf	LCD_Set_Cursor@High4
  1027     00CD                     l1084:
  1028                           
  1029                           ;LCD.c: 112:       Low4 = Temp & 0x0F;
  1030     00CD  0839               	movf	LCD_Set_Cursor@Temp,w
  1031     00CE  390F               	andlw	15
  1032     00CF  00B7               	movwf	LCD_Set_Cursor@Low4
  1033     00D0                     l1086:
  1034                           
  1035                           ;LCD.c: 113:       LCD_Command(High4);
  1036     00D0  0838               	movf	LCD_Set_Cursor@High4,w
  1037     00D1  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1038     00D6                     l1088:
  1039                           
  1040                           ;LCD.c: 114:       LCD_Command(Low4);
  1041     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1042     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1043     00D8  0837               	movf	LCD_Set_Cursor@Low4,w
  1044     00D9  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1045     00DE                     l47:
  1046     00DE  0008               	return
  1047     00DF                     __end_of_LCD_Set_Cursor:
  1048                           
  1049                           	psect	text5
  1050     0027                     __ptext5:	
  1051 ;; *************** function _LCD_Init *****************
  1052 ;; Defined at:
  1053 ;;		line 43 in file "LCD.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, pclath, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0
  1069 ;;      Temps:          0       2       0       0       0
  1070 ;;      Totals:         0       2       0       0       0
  1071 ;;Total ram usage:        2 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 3
  1074 ;; This function calls:
  1075 ;;		_LCD_Command
  1076 ;;		_LCD_DATA
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082     0027                     _LCD_Init:	
  1083                           ;psect for function _LCD_Init
  1084                           
  1085     0027                     l1032:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1088                           
  1089                           
  1090                           ;LCD.c: 72:   TRISB = 0x00;
  1091     0027  1683               	bsf	3,5	;RP0=1, select bank1
  1092     0028  1303               	bcf	3,6	;RP1=0, select bank1
  1093     0029  0186               	clrf	6	;volatile
  1094     002A                     l1034:
  1095                           
  1096                           ;LCD.c: 73:   TRISB5 = 0;
  1097     002A  1286               	bcf	6,5	;volatile
  1098     002B                     l1036:
  1099                           
  1100                           ;LCD.c: 74:   TRISB4 = 0;
  1101     002B  1206               	bcf	6,4	;volatile
  1102     002C                     l1038:
  1103                           
  1104                           ;LCD.c: 76:   LCD_DATA(0x00);
  1105     002C  3000               	movlw	0
  1106     002D  120A  118A  21B0  120A  118A  	fcall	_LCD_DATA
  1107     0032                     l1040:
  1108                           
  1109                           ;LCD.c: 77:   _delay((unsigned long)((30)*(4000000/4000.0)));
  1110     0032  3027               	movlw	39
  1111     0033  1283               	bcf	3,5	;RP0=0, select bank0
  1112     0034  1303               	bcf	3,6	;RP1=0, select bank0
  1113     0035  00B6               	movwf	??_LCD_Init+1
  1114     0036  30F4               	movlw	244
  1115     0037  00B5               	movwf	??_LCD_Init
  1116     0038                     u457:
  1117     0038  0BB5               	decfsz	??_LCD_Init,f
  1118     0039  2838               	goto	u457
  1119     003A  0BB6               	decfsz	??_LCD_Init+1,f
  1120     003B  2838               	goto	u457
  1121     003C  0000               	nop
  1122     003D                     l1042:
  1123                           
  1124                           ;LCD.c: 78:   _delay((unsigned long)((500)*(4000000/4000000.0)));
  1125     003D  30A5               	movlw	165
  1126     003E  1283               	bcf	3,5	;RP0=0, select bank0
  1127     003F  1303               	bcf	3,6	;RP1=0, select bank0
  1128     0040  00B5               	movwf	??_LCD_Init
  1129     0041                     u467:
  1130     0041  0BB5               	decfsz	??_LCD_Init,f
  1131     0042  2841               	goto	u467
  1132     0043  2844               	nop2
  1133     0044                     l1044:
  1134                           
  1135                           ;LCD.c: 79:   LCD_Command(0x03);
  1136     0044  3003               	movlw	3
  1137     0045  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1138     004A                     l1046:
  1139                           
  1140                           ;LCD.c: 80:   _delay((unsigned long)((5)*(4000000/4000.0)));
  1141     004A  3007               	movlw	7
  1142     004B  1283               	bcf	3,5	;RP0=0, select bank0
  1143     004C  1303               	bcf	3,6	;RP1=0, select bank0
  1144     004D  00B6               	movwf	??_LCD_Init+1
  1145     004E  307C               	movlw	124
  1146     004F  00B5               	movwf	??_LCD_Init
  1147     0050                     u477:
  1148     0050  0BB5               	decfsz	??_LCD_Init,f
  1149     0051  2850               	goto	u477
  1150     0052  0BB6               	decfsz	??_LCD_Init+1,f
  1151     0053  2850               	goto	u477
  1152     0054  0000               	nop
  1153     0055                     l1048:
  1154                           
  1155                           ;LCD.c: 81:   LCD_Command(0x03);
  1156     0055  3003               	movlw	3
  1157     0056  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1158     005B                     l1050:
  1159                           
  1160                           ;LCD.c: 82:   _delay((unsigned long)((150)*(4000000/4000000.0)));
  1161     005B  3031               	movlw	49
  1162     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1163     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1164     005E  00B5               	movwf	??_LCD_Init
  1165     005F                     u487:
  1166     005F  0BB5               	decfsz	??_LCD_Init,f
  1167     0060  285F               	goto	u487
  1168     0061                     l1052:
  1169                           
  1170                           ;LCD.c: 83:   LCD_Command(0x03);
  1171     0061  3003               	movlw	3
  1172     0062  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1173     0067                     l1054:
  1174                           
  1175                           ;LCD.c: 84:   LCD_Command(0x02);
  1176     0067  3002               	movlw	2
  1177     0068  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1178     006D                     l1056:
  1179                           
  1180                           ;LCD.c: 85:   LCD_Command(0x02);
  1181     006D  3002               	movlw	2
  1182     006E  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1183     0073                     l1058:
  1184                           
  1185                           ;LCD.c: 86:   LCD_Command(0x08);
  1186     0073  3008               	movlw	8
  1187     0074  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1188     0079                     l1060:
  1189                           
  1190                           ;LCD.c: 87:   LCD_Command(0x00);
  1191     0079  3000               	movlw	0
  1192     007A  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1193     007F                     l1062:
  1194                           
  1195                           ;LCD.c: 88:   LCD_Command(0x0C);
  1196     007F  300C               	movlw	12
  1197     0080  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1198     0085                     l1064:
  1199                           
  1200                           ;LCD.c: 89:   LCD_Command(0x00);
  1201     0085  3000               	movlw	0
  1202     0086  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1203     008B                     l1066:
  1204                           
  1205                           ;LCD.c: 90:   LCD_Command(0x06);
  1206     008B  3006               	movlw	6
  1207     008C  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1208     0091                     l39:
  1209     0091  0008               	return
  1210     0092                     __end_of_LCD_Init:
  1211                           
  1212                           	psect	text6
  1213     0200                     __ptext6:	
  1214 ;; *************** function _LCD_Clear *****************
  1215 ;; Defined at:
  1216 ;;		line 93 in file "LCD.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 3
  1237 ;; This function calls:
  1238 ;;		_LCD_Command
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244     0200                     _LCD_Clear:	
  1245                           ;psect for function _LCD_Clear
  1246                           
  1247     0200                     l1068:	
  1248                           ;incstack = 0
  1249                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1250                           
  1251                           
  1252                           ;LCD.c: 94:     LCD_Command(0);
  1253     0200  3000               	movlw	0
  1254     0201  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1255                           
  1256                           ;LCD.c: 95:     LCD_Command(1);
  1257     0206  3001               	movlw	1
  1258     0207  120A  118A  21EA  120A  118A  	fcall	_LCD_Command
  1259     020C                     l42:
  1260     020C  0008               	return
  1261     020D                     __end_of_LCD_Clear:
  1262                           
  1263                           	psect	text7
  1264     01EA                     __ptext7:	
  1265 ;; *************** function _LCD_Command *****************
  1266 ;; Defined at:
  1267 ;;		line 12 in file "LCD.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  CMD             1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  CMD             1    6[COMMON] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0
  1283 ;;      Temps:          1       0       0       0       0
  1284 ;;      Totals:         2       0       0       0       0
  1285 ;;Total ram usage:        2 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 2
  1288 ;; This function calls:
  1289 ;;		_LCD_DATA
  1290 ;; This function is called by:
  1291 ;;		_LCD_Init
  1292 ;;		_LCD_Clear
  1293 ;;		_LCD_Set_Cursor
  1294 ;;		_LCD_SL
  1295 ;;		_LCD_SR
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299     01EA                     _LCD_Command:	
  1300                           ;psect for function _LCD_Command
  1301                           
  1302                           
  1303                           ;incstack = 0
  1304                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  1305                           ;LCD_Command@CMD stored from wreg
  1306     01EA  00F6               	movwf	LCD_Command@CMD
  1307     01EB                     l998:
  1308                           
  1309                           ;LCD.c: 14:     RB5 = 0;
  1310     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1311     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1312     01ED  1286               	bcf	6,5	;volatile
  1313     01EE                     l1000:
  1314                           
  1315                           ;LCD.c: 16:     LCD_DATA(CMD);
  1316     01EE  0876               	movf	LCD_Command@CMD,w
  1317     01EF  120A  118A  21B0  120A  118A  	fcall	_LCD_DATA
  1318     01F4                     l1002:
  1319                           
  1320                           ;LCD.c: 18:     RB4 = 1;
  1321     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1322     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1323     01F6  1606               	bsf	6,4	;volatile
  1324     01F7                     l1004:
  1325                           
  1326                           ;LCD.c: 19:     _delay((unsigned long)((500)*(4000000/4000000.0)));
  1327     01F7  30A6               	movlw	166
  1328     01F8  00F5               	movwf	??_LCD_Command
  1329     01F9                     u497:
  1330     01F9  0BF5               	decfsz	??_LCD_Command,f
  1331     01FA  29F9               	goto	u497
  1332     01FB  0000               	nop
  1333     01FC                     l1006:
  1334                           
  1335                           ;LCD.c: 20:     RB4 = 0;
  1336     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1337     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1338     01FE  1206               	bcf	6,4	;volatile
  1339     01FF                     l25:
  1340     01FF  0008               	return
  1341     0200                     __end_of_LCD_Command:
  1342                           
  1343                           	psect	text8
  1344     01B0                     __ptext8:	
  1345 ;; *************** function _LCD_DATA *****************
  1346 ;; Defined at:
  1347 ;;		line 23 in file "LCD.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  Data            1    wreg     unsigned char 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  Data            1    4[COMMON] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       0       0       0       0
  1362 ;;      Locals:         1       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0
  1364 ;;      Totals:         1       0       0       0       0
  1365 ;;Total ram usage:        1 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_LCD_Command
  1372 ;;		_LCD_Init
  1373 ;;		_LCD_Write_Char
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     01B0                     _LCD_DATA:	
  1378                           ;psect for function _LCD_DATA
  1379                           
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _LCD_DATA: [wreg]
  1383                           ;LCD_DATA@Data stored from wreg
  1384     01B0  00F4               	movwf	LCD_DATA@Data
  1385     01B1                     l988:
  1386                           
  1387                           ;LCD.c: 25:   if(Data & 1)
  1388     01B1  1C74               	btfss	LCD_DATA@Data,0
  1389     01B2  29B4               	goto	u291
  1390     01B3  29B5               	goto	u290
  1391     01B4                     u291:
  1392     01B4  29B9               	goto	l28
  1393     01B5                     u290:
  1394     01B5                     l990:
  1395                           
  1396                           ;LCD.c: 26:     RB0 = 1;
  1397     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1398     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1399     01B7  1406               	bsf	6,0	;volatile
  1400     01B8  29BC               	goto	l29
  1401     01B9                     l28:	
  1402                           ;LCD.c: 27:   else
  1403                           
  1404                           
  1405                           ;LCD.c: 28:     RB0 = 0;
  1406     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1407     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1408     01BB  1006               	bcf	6,0	;volatile
  1409     01BC                     l29:
  1410                           
  1411                           ;LCD.c: 29:   if(Data & 2)
  1412     01BC  1CF4               	btfss	LCD_DATA@Data,1
  1413     01BD  29BF               	goto	u301
  1414     01BE  29C0               	goto	u300
  1415     01BF                     u301:
  1416     01BF  29C2               	goto	l30
  1417     01C0                     u300:
  1418     01C0                     l992:
  1419                           
  1420                           ;LCD.c: 30:     RB1 = 1;
  1421     01C0  1486               	bsf	6,1	;volatile
  1422     01C1  29C3               	goto	l31
  1423     01C2                     l30:	
  1424                           ;LCD.c: 31:   else
  1425                           
  1426                           
  1427                           ;LCD.c: 32:     RB1 = 0;
  1428     01C2  1086               	bcf	6,1	;volatile
  1429     01C3                     l31:
  1430                           
  1431                           ;LCD.c: 33:   if(Data & 4)
  1432     01C3  1D74               	btfss	LCD_DATA@Data,2
  1433     01C4  29C6               	goto	u311
  1434     01C5  29C7               	goto	u310
  1435     01C6                     u311:
  1436     01C6  29C9               	goto	l32
  1437     01C7                     u310:
  1438     01C7                     l994:
  1439                           
  1440                           ;LCD.c: 34:     RB2 = 1;
  1441     01C7  1506               	bsf	6,2	;volatile
  1442     01C8  29CA               	goto	l33
  1443     01C9                     l32:	
  1444                           ;LCD.c: 35:   else
  1445                           
  1446                           
  1447                           ;LCD.c: 36:     RB2 = 0;
  1448     01C9  1106               	bcf	6,2	;volatile
  1449     01CA                     l33:
  1450                           
  1451                           ;LCD.c: 37:   if(Data & 8)
  1452     01CA  1DF4               	btfss	LCD_DATA@Data,3
  1453     01CB  29CD               	goto	u321
  1454     01CC  29CE               	goto	u320
  1455     01CD                     u321:
  1456     01CD  29D0               	goto	l34
  1457     01CE                     u320:
  1458     01CE                     l996:
  1459                           
  1460                           ;LCD.c: 38:     RB3 = 1;
  1461     01CE  1586               	bsf	6,3	;volatile
  1462     01CF  29D1               	goto	l36
  1463     01D0                     l34:	
  1464                           ;LCD.c: 39:   else
  1465                           
  1466                           
  1467                           ;LCD.c: 40:     RB3 = 0;
  1468     01D0  1186               	bcf	6,3	;volatile
  1469     01D1                     l36:
  1470     01D1  0008               	return
  1471     01D2                     __end_of_LCD_DATA:
  1472                           
  1473                           	psect	text9
  1474     018B                     __ptext9:	
  1475 ;; *************** function _ISR *****************
  1476 ;; Defined at:
  1477 ;;		line 74 in file "main.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          4       0       0       0       0
  1494 ;;      Totals:         4       0       0       0       0
  1495 ;;Total ram usage:        4 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		Interrupt level 1
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504     018B                     _ISR:	
  1505                           ;psect for function _ISR
  1506                           
  1507     018B                     i1l974:
  1508                           
  1509                           ;main.c: 75:      if(SSPIF){
  1510     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1511     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1512     018D  1D8C               	btfss	12,3	;volatile
  1513     018E  2990               	goto	u27_21
  1514     018F  2991               	goto	u27_20
  1515     0190                     u27_21:
  1516     0190  29A5               	goto	i1l144
  1517     0191                     u27_20:
  1518     0191                     i1l976:
  1519                           
  1520                           ;main.c: 76:     SSPIF=0;
  1521     0191  118C               	bcf	12,3	;volatile
  1522     0192                     i1l978:
  1523                           
  1524                           ;main.c: 77:         string[i]=SSPBUF;
  1525     0192  0878               	movf	_i,w
  1526     0193  3E21               	addlw	(low (_string| 0))& (0+255)
  1527     0194  0084               	movwf	4
  1528     0195  0813               	movf	19,w	;volatile
  1529     0196  1383               	bcf	3,7	;select IRP bank0
  1530     0197  0080               	movwf	0
  1531     0198                     i1l980:
  1532                           
  1533                           ;main.c: 78:         i++;
  1534     0198  3001               	movlw	1
  1535     0199  00FF               	movwf	btemp+1
  1536     019A  087F               	movf	btemp+1,w
  1537     019B  07F8               	addwf	_i,f
  1538     019C                     i1l982:
  1539                           
  1540                           ;main.c: 79:         if(i>=LEN){
  1541     019C  0879               	movf	_LEN,w
  1542     019D  0278               	subwf	_i,w
  1543     019E  1C03               	skipc
  1544     019F  29A1               	goto	u28_21
  1545     01A0  29A2               	goto	u28_20
  1546     01A1                     u28_21:
  1547     01A1  29A5               	goto	i1l144
  1548     01A2                     u28_20:
  1549     01A2                     i1l984:
  1550                           
  1551                           ;main.c: 80:             LCD_Flag=1;
  1552     01A2  01A0               	clrf	_LCD_Flag
  1553     01A3  0AA0               	incf	_LCD_Flag,f
  1554     01A4                     i1l986:
  1555                           
  1556                           ;main.c: 81:             i=0;
  1557     01A4  01F8               	clrf	_i
  1558     01A5                     i1l144:
  1559     01A5  0873               	movf	??_ISR+3,w
  1560     01A6  00FF               	movwf	btemp+1
  1561     01A7  0872               	movf	??_ISR+2,w
  1562     01A8  008A               	movwf	10
  1563     01A9  0871               	movf	??_ISR+1,w
  1564     01AA  0084               	movwf	4
  1565     01AB  0E70               	swapf	??_ISR,w
  1566     01AC  0083               	movwf	3
  1567     01AD  0EFE               	swapf	btemp,f
  1568     01AE  0E7E               	swapf	btemp,w
  1569     01AF  0009               	retfie
  1570     01B0                     __end_of_ISR:
  1571     007E                     btemp	set	126	;btemp
  1572     007E                     wtemp0	set	126
  1573                           
  1574                           	psect	intentry
  1575     0004                     __pintentry:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
  1578                           
  1579     0004                     interrupt_function:
  1580     007E                     saved_w	set	btemp
  1581     0004  00FE               	movwf	btemp
  1582     0005  0E03               	swapf	3,w
  1583     0006  00F0               	movwf	??_ISR
  1584     0007  0804               	movf	4,w
  1585     0008  00F1               	movwf	??_ISR+1
  1586     0009  080A               	movf	10,w
  1587     000A  00F2               	movwf	??_ISR+2
  1588     000B  087F               	movf	btemp+1,w
  1589     000C  00F3               	movwf	??_ISR+3
  1590     000D  120A  118A  298B   	ljmp	_ISR
  1591                           
  1592                           	psect	config
  1593                           
  1594                           ;Config register CONFIG @ 0x2007
  1595                           ;	Oscillator Selection bits
  1596                           ;	FOSC = XT, XT oscillator
  1597                           ;	Watchdog Timer Enable bit
  1598                           ;	WDTE = OFF, WDT disabled
  1599                           ;	Power-up Timer Enable bit
  1600                           ;	PWRTE = ON, PWRT enabled
  1601                           ;	Brown-out Reset Enable bit
  1602                           ;	BOREN = ON, BOR enabled
  1603                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1604                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1605                           ;	Data EEPROM Memory Code Protection bit
  1606                           ;	CPD = OFF, Data EEPROM code protection off
  1607                           ;	Flash Program Memory Write Enable bits
  1608                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1609                           ;	In-Circuit Debugger Mode bit
  1610                           ;	DEBUG = 0x1, unprogrammed default
  1611                           ;	Flash Program Memory Code Protection bit
  1612                           ;	CP = OFF, Code protection off
  1613     2007                     	org	8199
  1614     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      6      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 20
		 -> string(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_LCD_DATA

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1669
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                     _SPI_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     4     4      0     420
                                              6 COMMON     1     1      0
                                              3 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       6     5      1     815
                                              7 COMMON     1     0      1
                                              0 BANK0      5     5      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     279
                                              0 BANK0      2     2      0
                        _LCD_Command
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     155
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     155
                                              5 COMMON     2     2      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
       _LCD_DATA
   _LCD_Init
     _LCD_Command
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_Command
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA
   _SPI_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 25 22:06:18 2024

                       _i 0078              ?_LCD_Command 0070                        l30 01C2  
                      l31 01C3                        l32 01C9                        l33 01CA  
                      l25 01FF                        l34 01D0                        l42 020C  
                      l50 0165                        l36 01D1                        l28 01B9  
                      l29 01BC                        l39 0091                        l47 00DE  
                      l56 018A                        fsr 0004                       l137 01E9  
                     _CKE 04A6                       l948 01D2                       l990 01B5  
                     l992 01C0                       l994 01C7                       _CKP 00A4  
                     _GIE 005F                       l996 01CE                       l988 01B1  
                     l998 01EB                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RC0 0038                       _RB3 0033  
                     _RB4 0034                       _RB5 0035                       _LEN 0079  
                     u300 01C0                       u301 01BF                       u310 01C7  
                     u311 01C6                       u320 01CE                       u400 0110  
                     u321 01CD                       u401 010F                       u340 009A  
                     u341 0099                       u335 0132                       u360 00C0  
                     u361 00BF                       u417 0142                       u290 01B5  
                     u291 01B4                       u355 00A0                       u427 014A  
                     u380 018A                       _ISR 018B                       u437 015A  
                     u381 0189                       u390 00FC                       u375 00C6  
                     u447 0162                       u391 00FB                       u457 0038  
                     u467 0041                       u477 0050                       u487 005F  
                     u497 01F9                       _SMP 04A7                       fsr0 0004  
                     indf 0000                      ?_ISR 0070            _LCD_Set_Cursor 0092  
                    l1000 01EE                      l1002 01F4                      l1010 012E  
                    l1004 01F7                      l1020 0148                      l1012 012F  
                    l1006 01FC                      l1030 0160                      l1022 014D  
                    l1014 013D                      l1110 00F6                      l1102 00DF  
                    l1040 0032                      l1032 0027                      l1024 0155  
                    l1016 0140                      l1008 0128                      l1120 011E  
                    l1112 00FC                      l1104 00E4                      l1050 005B  
                    l1042 003D                      l1034 002A                      l1026 0158  
                    l1018 0145                      l1114 0109                      l1106 00E9  
                    l1060 0079                      l1052 0061                      l1044 0044  
                    l1036 002B                      l1028 015D                      l1116 0110  
                    l1108 00EE                      l1062 007F                      l1054 0067  
                    l1046 004A                      l1038 002C                      l1070 0095  
                    l1118 0118                      l1064 0085                      l1056 006D  
                    l1048 0055                      l1072 009A                      l1080 00B8  
                    l1066 008B                      l1058 0073                      l1082 00C0  
                    l1074 00A7                      l1090 0169                      l1068 0200  
                    l1084 00CD                      l1076 00AA                      l1092 016C  
                    l1086 00D0                      l1078 00B0                      l1094 0177  
                    l1088 00D6                      l1096 017F       LCD_Write_String@str 0038  
                    _PEIE 005E         ?_LCD_Write_String 0070                      _main 00DF  
                    btemp 007E            _SPI_Slave_Init 01D2                      start 0010  
      ??_LCD_Write_String 0076                     ??_ISR 0070          __end_of_LCD_DATA 01D2  
        __end_of_LCD_Init 0092                     ?_main 0070                     _PCFG0 04F8  
                   _PCFG1 04F9                     _PCFG2 04FA                     _PCFG3 04FB  
                   i1l144 01A5                     i1l980 0198                     i1l982 019C  
                   i1l974 018B                     i1l984 01A2                     i1l976 0191  
                   i1l986 01A4                     i1l978 0192                     u27_20 0191  
                   u27_21 0190                     u28_20 01A2                     u28_21 01A1  
                   _SSPM0 00A0                     _SSPM1 00A1                     _SSPM2 00A2  
                   _SSPM3 00A3                     _TRISB 0086                     _SSPIE 0463  
                   _SSPEN 00A5                     _SSPIF 0063    __end_of_LCD_Set_Cursor 00DF  
                   pclath 000A    __end_of_SPI_Slave_Init 01EA                     status 0003  
                   wtemp0 007E            _LCD_Write_Char 0125           __initialization 0013  
            __end_of_main 0125                    ??_main 0078         __end_of_LCD_Clear 020D  
         ?_LCD_Set_Cursor 0077           ?_SPI_Slave_Init 0070                    _TRISA5 042D  
                  _TRISB4 0434                    _TRISB5 0435                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPBUF 0013  
  __end_of_LCD_Write_Char 0166                    _string 0021              __pdataCOMMON 0079  
                  saved_w 007E           LCD_Set_Cursor@c 0077           LCD_Set_Cursor@r 0036  
               ?_LCD_DATA 0070   __end_of__initialization 0023                 ?_LCD_Init 0070  
         ?_LCD_Write_Char 0070            __pcstackCOMMON 0070                __pbssBANK0 0020  
              ??_LCD_DATA 0074                ??_LCD_Init 0035                __pmaintext 00DF  
              __pintentry 0004          ??_LCD_Set_Cursor 0035                   __ptext1 01D2  
                 __ptext2 0166                   __ptext3 0125                   __ptext4 0092  
                 __ptext5 0027                   __ptext6 0200                   __ptext7 01EA  
                 __ptext8 01B0                   __ptext9 018B                 _LCD_Clear 0200  
        ??_SPI_Slave_Init 0074                   clrloop0 020E      end_of_initialization 0023  
          LCD_Command@CMD 0076                ?_LCD_Clear 0070         LCD_Write_String@i 0039  
        ??_LCD_Write_Char 0075             ??_LCD_Command 0075          _LCD_Write_String 0166  
           __pidataCOMMON 0215       start_initialization 0013               __end_of_ISR 01B0  
     __end_of_LCD_Command 0200               __pbssCOMMON 0078                 ___latbits 0002  
           __pcstackBANK0 0035               ??_LCD_Clear 0077                  _LCD_DATA 01B0  
                _LCD_Flag 0020         interrupt_function 0004                  _LCD_Init 0027  
               clear_ram0 020D               _LCD_Command 01EA  __end_of_LCD_Write_String 018B  
     LCD_Write_Char@High4 0036       LCD_Set_Cursor@High4 0038        LCD_Write_Char@Data 0037  
      LCD_Write_Char@Low4 0035                  intlevel1 0000        LCD_Set_Cursor@Low4 0037  
      LCD_Set_Cursor@Temp 0039              LCD_DATA@Data 0074  
