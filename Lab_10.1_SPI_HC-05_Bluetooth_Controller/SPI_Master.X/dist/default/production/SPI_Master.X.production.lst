

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 15 16:29:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     001A                     _RCREG	set	26
   172     0013                     _SSPBUF	set	19
   173     0008                     _PORTD	set	8
   174     0065                     _RCIF	set	101
   175     00C4                     _CREN	set	196
   176     005F                     _GIE	set	95
   177     005E                     _PEIE	set	94
   178     00C7                     _SPEN	set	199
   179     00A4                     _CKP	set	164
   180     00A5                     _SSPEN	set	165
   181     00A0                     _SSPM0	set	160
   182     00A1                     _SSPM1	set	161
   183     00A2                     _SSPM2	set	162
   184     00A3                     _SSPM3	set	163
   185     0099                     _SPBRG	set	153
   186     0088                     _TRISD	set	136
   187     0465                     _RCIE	set	1125
   188     043F                     _TRISC7	set	1087
   189     043E                     _TRISC6	set	1086
   190     04C4                     _SYNC	set	1220
   191     04C2                     _BRGH	set	1218
   192     043D                     _TRISC5	set	1085
   193     043C                     _TRISC4	set	1084
   194     043B                     _TRISC3	set	1083
   195     04A7                     _SMP	set	1191
   196     04A6                     _CKE	set	1190
   197                           
   198                           	psect	cinit
   199     0011                     start_initialization:	
   200                           ; #config settings
   201                           
   202     0011                     __initialization:
   203                           
   204                           ; Clear objects allocated to COMMON
   205     0011  01F4               	clrf	__pbssCOMMON& (0+127)
   206     0012  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   207     0013                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210     0013                     __end_of__initialization:
   211     0013  0183               	clrf	3
   212     0014  120A  118A  2849   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMMON
   215     0074                     __pbssCOMMON:
   216     0074                     _UART_Buffer:
   217     0074                     	ds	1
   218     0075                     _data:
   219     0075                     	ds	1
   220                           
   221                           	psect	cstackCOMMON
   222     0070                     __pcstackCOMMON:
   223     0070                     ?_SPI_Master_init:
   224     0070                     ?_UART_RX_Init:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_port_init:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_SPI_Write_data:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_SPI_Write_data:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_ISR:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     SPI_Write_data@data:	
   243                           ; 1 bytes @ 0x0
   244                           
   245                           
   246                           ; 1 bytes @ 0x0
   247     0070                     	ds	1
   248     0071                     ??_ISR:
   249                           
   250                           ; 1 bytes @ 0x1
   251     0071                     	ds	3
   252     0074                     ??_SPI_Master_init:
   253     0074                     ??_UART_RX_Init:	
   254                           ; 1 bytes @ 0x4
   255                           
   256     0074                     ??_port_init:	
   257                           ; 1 bytes @ 0x4
   258                           
   259     0074                     ??_main:	
   260                           ; 1 bytes @ 0x4
   261                           
   262                           
   263                           	psect	maintext
   264     0049                     __pmaintext:	
   265                           ; 1 bytes @ 0x4
   266 ;;
   267 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   268 ;;
   269 ;; *************** function _main *****************
   270 ;; Defined at:
   271 ;;		line 35 in file "main.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : B00/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   285 ;;      Params:         0       0       0       0       0
   286 ;;      Locals:         0       0       0       0       0
   287 ;;      Temps:          0       0       0       0       0
   288 ;;      Totals:         0       0       0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels required when called: 3
   291 ;; This function calls:
   292 ;;		_SPI_Master_init
   293 ;;		_UART_RX_Init
   294 ;;		_port_init
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300     0049                     _main:	
   301                           ;psect for function _main
   302                           
   303     0049                     l661:	
   304                           ;incstack = 0
   305                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   306                           
   307                           
   308                           ;main.c: 36: SPI_Master_init();
   309     0049  120A  118A  2074  120A  118A  	fcall	_SPI_Master_init
   310     004E                     l663:
   311                           
   312                           ;main.c: 37: UART_RX_Init();
   313     004E  120A  118A  2060  120A  118A  	fcall	_UART_RX_Init
   314     0053                     l665:
   315                           
   316                           ;main.c: 38: port_init();
   317     0053  120A  118A  2084  120A  118A  	fcall	_port_init
   318     0058                     l667:
   319                           
   320                           ;main.c: 40: PORTD=data;
   321     0058  0875               	movf	_data,w
   322     0059  1283               	bcf	3,5	;RP0=0, select bank0
   323     005A  1303               	bcf	3,6	;RP1=0, select bank0
   324     005B  0088               	movwf	8	;volatile
   325     005C  2858               	goto	l667
   326     005D  120A  118A  280E   	ljmp	start
   327     0060                     __end_of_main:
   328                           
   329                           	psect	text1
   330     0084                     __ptext1:	
   331 ;; *************** function _port_init *****************
   332 ;; Defined at:
   333 ;;		line 29 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, btemp+1
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   347 ;;      Params:         0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels used: 1
   353 ;; Hardware stack levels required when called: 2
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361     0084                     _port_init:	
   362                           ;psect for function _port_init
   363                           
   364     0084                     l633:	
   365                           ;incstack = 0
   366                           ; Regs used in _port_init: [wreg+status,2+status,0+btemp+1]
   367                           
   368                           
   369                           ;main.c: 30: TRISD&=~0x0F;
   370     0084  30F0               	movlw	240
   371     0085  00FF               	movwf	btemp+1
   372     0086  087F               	movf	btemp+1,w
   373     0087  1683               	bsf	3,5	;RP0=1, select bank1
   374     0088  1303               	bcf	3,6	;RP1=0, select bank1
   375     0089  0588               	andwf	8,f	;volatile
   376     008A                     l635:
   377                           
   378                           ;main.c: 31: PORTD=0;
   379     008A  1283               	bcf	3,5	;RP0=0, select bank0
   380     008B  1303               	bcf	3,6	;RP1=0, select bank0
   381     008C  0188               	clrf	8	;volatile
   382     008D                     l63:
   383     008D  0008               	return
   384     008E                     __end_of_port_init:
   385                           
   386                           	psect	text2
   387     0060                     __ptext2:	
   388 ;; *************** function _UART_RX_Init *****************
   389 ;; Defined at:
   390 ;;		line 78 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; Hardware stack levels required when called: 2
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418     0060                     _UART_RX_Init:	
   419                           ;psect for function _UART_RX_Init
   420                           
   421     0060                     l639:	
   422                           ;incstack = 0
   423                           ; Regs used in _UART_RX_Init: [wreg]
   424                           
   425                           
   426                           ;main.c: 79:   BRGH = 1;
   427     0060  1683               	bsf	3,5	;RP0=1, select bank1
   428     0061  1303               	bcf	3,6	;RP1=0, select bank1
   429     0062  1518               	bsf	24,2	;volatile
   430     0063                     l641:
   431                           
   432                           ;main.c: 80:   SPBRG = 25;
   433     0063  3019               	movlw	25
   434     0064  0099               	movwf	25	;volatile
   435     0065                     l643:
   436                           
   437                           ;main.c: 82:   SYNC = 0;
   438     0065  1218               	bcf	24,4	;volatile
   439     0066                     l645:
   440                           
   441                           ;main.c: 83:   SPEN = 1;
   442     0066  1283               	bcf	3,5	;RP0=0, select bank0
   443     0067  1303               	bcf	3,6	;RP1=0, select bank0
   444     0068  1798               	bsf	24,7	;volatile
   445     0069                     l647:
   446                           
   447                           ;main.c: 85:   TRISC6 = 1;
   448     0069  1683               	bsf	3,5	;RP0=1, select bank1
   449     006A  1303               	bcf	3,6	;RP1=0, select bank1
   450     006B  1707               	bsf	7,6	;volatile
   451     006C                     l649:
   452                           
   453                           ;main.c: 86:   TRISC7 = 1;
   454     006C  1787               	bsf	7,7	;volatile
   455     006D                     l651:
   456                           
   457                           ;main.c: 88:   RCIE = 1;
   458     006D  168C               	bsf	12,5	;volatile
   459     006E                     l653:
   460                           
   461                           ;main.c: 89:   PEIE = 1;
   462     006E  170B               	bsf	11,6	;volatile
   463     006F                     l655:
   464                           
   465                           ;main.c: 90:   GIE = 1;
   466     006F  178B               	bsf	11,7	;volatile
   467     0070                     l657:
   468                           
   469                           ;main.c: 92:   CREN = 1;
   470     0070  1283               	bcf	3,5	;RP0=0, select bank0
   471     0071  1303               	bcf	3,6	;RP1=0, select bank0
   472     0072  1618               	bsf	24,4	;volatile
   473     0073                     l80:
   474     0073  0008               	return
   475     0074                     __end_of_UART_RX_Init:
   476                           
   477                           	psect	text3
   478     0074                     __ptext3:	
   479 ;; *************** function _SPI_Master_init *****************
   480 ;; Defined at:
   481 ;;		line 47 in file "main.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		None
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 2
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509     0074                     _SPI_Master_init:	
   510                           ;psect for function _SPI_Master_init
   511                           
   512     0074                     l637:	
   513                           ;incstack = 0
   514                           ; Regs used in _SPI_Master_init: []
   515                           
   516                           
   517                           ;main.c: 49: SSPM3=0;
   518     0074  1283               	bcf	3,5	;RP0=0, select bank0
   519     0075  1303               	bcf	3,6	;RP1=0, select bank0
   520     0076  1194               	bcf	20,3	;volatile
   521                           
   522                           ;main.c: 50: SSPM2=0;
   523     0077  1114               	bcf	20,2	;volatile
   524                           
   525                           ;main.c: 51: SSPM1=0;
   526     0078  1094               	bcf	20,1	;volatile
   527                           
   528                           ;main.c: 52: SSPM0=0;
   529     0079  1014               	bcf	20,0	;volatile
   530                           
   531                           ;main.c: 55: SSPEN=1;
   532     007A  1694               	bsf	20,5	;volatile
   533                           
   534                           ;main.c: 58: CKP=0;
   535     007B  1214               	bcf	20,4	;volatile
   536                           
   537                           ;main.c: 59: CKE=0;
   538     007C  1683               	bsf	3,5	;RP0=1, select bank1
   539     007D  1303               	bcf	3,6	;RP1=0, select bank1
   540     007E  1314               	bcf	20,6	;volatile
   541                           
   542                           ;main.c: 62: SMP=0;
   543     007F  1394               	bcf	20,7	;volatile
   544                           
   545                           ;main.c: 65: TRISC3=0;
   546     0080  1187               	bcf	7,3	;volatile
   547                           
   548                           ;main.c: 66: TRISC4=1;
   549     0081  1607               	bsf	7,4	;volatile
   550                           
   551                           ;main.c: 67: TRISC5=0;
   552     0082  1287               	bcf	7,5	;volatile
   553     0083                     l74:
   554     0083  0008               	return
   555     0084                     __end_of_SPI_Master_init:
   556                           
   557                           	psect	text4
   558     0017                     __ptext4:	
   559 ;; *************** function _ISR *****************
   560 ;; Defined at:
   561 ;;		line 97 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          3       0       0       0       0
   578 ;;      Totals:         3       0       0       0       0
   579 ;;Total ram usage:        3 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; Hardware stack levels required when called: 1
   582 ;; This function calls:
   583 ;;		_SPI_Write_data
   584 ;; This function is called by:
   585 ;;		Interrupt level 1
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589     0017                     _ISR:	
   590                           ;psect for function _ISR
   591                           
   592     0017                     i1l669:
   593                           
   594                           ;main.c: 98:   if (RCIF == 1)
   595     0017  1283               	bcf	3,5	;RP0=0, select bank0
   596     0018  1303               	bcf	3,6	;RP1=0, select bank0
   597     0019  1E8C               	btfss	12,5	;volatile
   598     001A  281C               	goto	u1_21
   599     001B  281D               	goto	u1_20
   600     001C                     u1_21:
   601     001C  2840               	goto	i1l89
   602     001D                     u1_20:
   603     001D                     i1l671:
   604                           
   605                           ;main.c: 99:   {;main.c: 100:     UART_Buffer = RCREG;
   606     001D  081A               	movf	26,w	;volatile
   607     001E  00F4               	movwf	_UART_Buffer
   608     001F                     i1l673:
   609                           
   610                           ;main.c: 104:     if(UART_Buffer == 49)
   611     001F  3031               	movlw	49
   612     0020  0674               	xorwf	_UART_Buffer,w
   613     0021  1D03               	btfss	3,2
   614     0022  2824               	goto	u2_21
   615     0023  2825               	goto	u2_20
   616     0024                     u2_21:
   617     0024  2829               	goto	i1l677
   618     0025                     u2_20:
   619     0025                     i1l675:
   620                           
   621                           ;main.c: 105:       data++;
   622     0025  3001               	movlw	1
   623     0026  00FF               	movwf	btemp+1
   624     0027  087F               	movf	btemp+1,w
   625     0028  07F5               	addwf	_data,f
   626     0029                     i1l677:
   627                           
   628                           ;main.c: 106:     if(UART_Buffer == 50)
   629     0029  3032               	movlw	50
   630     002A  0674               	xorwf	_UART_Buffer,w
   631     002B  1D03               	btfss	3,2
   632     002C  282E               	goto	u3_21
   633     002D  282F               	goto	u3_20
   634     002E                     u3_21:
   635     002E  2831               	goto	i1l87
   636     002F                     u3_20:
   637     002F                     i1l679:
   638                           
   639                           ;main.c: 107:       data--;
   640     002F  3001               	movlw	1
   641     0030  02F5               	subwf	_data,f
   642     0031                     i1l87:
   643                           
   644                           ;main.c: 108:     if(UART_Buffer == 51)
   645     0031  3033               	movlw	51
   646     0032  0674               	xorwf	_UART_Buffer,w
   647     0033  1D03               	btfss	3,2
   648     0034  2836               	goto	u4_21
   649     0035  2837               	goto	u4_20
   650     0036                     u4_21:
   651     0036  283D               	goto	i1l683
   652     0037                     u4_20:
   653     0037                     i1l681:
   654                           
   655                           ;main.c: 109:       SPI_Write_data(data);
   656     0037  0875               	movf	_data,w
   657     0038  120A  118A  208E  120A  118A  	fcall	_SPI_Write_data
   658     003D                     i1l683:
   659                           
   660                           ;main.c: 111:     RCIF = 0;
   661     003D  1283               	bcf	3,5	;RP0=0, select bank0
   662     003E  1303               	bcf	3,6	;RP1=0, select bank0
   663     003F  128C               	bcf	12,5	;volatile
   664     0040                     i1l89:
   665     0040  0873               	movf	??_ISR+2,w
   666     0041  00FF               	movwf	btemp+1
   667     0042  0872               	movf	??_ISR+1,w
   668     0043  008A               	movwf	10
   669     0044  0E71               	swapf	??_ISR,w
   670     0045  0083               	movwf	3
   671     0046  0EFE               	swapf	btemp,f
   672     0047  0E7E               	swapf	btemp,w
   673     0048  0009               	retfie
   674     0049                     __end_of_ISR:
   675                           
   676                           	psect	intentry
   677     0004                     __pintentry:	
   678                           ;incstack = 0
   679                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   680                           
   681     0004                     interrupt_function:
   682     007E                     saved_w	set	btemp
   683     0004  00FE               	movwf	btemp
   684     0005  0E03               	swapf	3,w
   685     0006  00F1               	movwf	??_ISR
   686     0007  080A               	movf	10,w
   687     0008  00F2               	movwf	??_ISR+1
   688     0009  087F               	movf	btemp+1,w
   689     000A  00F3               	movwf	??_ISR+2
   690     000B  120A  118A  2817   	ljmp	_ISR
   691                           
   692                           	psect	text5
   693     008E                     __ptext5:	
   694 ;; *************** function _SPI_Write_data *****************
   695 ;; Defined at:
   696 ;;		line 72 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  data            1    wreg     unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  data            1    0[COMMON] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0
   713 ;;      Totals:         1       0       0       0       0
   714 ;;Total ram usage:        1 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_ISR
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723     008E                     _SPI_Write_data:	
   724                           ;psect for function _SPI_Write_data
   725                           
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _SPI_Write_data: [wreg]
   729                           ;SPI_Write_data@data stored from wreg
   730     008E  00F0               	movwf	SPI_Write_data@data
   731     008F                     i1l659:
   732                           
   733                           ;main.c: 73: SSPBUF=data;
   734     008F  0870               	movf	SPI_Write_data@data,w
   735     0090  1283               	bcf	3,5	;RP0=0, select bank0
   736     0091  1303               	bcf	3,6	;RP1=0, select bank0
   737     0092  0093               	movwf	19	;volatile
   738     0093                     i1l77:
   739     0093  0008               	return
   740     0094                     __end_of_SPI_Write_data:
   741     007E                     btemp	set	126	;btemp
   742     007E                     wtemp0	set	126
   743                           
   744                           	psect	config
   745                           
   746                           ;Config register CONFIG @ 0x2007
   747                           ;	Oscillator Selection bits
   748                           ;	FOSC = XT, XT oscillator
   749                           ;	Watchdog Timer Enable bit
   750                           ;	WDTE = OFF, WDT disabled
   751                           ;	Power-up Timer Enable bit
   752                           ;	PWRTE = ON, PWRT enabled
   753                           ;	Brown-out Reset Enable bit
   754                           ;	BOREN = ON, BOR enabled
   755                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   756                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   757                           ;	Data EEPROM Memory Code Protection bit
   758                           ;	CPD = OFF, Data EEPROM code protection off
   759                           ;	Flash Program Memory Write Enable bits
   760                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   761                           ;	In-Circuit Debugger Mode bit
   762                           ;	DEBUG = 0x1, unprogrammed default
   763                           ;	Flash Program Memory Code Protection bit
   764                           ;	CP = OFF, Code protection off
   765     2007                     	org	8199
   766     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_SPI_Write_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _SPI_Master_init
                       _UART_RX_Init
                          _port_init
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                     _SPI_Write_data
 ---------------------------------------------------------------------------------
 (3) _SPI_Write_data                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_init
   _UART_RX_Init
   _port_init

 _ISR (ROOT)
   _SPI_Write_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 15 16:29:05 2024

        _SPI_Master_init 0074                       l63 008D                       l80 0073  
                     l74 0083                      l641 0063                      l633 0084  
                    l651 006D                      l643 0065                      l635 008A  
                    l637 0074                      l653 006E                      l645 0066  
                    l661 0049                      l655 006F                      l647 0069  
                    l639 0060                      l663 004E                      l657 0070  
                    l649 006C                      l665 0053                      l667 0058  
                    _CKE 04A6                      _CKP 00A4                      _GIE 005F  
                    _ISR 0017                      _SMP 04A7                     ?_ISR 0070  
                   _BRGH 04C2                     _CREN 00C4                     _PEIE 005E  
                   _RCIE 0465                     _RCIF 0065                     i1l77 0093  
                   i1l87 0031                     i1l89 0040                     _SPEN 00C7  
                   _SYNC 04C4                     u1_20 001D                     u1_21 001C  
                   u2_20 0025                     u2_21 0024                     u3_20 002F  
                   u3_21 002E                     u4_20 0037                     u4_21 0036  
                   _data 0075                     _main 0049                     btemp 007E  
                   start 000E                    ??_ISR 0071                    ?_main 0070  
                  i1l671 001D                    i1l681 0037                    i1l673 001F  
                  i1l659 008F                    i1l683 003D                    i1l675 0025  
                  i1l677 0029                    i1l669 0017                    i1l679 002F  
                  _RCREG 001A                    _SPBRG 0099                    _PORTD 0008  
                  _SSPM0 00A0                    _SSPM1 00A1                    _SSPM2 00A2  
                  _SSPM3 00A3                    _TRISD 0088                    _SSPEN 00A5  
                  pclath 000A                    status 0003                    wtemp0 007E  
__end_of_SPI_Master_init 0084          __initialization 0011           _SPI_Write_data 008E  
           __end_of_main 0060                   ??_main 0074                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _TRISC6 043E  
                 _TRISC7 043F                   _SSPBUF 0013   __end_of_SPI_Write_data 0094  
                 saved_w 007E  __end_of__initialization 0013          ?_SPI_Write_data 0070  
       ?_SPI_Master_init 0070           __pcstackCOMMON 0070               __pmaintext 0049  
             __pintentry 0004            ?_UART_RX_Init 0070                  __ptext1 0084  
                __ptext2 0060                  __ptext3 0074                  __ptext4 0017  
                __ptext5 008E           ??_UART_RX_Init 0074     end_of_initialization 0013  
      __end_of_port_init 008E         ??_SPI_Write_data 0070      start_initialization 0011  
            __end_of_ISR 0049     __end_of_UART_RX_Init 0074              __pbssCOMMON 0074  
              ___latbits 0002        interrupt_function 0004                _port_init 0084  
      ??_SPI_Master_init 0074               ?_port_init 0070             _UART_RX_Init 0060  
               intlevel1 0000              _UART_Buffer 0074              ??_port_init 0074  
     SPI_Write_data@data 0070  
